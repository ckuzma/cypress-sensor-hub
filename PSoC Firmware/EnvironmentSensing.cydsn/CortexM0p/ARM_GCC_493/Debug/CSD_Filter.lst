ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CSD_Filter.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CSD_FtInitialize,"ax",%progbits
  18              		.align	2
  19              		.global	CSD_FtInitialize
  20              		.code	16
  21              		.thumb_func
  22              		.type	CSD_FtInitialize, %function
  23              	CSD_FtInitialize:
  24              	.LFB1:
  25              		.file 1 "Generated_Source\\PSoC4\\CSD_Filter.c"
   1:Generated_Source\PSoC4/CSD_Filter.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CSD_Filter.c **** * \file     CSD_Filter.c
   3:Generated_Source\PSoC4/CSD_Filter.c **** * \version  3.0
   4:Generated_Source\PSoC4/CSD_Filter.c **** *
   5:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    This file contains the implementation source code to implement all 
   6:Generated_Source\PSoC4/CSD_Filter.c **** *           firmware filters.
   7:Generated_Source\PSoC4/CSD_Filter.c **** *
   8:Generated_Source\PSoC4/CSD_Filter.c **** * \see      CapSense P4 v3.0 Datasheet
   9:Generated_Source\PSoC4/CSD_Filter.c **** * 
  10:Generated_Source\PSoC4/CSD_Filter.c **** *//*****************************************************************************
  11:Generated_Source\PSoC4/CSD_Filter.c **** * Copyright (2016), Cypress Semiconductor Corporation.
  12:Generated_Source\PSoC4/CSD_Filter.c **** ********************************************************************************
  13:Generated_Source\PSoC4/CSD_Filter.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  14:Generated_Source\PSoC4/CSD_Filter.c **** * protected by and subject to worldwide patent protection (United States and
  15:Generated_Source\PSoC4/CSD_Filter.c **** * foreign), United States copyright laws and international treaty provisions.
  16:Generated_Source\PSoC4/CSD_Filter.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  17:Generated_Source\PSoC4/CSD_Filter.c **** * license to copy, use, modify, create derivative works of, and compile the
  18:Generated_Source\PSoC4/CSD_Filter.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  19:Generated_Source\PSoC4/CSD_Filter.c **** * custom software in support of licensee product to be used only in conjunction
  20:Generated_Source\PSoC4/CSD_Filter.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  21:Generated_Source\PSoC4/CSD_Filter.c **** * Any reproduction, modification, translation, compilation, or representation of
  22:Generated_Source\PSoC4/CSD_Filter.c **** * this software except as specified above is prohibited without the express
  23:Generated_Source\PSoC4/CSD_Filter.c **** * written permission of Cypress.
  24:Generated_Source\PSoC4/CSD_Filter.c **** *
  25:Generated_Source\PSoC4/CSD_Filter.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  26:Generated_Source\PSoC4/CSD_Filter.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  27:Generated_Source\PSoC4/CSD_Filter.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  28:Generated_Source\PSoC4/CSD_Filter.c **** * Cypress reserves the right to make changes without further notice to the
  29:Generated_Source\PSoC4/CSD_Filter.c **** * materials described herein. Cypress does not assume any liability arising out
  30:Generated_Source\PSoC4/CSD_Filter.c **** * of the application or use of any product or circuit described herein. Cypress
  31:Generated_Source\PSoC4/CSD_Filter.c **** * does not authorize its products for use as critical components in life-support
  32:Generated_Source\PSoC4/CSD_Filter.c **** * systems where a malfunction or failure may reasonably be expected to result in
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 2


  33:Generated_Source\PSoC4/CSD_Filter.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  34:Generated_Source\PSoC4/CSD_Filter.c **** * support systems application implies that the manufacturer assumes all risk of
  35:Generated_Source\PSoC4/CSD_Filter.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  36:Generated_Source\PSoC4/CSD_Filter.c **** * limited by and subject to the applicable Cypress software license agreement.
  37:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/CSD_Filter.c **** 
  39:Generated_Source\PSoC4/CSD_Filter.c **** #include "CSD_Filter.h"
  40:Generated_Source\PSoC4/CSD_Filter.c **** 
  41:Generated_Source\PSoC4/CSD_Filter.c **** #if (0 != (CSD_CSD_AUTOTUNE & CSD_CSD_SS_TH_EN))
  42:Generated_Source\PSoC4/CSD_Filter.c ****     #include "CSD_SmartSense_LL.h"
  43:Generated_Source\PSoC4/CSD_Filter.c **** #endif /* (0 != (CSD_CSD_AUTOTUNE & CSD_CSD_SS_TH_EN)) */
  44:Generated_Source\PSoC4/CSD_Filter.c **** 
  45:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
  46:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_FtInitialize
  47:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
  48:Generated_Source\PSoC4/CSD_Filter.c **** *
  49:Generated_Source\PSoC4/CSD_Filter.c **** * \brief
  50:Generated_Source\PSoC4/CSD_Filter.c **** *    Initializes all the firmware filter history, except the baseline filter.
  51:Generated_Source\PSoC4/CSD_Filter.c **** *
  52:Generated_Source\PSoC4/CSD_Filter.c **** * \details
  53:Generated_Source\PSoC4/CSD_Filter.c **** *    Initializes all the firmware filter history, except the baseline filter.
  54:Generated_Source\PSoC4/CSD_Filter.c **** *
  55:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
  56:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_FtInitialize(void)
  57:Generated_Source\PSoC4/CSD_Filter.c **** {
  26              		.loc 1 57 0
  27              		.cfi_startproc
  28 0000 90B5     		push	{r4, r7, lr}
  29              		.cfi_def_cfa_offset 12
  30              		.cfi_offset 4, -12
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 87B0     		sub	sp, sp, #28
  34              		.cfi_def_cfa_offset 40
  35 0004 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  58:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 widgetId;
  59:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 sensorId;
  60:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 sensorsNumber;
  61:Generated_Source\PSoC4/CSD_Filter.c **** 
  62:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_FLASH_WD_STRUCT const *ptrWidget;
  63:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_RAM_SNS_STRUCT *ptrSensor = NULL;
  37              		.loc 1 63 0
  38 0006 0023     		mov	r3, #0
  39 0008 FB60     		str	r3, [r7, #12]
  64:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_PTR_FILTER_VARIANT ptrFilterHistObj;
  65:Generated_Source\PSoC4/CSD_Filter.c ****     
  66:Generated_Source\PSoC4/CSD_Filter.c ****     #if CSD_CSD_AUTOTUNE & CSD_CSD_SS_TH_EN
  67:Generated_Source\PSoC4/CSD_Filter.c ****         CSD_RAM_WD_BASE_STRUCT *ptrWidgetRam;
  68:Generated_Source\PSoC4/CSD_Filter.c ****         SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
  69:Generated_Source\PSoC4/CSD_Filter.c ****     #endif /* #if CSD_CSD_AUTOTUNE & CSD_CSD_SS_TH_EN */
  70:Generated_Source\PSoC4/CSD_Filter.c ****     
  71:Generated_Source\PSoC4/CSD_Filter.c ****     for (widgetId = CSD_TOTAL_WIDGETS; widgetId-- > 0u;)
  40              		.loc 1 71 0
  41 000a 0123     		mov	r3, #1
  42 000c 7B61     		str	r3, [r7, #20]
  43 000e 34E0     		b	.L2
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 3


  44              	.L6:
  72:Generated_Source\PSoC4/CSD_Filter.c ****     {
  73:Generated_Source\PSoC4/CSD_Filter.c ****         ptrWidget = &CSD_dsFlash.wdgtArray[widgetId];
  45              		.loc 1 73 0
  46 0010 7A69     		ldr	r2, [r7, #20]
  47 0012 131C     		mov	r3, r2
  48 0014 DB00     		lsl	r3, r3, #3
  49 0016 9B1A     		sub	r3, r3, r2
  50 0018 9B00     		lsl	r3, r3, #2
  51 001a 1C4A     		ldr	r2, .L7
  52 001c 9B18     		add	r3, r3, r2
  53 001e BB60     		str	r3, [r7, #8]
  74:Generated_Source\PSoC4/CSD_Filter.c ****         
  75:Generated_Source\PSoC4/CSD_Filter.c ****         #if CSD_CSD_AUTOTUNE & CSD_CSD_SS_TH_EN
  76:Generated_Source\PSoC4/CSD_Filter.c ****             ptrWidgetRam = ptrWidget->ptr2WdgtRam;
  77:Generated_Source\PSoC4/CSD_Filter.c ****         #endif /* #if CSD_CSD_AUTOTUNE & CSD_CSD_SS_TH_EN */
  78:Generated_Source\PSoC4/CSD_Filter.c **** 
  79:Generated_Source\PSoC4/CSD_Filter.c ****         /* Find total amount of sensors in specified widget */   
  80:Generated_Source\PSoC4/CSD_Filter.c ****         sensorsNumber = CSD_GET_SNS_CNT_BY_PTR(ptrWidget);    
  54              		.loc 1 80 0
  55 0020 BB68     		ldr	r3, [r7, #8]
  56 0022 DB8A     		ldrh	r3, [r3, #22]
  57 0024 7B60     		str	r3, [r7, #4]
  81:Generated_Source\PSoC4/CSD_Filter.c ****     
  82:Generated_Source\PSoC4/CSD_Filter.c ****         for (sensorId = sensorsNumber; sensorId-- > 0u;) 
  58              		.loc 1 82 0
  59 0026 7B68     		ldr	r3, [r7, #4]
  60 0028 3B61     		str	r3, [r7, #16]
  61 002a 21E0     		b	.L3
  62              	.L5:
  83:Generated_Source\PSoC4/CSD_Filter.c ****         {
  84:Generated_Source\PSoC4/CSD_Filter.c ****             /* Find pointer to specified sensor object */
  85:Generated_Source\PSoC4/CSD_Filter.c ****             ptrSensor = ptrWidget->ptr2SnsRam;
  63              		.loc 1 85 0
  64 002c BB68     		ldr	r3, [r7, #8]
  65 002e 9B68     		ldr	r3, [r3, #8]
  66 0030 FB60     		str	r3, [r7, #12]
  86:Generated_Source\PSoC4/CSD_Filter.c ****             ptrSensor = &ptrSensor[sensorId];
  67              		.loc 1 86 0
  68 0032 3A69     		ldr	r2, [r7, #16]
  69 0034 131C     		mov	r3, r2
  70 0036 9B00     		lsl	r3, r3, #2
  71 0038 9B18     		add	r3, r3, r2
  72 003a 5B00     		lsl	r3, r3, #1
  73 003c 1A1C     		mov	r2, r3
  74 003e FB68     		ldr	r3, [r7, #12]
  75 0040 9B18     		add	r3, r3, r2
  76 0042 FB60     		str	r3, [r7, #12]
  87:Generated_Source\PSoC4/CSD_Filter.c ****                         
  88:Generated_Source\PSoC4/CSD_Filter.c ****             /* Find pointer to to specified filter sensor object */
  89:Generated_Source\PSoC4/CSD_Filter.c ****             ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
  77              		.loc 1 89 0
  78 0044 BB68     		ldr	r3, [r7, #8]
  79 0046 DB68     		ldr	r3, [r3, #12]
  80 0048 3B60     		str	r3, [r7]
  90:Generated_Source\PSoC4/CSD_Filter.c **** 
  91:Generated_Source\PSoC4/CSD_Filter.c ****             #if CSD_CSD_AUTOTUNE & CSD_CSD_SS_TH_EN
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 4


  92:Generated_Source\PSoC4/CSD_Filter.c ****                 /* Find pointer to specified noise envelope sensor object */
  93:Generated_Source\PSoC4/CSD_Filter.c ****                 ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
  94:Generated_Source\PSoC4/CSD_Filter.c ****                 ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];    
  95:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* #if CSD_CSD_AUTOTUNE & CSD_CSD_SS_TH_EN */
  96:Generated_Source\PSoC4/CSD_Filter.c ****             
  97:Generated_Source\PSoC4/CSD_Filter.c ****             if ((CSD_WD_TYPE_ENUM)ptrWidget->wdgtType != CSD_WD_PROXIMITY_E)
  81              		.loc 1 97 0
  82 004a BB68     		ldr	r3, [r7, #8]
  83 004c 1B7E     		ldrb	r3, [r3, #24]
  84 004e 062B     		cmp	r3, #6
  85 0050 04D0     		beq	.L4
  98:Generated_Source\PSoC4/CSD_Filter.c ****             {
  99:Generated_Source\PSoC4/CSD_Filter.c ****                 #if (CSD_REGULAR_SENSOR_EN)             
 100:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
  86              		.loc 1 100 0
  87 0052 3A68     		ldr	r2, [r7]
  88 0054 3B69     		ldr	r3, [r7, #16]
  89 0056 5B00     		lsl	r3, r3, #1
  90 0058 D318     		add	r3, r2, r3
  91 005a 3B60     		str	r3, [r7]
  92              	.L4:
 101:Generated_Source\PSoC4/CSD_Filter.c ****                 #endif /* (CSD_REGULAR_SENSOR_EN) */
 102:Generated_Source\PSoC4/CSD_Filter.c ****             }
 103:Generated_Source\PSoC4/CSD_Filter.c ****             else
 104:Generated_Source\PSoC4/CSD_Filter.c ****             {
 105:Generated_Source\PSoC4/CSD_Filter.c ****                 #if (CSD_PROXIMITY_SENSOR_EN)             
 106:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 107:Generated_Source\PSoC4/CSD_Filter.c ****                 #endif /* (CSD_PROXIMITY_SENSOR_EN) */
 108:Generated_Source\PSoC4/CSD_Filter.c ****             }
 109:Generated_Source\PSoC4/CSD_Filter.c ****             
 110:Generated_Source\PSoC4/CSD_Filter.c ****             #if (CSD_REGULAR_RC_IIR_FILTER_EN || CSD_PROX_RC_IIR_FILTER_EN)
 111:Generated_Source\PSoC4/CSD_Filter.c ****                 CSD_InitializeIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType)
  93              		.loc 1 111 0
  94 005c BB68     		ldr	r3, [r7, #8]
  95 005e 1B7E     		ldrb	r3, [r3, #24]
  96 0060 1C1C     		mov	r4, r3
  97 0062 3A68     		ldr	r2, [r7]
  98 0064 FB68     		ldr	r3, [r7, #12]
  99 0066 101C     		mov	r0, r2
 100 0068 191C     		mov	r1, r3
 101 006a 221C     		mov	r2, r4
 102 006c FFF7FEFF 		bl	CSD_InitializeIIRInternal
 103              	.L3:
  82:Generated_Source\PSoC4/CSD_Filter.c ****         {
 104              		.loc 1 82 0 discriminator 1
 105 0070 3B69     		ldr	r3, [r7, #16]
 106 0072 5A1E     		sub	r2, r3, #1
 107 0074 3A61     		str	r2, [r7, #16]
 108 0076 002B     		cmp	r3, #0
 109 0078 D8D1     		bne	.L5
 110              	.L2:
  71:Generated_Source\PSoC4/CSD_Filter.c ****     {
 111              		.loc 1 71 0 discriminator 1
 112 007a 7B69     		ldr	r3, [r7, #20]
 113 007c 5A1E     		sub	r2, r3, #1
 114 007e 7A61     		str	r2, [r7, #20]
 115 0080 002B     		cmp	r3, #0
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 5


 116 0082 C5D1     		bne	.L6
 112:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (CSD_REGULAR_RC_IIR_FILTER_EN || CSD_PROX_RC_IIR_FILTER_EN) */               
 113:Generated_Source\PSoC4/CSD_Filter.c **** 
 114:Generated_Source\PSoC4/CSD_Filter.c ****             #if (CSD_REGULAR_RC_MEDIAN_FILTER_EN || CSD_PROX_RC_MEDIAN_FILTER_EN)
 115:Generated_Source\PSoC4/CSD_Filter.c ****                 CSD_InitializeMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtTy
 116:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (CSD_REGULAR_RC_MEDIAN_FILTER_EN || CSD_PROX_RC_MEDIAN_FILTER_EN) */
 117:Generated_Source\PSoC4/CSD_Filter.c **** 
 118:Generated_Source\PSoC4/CSD_Filter.c ****             #if (CSD_REGULAR_RC_AVERAGE_FILTER_EN || CSD_PROX_RC_AVERAGE_FILTER_EN)
 119:Generated_Source\PSoC4/CSD_Filter.c ****                 CSD_InitializeAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtT
 120:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (CSD_REGULAR_RC_AVERAGE_FILTER_EN || CSD_PROX_RC_AVERAGE_FILTER_EN) */
 121:Generated_Source\PSoC4/CSD_Filter.c ****             
 122:Generated_Source\PSoC4/CSD_Filter.c ****             #if (CSD_CSD_AUTOTUNE & CSD_CSD_SS_TH_EN)
 123:Generated_Source\PSoC4/CSD_Filter.c ****                 if (CSD_SENSE_METHOD_CSD_E ==
 124:Generated_Source\PSoC4/CSD_Filter.c ****                     (CSD_SENSE_METHOD_ENUM)CSD_GET_SENSE_METHOD(&CSD_dsFlash.wdgtArray[widgetId]))
 125:Generated_Source\PSoC4/CSD_Filter.c ****                 {
 126:Generated_Source\PSoC4/CSD_Filter.c ****                     SmartSense_InitializeNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, pt
 127:Generated_Source\PSoC4/CSD_Filter.c ****                 }
 128:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* #if CSD_CSD_AUTOTUNE & CSD_CSD_SS_TH_EN */
 129:Generated_Source\PSoC4/CSD_Filter.c ****         }
 130:Generated_Source\PSoC4/CSD_Filter.c ****     }   
 131:Generated_Source\PSoC4/CSD_Filter.c **** }
 117              		.loc 1 131 0
 118 0084 BD46     		mov	sp, r7
 119 0086 07B0     		add	sp, sp, #28
 120              		@ sp needed
 121 0088 90BD     		pop	{r4, r7, pc}
 122              	.L8:
 123 008a C046     		.align	2
 124              	.L7:
 125 008c 00000000 		.word	CSD_dsFlash
 126              		.cfi_endproc
 127              	.LFE1:
 128              		.size	CSD_FtInitialize, .-CSD_FtInitialize
 129              		.section	.text.CSD_UpdateAllBaselines,"ax",%progbits
 130              		.align	2
 131              		.global	CSD_UpdateAllBaselines
 132              		.code	16
 133              		.thumb_func
 134              		.type	CSD_UpdateAllBaselines, %function
 135              	CSD_UpdateAllBaselines:
 136              	.LFB2:
 132:Generated_Source\PSoC4/CSD_Filter.c **** 
 133:Generated_Source\PSoC4/CSD_Filter.c **** 
 134:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
 135:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_UpdateAllBaselines
 136:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
 137:Generated_Source\PSoC4/CSD_Filter.c **** *
 138:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    
 139:Generated_Source\PSoC4/CSD_Filter.c **** *  Updates the baseline for all sensors in all widgets.
 140:Generated_Source\PSoC4/CSD_Filter.c **** *
 141:Generated_Source\PSoC4/CSD_Filter.c **** * \details
 142:Generated_Source\PSoC4/CSD_Filter.c **** *  Updates the baseline for all sensors in all widgets. Baseline updating is a 
 143:Generated_Source\PSoC4/CSD_Filter.c **** *  part of data processing performed by the process functions. So, no need to 
 144:Generated_Source\PSoC4/CSD_Filter.c **** *  call this function except a specific process flow is implemented.
 145:Generated_Source\PSoC4/CSD_Filter.c **** *  
 146:Generated_Source\PSoC4/CSD_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling 
 147:Generated_Source\PSoC4/CSD_Filter.c **** *  of this function (or any other function with a baseline updating task) 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 6


 148:Generated_Source\PSoC4/CSD_Filter.c **** *  without scanning leads to unexpected behavior.
 149:Generated_Source\PSoC4/CSD_Filter.c **** *
 150:Generated_Source\PSoC4/CSD_Filter.c **** * \return   
 151:Generated_Source\PSoC4/CSD_Filter.c **** *  Returns the status of the update baseline operation of all widgets:
 152:Generated_Source\PSoC4/CSD_Filter.c **** *    - CYRET_SUCCESS if operation was successfully completed
 153:Generated_Source\PSoC4/CSD_Filter.c **** *
 154:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
 155:Generated_Source\PSoC4/CSD_Filter.c **** cystatus CSD_UpdateAllBaselines(void)
 156:Generated_Source\PSoC4/CSD_Filter.c **** {
 137              		.loc 1 156 0
 138              		.cfi_startproc
 139 0000 80B5     		push	{r7, lr}
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 7, -8
 142              		.cfi_offset 14, -4
 143 0002 82B0     		sub	sp, sp, #8
 144              		.cfi_def_cfa_offset 16
 145 0004 00AF     		add	r7, sp, #0
 146              		.cfi_def_cfa_register 7
 157:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 widgetId; 
 158:Generated_Source\PSoC4/CSD_Filter.c ****     cystatus bslnStatus = CYRET_SUCCESS;
 147              		.loc 1 158 0
 148 0006 0023     		mov	r3, #0
 149 0008 3B60     		str	r3, [r7]
 159:Generated_Source\PSoC4/CSD_Filter.c ****     
 160:Generated_Source\PSoC4/CSD_Filter.c ****     for(widgetId = CSD_TOTAL_WIDGETS; widgetId-- > 0u;)
 150              		.loc 1 160 0
 151 000a 0123     		mov	r3, #1
 152 000c 7B60     		str	r3, [r7, #4]
 153 000e 07E0     		b	.L10
 154              	.L11:
 161:Generated_Source\PSoC4/CSD_Filter.c ****     {            
 162:Generated_Source\PSoC4/CSD_Filter.c ****         bslnStatus |= CSD_UpdateWidgetBaseline(widgetId);       
 155              		.loc 1 162 0
 156 0010 7B68     		ldr	r3, [r7, #4]
 157 0012 181C     		mov	r0, r3
 158 0014 FFF7FEFF 		bl	CSD_UpdateWidgetBaseline
 159 0018 021C     		mov	r2, r0
 160 001a 3B68     		ldr	r3, [r7]
 161 001c 1343     		orr	r3, r2
 162 001e 3B60     		str	r3, [r7]
 163              	.L10:
 160:Generated_Source\PSoC4/CSD_Filter.c ****     {            
 164              		.loc 1 160 0 discriminator 1
 165 0020 7B68     		ldr	r3, [r7, #4]
 166 0022 5A1E     		sub	r2, r3, #1
 167 0024 7A60     		str	r2, [r7, #4]
 168 0026 002B     		cmp	r3, #0
 169 0028 F2D1     		bne	.L11
 163:Generated_Source\PSoC4/CSD_Filter.c ****     }      
 164:Generated_Source\PSoC4/CSD_Filter.c ****     
 165:Generated_Source\PSoC4/CSD_Filter.c ****     return(bslnStatus);
 170              		.loc 1 165 0
 171 002a 3B68     		ldr	r3, [r7]
 166:Generated_Source\PSoC4/CSD_Filter.c **** }
 172              		.loc 1 166 0
 173 002c 181C     		mov	r0, r3
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 7


 174 002e BD46     		mov	sp, r7
 175 0030 02B0     		add	sp, sp, #8
 176              		@ sp needed
 177 0032 80BD     		pop	{r7, pc}
 178              		.cfi_endproc
 179              	.LFE2:
 180              		.size	CSD_UpdateAllBaselines, .-CSD_UpdateAllBaselines
 181              		.section	.text.CSD_UpdateWidgetBaseline,"ax",%progbits
 182              		.align	2
 183              		.global	CSD_UpdateWidgetBaseline
 184              		.code	16
 185              		.thumb_func
 186              		.type	CSD_UpdateWidgetBaseline, %function
 187              	CSD_UpdateWidgetBaseline:
 188              	.LFB3:
 167:Generated_Source\PSoC4/CSD_Filter.c ****   
 168:Generated_Source\PSoC4/CSD_Filter.c **** 
 169:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
 170:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_UpdateWidgetBaseline
 171:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
 172:Generated_Source\PSoC4/CSD_Filter.c **** *
 173:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    
 174:Generated_Source\PSoC4/CSD_Filter.c **** *  Updates the baseline for all sensors in a widget specified by input parameter.
 175:Generated_Source\PSoC4/CSD_Filter.c **** *
 176:Generated_Source\PSoC4/CSD_Filter.c **** * \details  
 177:Generated_Source\PSoC4/CSD_Filter.c **** *  This function performs exactly the same tasks as 
 178:Generated_Source\PSoC4/CSD_Filter.c **** *  CSD_UpdateAllBaselines(), but only for a specified widget.
 179:Generated_Source\PSoC4/CSD_Filter.c **** *  
 180:Generated_Source\PSoC4/CSD_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
 181:Generated_Source\PSoC4/CSD_Filter.c **** *  of this function (or any other function with a baseline updating task) 
 182:Generated_Source\PSoC4/CSD_Filter.c **** *  without scanning leads to unexpected behavior.
 183:Generated_Source\PSoC4/CSD_Filter.c **** *
 184:Generated_Source\PSoC4/CSD_Filter.c **** * \param widgetId 
 185:Generated_Source\PSoC4/CSD_Filter.c **** *  Specify the ID number of the widget to update the baseline of all sensors
 186:Generated_Source\PSoC4/CSD_Filter.c **** *  in the widget.
 187:Generated_Source\PSoC4/CSD_Filter.c **** *  A macro for the widget ID can be found in the 
 188:Generated_Source\PSoC4/CSD_Filter.c **** *  CSD_Configuration.h file defined as 
 189:Generated_Source\PSoC4/CSD_Filter.c **** *  CSD_<WidgetName>_WDGT_ID Specifies the ID of the widget.
 190:Generated_Source\PSoC4/CSD_Filter.c **** *
 191:Generated_Source\PSoC4/CSD_Filter.c **** * \return   
 192:Generated_Source\PSoC4/CSD_Filter.c **** *  Returns the status of the specified widget update baseline operation:
 193:Generated_Source\PSoC4/CSD_Filter.c **** *    - CYRET_SUCCESS if operation was successfully completed
 194:Generated_Source\PSoC4/CSD_Filter.c **** *
 195:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
 196:Generated_Source\PSoC4/CSD_Filter.c **** cystatus CSD_UpdateWidgetBaseline(uint32 widgetId)
 197:Generated_Source\PSoC4/CSD_Filter.c **** {
 189              		.loc 1 197 0
 190              		.cfi_startproc
 191 0000 80B5     		push	{r7, lr}
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 7, -8
 194              		.cfi_offset 14, -4
 195 0002 86B0     		sub	sp, sp, #24
 196              		.cfi_def_cfa_offset 32
 197 0004 00AF     		add	r7, sp, #0
 198              		.cfi_def_cfa_register 7
 199 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 8


 198:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 sensorId;       
 199:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 sensorsNumber;  
 200:Generated_Source\PSoC4/CSD_Filter.c **** 
 201:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_FLASH_WD_STRUCT const *ptrWidget = &CSD_dsFlash.wdgtArray[widgetId];    
 200              		.loc 1 201 0
 201 0008 7A68     		ldr	r2, [r7, #4]
 202 000a 131C     		mov	r3, r2
 203 000c DB00     		lsl	r3, r3, #3
 204 000e 9B1A     		sub	r3, r3, r2
 205 0010 9B00     		lsl	r3, r3, #2
 206 0012 0F4A     		ldr	r2, .L17
 207 0014 9B18     		add	r3, r3, r2
 208 0016 FB60     		str	r3, [r7, #12]
 202:Generated_Source\PSoC4/CSD_Filter.c ****     cystatus bslnStatus = CYRET_SUCCESS;    
 209              		.loc 1 202 0
 210 0018 0023     		mov	r3, #0
 211 001a 3B61     		str	r3, [r7, #16]
 203:Generated_Source\PSoC4/CSD_Filter.c ****     
 204:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find total amount of sensors in specified widget */   
 205:Generated_Source\PSoC4/CSD_Filter.c ****     sensorsNumber = CSD_GET_SNS_CNT_BY_PTR(ptrWidget);    
 212              		.loc 1 205 0
 213 001c FB68     		ldr	r3, [r7, #12]
 214 001e DB8A     		ldrh	r3, [r3, #22]
 215 0020 BB60     		str	r3, [r7, #8]
 206:Generated_Source\PSoC4/CSD_Filter.c ****     
 207:Generated_Source\PSoC4/CSD_Filter.c ****     for(sensorId = sensorsNumber; sensorId-- > 0u;)
 216              		.loc 1 207 0
 217 0022 BB68     		ldr	r3, [r7, #8]
 218 0024 7B61     		str	r3, [r7, #20]
 219 0026 09E0     		b	.L14
 220              	.L15:
 208:Generated_Source\PSoC4/CSD_Filter.c ****     {
 209:Generated_Source\PSoC4/CSD_Filter.c ****         bslnStatus |= CSD_UpdateSensorBaseline(widgetId, sensorId);    
 221              		.loc 1 209 0
 222 0028 7A68     		ldr	r2, [r7, #4]
 223 002a 7B69     		ldr	r3, [r7, #20]
 224 002c 101C     		mov	r0, r2
 225 002e 191C     		mov	r1, r3
 226 0030 FFF7FEFF 		bl	CSD_UpdateSensorBaseline
 227 0034 021C     		mov	r2, r0
 228 0036 3B69     		ldr	r3, [r7, #16]
 229 0038 1343     		orr	r3, r2
 230 003a 3B61     		str	r3, [r7, #16]
 231              	.L14:
 207:Generated_Source\PSoC4/CSD_Filter.c ****     {
 232              		.loc 1 207 0 discriminator 1
 233 003c 7B69     		ldr	r3, [r7, #20]
 234 003e 5A1E     		sub	r2, r3, #1
 235 0040 7A61     		str	r2, [r7, #20]
 236 0042 002B     		cmp	r3, #0
 237 0044 F0D1     		bne	.L15
 210:Generated_Source\PSoC4/CSD_Filter.c ****     }
 211:Generated_Source\PSoC4/CSD_Filter.c **** 
 212:Generated_Source\PSoC4/CSD_Filter.c ****     return(bslnStatus);
 238              		.loc 1 212 0
 239 0046 3B69     		ldr	r3, [r7, #16]
 213:Generated_Source\PSoC4/CSD_Filter.c **** }
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 9


 240              		.loc 1 213 0
 241 0048 181C     		mov	r0, r3
 242 004a BD46     		mov	sp, r7
 243 004c 06B0     		add	sp, sp, #24
 244              		@ sp needed
 245 004e 80BD     		pop	{r7, pc}
 246              	.L18:
 247              		.align	2
 248              	.L17:
 249 0050 00000000 		.word	CSD_dsFlash
 250              		.cfi_endproc
 251              	.LFE3:
 252              		.size	CSD_UpdateWidgetBaseline, .-CSD_UpdateWidgetBaseline
 253              		.section	.text.CSD_UpdateSensorBaseline,"ax",%progbits
 254              		.align	2
 255              		.global	CSD_UpdateSensorBaseline
 256              		.code	16
 257              		.thumb_func
 258              		.type	CSD_UpdateSensorBaseline, %function
 259              	CSD_UpdateSensorBaseline:
 260              	.LFB4:
 214:Generated_Source\PSoC4/CSD_Filter.c **** 
 215:Generated_Source\PSoC4/CSD_Filter.c **** 
 216:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
 217:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_UpdateSensorBaseline
 218:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
 219:Generated_Source\PSoC4/CSD_Filter.c **** *
 220:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    
 221:Generated_Source\PSoC4/CSD_Filter.c **** *  Updates the baseline for a sensor in a widget specified by input parameters.
 222:Generated_Source\PSoC4/CSD_Filter.c **** *
 223:Generated_Source\PSoC4/CSD_Filter.c **** * \details  
 224:Generated_Source\PSoC4/CSD_Filter.c **** *  This function performs exactly the same tasks as
 225:Generated_Source\PSoC4/CSD_Filter.c **** *  CSD_UpdateAllBaselines() and 
 226:Generated_Source\PSoC4/CSD_Filter.c **** *  CSD_UpdateWidgetBaseline() but only for a specified sensor.
 227:Generated_Source\PSoC4/CSD_Filter.c **** *  
 228:Generated_Source\PSoC4/CSD_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling 
 229:Generated_Source\PSoC4/CSD_Filter.c **** *  of this function (or any other function with a baseline updating task) 
 230:Generated_Source\PSoC4/CSD_Filter.c **** *  without scanning leads to unexpected behavior.
 231:Generated_Source\PSoC4/CSD_Filter.c **** *
 232:Generated_Source\PSoC4/CSD_Filter.c **** * \param   widgetId 
 233:Generated_Source\PSoC4/CSD_Filter.c **** *  Specify the ID number of the widget to update the baseline of the sensor 
 234:Generated_Source\PSoC4/CSD_Filter.c **** *  specified by the sensorId parameter.
 235:Generated_Source\PSoC4/CSD_Filter.c **** *  A macro for the widget ID can be found in CSD_Configuration.h 
 236:Generated_Source\PSoC4/CSD_Filter.c **** *  file defined as CSD_<WidgetName>_WDGT_ID Specifies the ID of 
 237:Generated_Source\PSoC4/CSD_Filter.c **** *  the widget. 
 238:Generated_Source\PSoC4/CSD_Filter.c **** *
 239:Generated_Source\PSoC4/CSD_Filter.c **** * \param   sensorId 
 240:Generated_Source\PSoC4/CSD_Filter.c **** *  Specify the ID number of the sensor within the widget to update its baseline.
 241:Generated_Source\PSoC4/CSD_Filter.c **** *  A macro for the sensor ID within a specified widget can be found in the 
 242:Generated_Source\PSoC4/CSD_Filter.c **** *  CSD_Configuration.h file defined as 
 243:Generated_Source\PSoC4/CSD_Filter.c **** *  CSD_<WidgetName>_SNS<SensorNumber>_ID
 244:Generated_Source\PSoC4/CSD_Filter.c **** *
 245:Generated_Source\PSoC4/CSD_Filter.c **** * \return   
 246:Generated_Source\PSoC4/CSD_Filter.c **** *  Returns the status of the specified sensor update baseline operation:
 247:Generated_Source\PSoC4/CSD_Filter.c **** *    - CYRET_SUCCESS if operation was successfully completed
 248:Generated_Source\PSoC4/CSD_Filter.c **** *
 249:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 10


 250:Generated_Source\PSoC4/CSD_Filter.c **** cystatus CSD_UpdateSensorBaseline(uint32 widgetId, uint32 sensorId)
 251:Generated_Source\PSoC4/CSD_Filter.c **** {    
 261              		.loc 1 251 0
 262              		.cfi_startproc
 263 0000 90B5     		push	{r4, r7, lr}
 264              		.cfi_def_cfa_offset 12
 265              		.cfi_offset 4, -12
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 87B0     		sub	sp, sp, #28
 269              		.cfi_def_cfa_offset 40
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 272 0006 7860     		str	r0, [r7, #4]
 273 0008 3960     		str	r1, [r7]
 252:Generated_Source\PSoC4/CSD_Filter.c ****     cystatus bslnStatus = CYRET_SUCCESS;  
 274              		.loc 1 252 0
 275 000a 0023     		mov	r3, #0
 276 000c 7B61     		str	r3, [r7, #20]
 253:Generated_Source\PSoC4/CSD_Filter.c ****     
 254:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_RAM_SNS_STRUCT *ptrSensor = NULL;    
 277              		.loc 1 254 0
 278 000e 0023     		mov	r3, #0
 279 0010 3B61     		str	r3, [r7, #16]
 255:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_FLASH_WD_STRUCT const *ptrWidget = &CSD_dsFlash.wdgtArray[widgetId];    
 280              		.loc 1 255 0
 281 0012 7A68     		ldr	r2, [r7, #4]
 282 0014 131C     		mov	r3, r2
 283 0016 DB00     		lsl	r3, r3, #3
 284 0018 9B1A     		sub	r3, r3, r2
 285 001a 9B00     		lsl	r3, r3, #2
 286 001c 114A     		ldr	r2, .L21
 287 001e 9B18     		add	r3, r3, r2
 288 0020 FB60     		str	r3, [r7, #12]
 256:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_RAM_WD_BASE_STRUCT *ptrWidgetRam = ptrWidget->ptr2WdgtRam;   
 289              		.loc 1 256 0
 290 0022 FB68     		ldr	r3, [r7, #12]
 291 0024 5B68     		ldr	r3, [r3, #4]
 292 0026 BB60     		str	r3, [r7, #8]
 257:Generated_Source\PSoC4/CSD_Filter.c ****           
 258:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified sensor object */     
 259:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 293              		.loc 1 259 0
 294 0028 FB68     		ldr	r3, [r7, #12]
 295 002a 9B68     		ldr	r3, [r3, #8]
 296 002c 3B61     		str	r3, [r7, #16]
 260:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 297              		.loc 1 260 0
 298 002e 3A68     		ldr	r2, [r7]
 299 0030 131C     		mov	r3, r2
 300 0032 9B00     		lsl	r3, r3, #2
 301 0034 9B18     		add	r3, r3, r2
 302 0036 5B00     		lsl	r3, r3, #1
 303 0038 1A1C     		mov	r2, r3
 304 003a 3B69     		ldr	r3, [r7, #16]
 305 003c 9B18     		add	r3, r3, r2
 306 003e 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 11


 261:Generated_Source\PSoC4/CSD_Filter.c ****     
 262:Generated_Source\PSoC4/CSD_Filter.c ****     bslnStatus = CSD_FtUpdateBaseline(
 263:Generated_Source\PSoC4/CSD_Filter.c ****                         ptrWidgetRam, ptrSensor, (uint32)ptrWidget->wdgtType);
 307              		.loc 1 263 0
 308 0040 FB68     		ldr	r3, [r7, #12]
 309 0042 1B7E     		ldrb	r3, [r3, #24]
 262:Generated_Source\PSoC4/CSD_Filter.c ****                         ptrWidgetRam, ptrSensor, (uint32)ptrWidget->wdgtType);
 310              		.loc 1 262 0
 311 0044 1C1C     		mov	r4, r3
 312 0046 BA68     		ldr	r2, [r7, #8]
 313 0048 3B69     		ldr	r3, [r7, #16]
 314 004a 101C     		mov	r0, r2
 315 004c 191C     		mov	r1, r3
 316 004e 221C     		mov	r2, r4
 317 0050 FFF7FEFF 		bl	CSD_FtUpdateBaseline
 318 0054 031C     		mov	r3, r0
 319 0056 7B61     		str	r3, [r7, #20]
 264:Generated_Source\PSoC4/CSD_Filter.c ****    
 265:Generated_Source\PSoC4/CSD_Filter.c ****     return(bslnStatus);
 320              		.loc 1 265 0
 321 0058 7B69     		ldr	r3, [r7, #20]
 266:Generated_Source\PSoC4/CSD_Filter.c **** }
 322              		.loc 1 266 0
 323 005a 181C     		mov	r0, r3
 324 005c BD46     		mov	sp, r7
 325 005e 07B0     		add	sp, sp, #28
 326              		@ sp needed
 327 0060 90BD     		pop	{r4, r7, pc}
 328              	.L22:
 329 0062 C046     		.align	2
 330              	.L21:
 331 0064 00000000 		.word	CSD_dsFlash
 332              		.cfi_endproc
 333              	.LFE4:
 334              		.size	CSD_UpdateSensorBaseline, .-CSD_UpdateSensorBaseline
 335              		.section	.text.CSD_FtUpdateBaseline,"ax",%progbits
 336              		.align	2
 337              		.global	CSD_FtUpdateBaseline
 338              		.code	16
 339              		.thumb_func
 340              		.type	CSD_FtUpdateBaseline, %function
 341              	CSD_FtUpdateBaseline:
 342              	.LFB5:
 267:Generated_Source\PSoC4/CSD_Filter.c ****  
 268:Generated_Source\PSoC4/CSD_Filter.c **** 
 269:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
 270:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_FtUpdateBaseline
 271:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
 272:Generated_Source\PSoC4/CSD_Filter.c **** *
 273:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Updates the baseline for a sensor specified by an input parameter.
 274:Generated_Source\PSoC4/CSD_Filter.c **** *
 275:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Updates the baseline for a sensor specified by an input parameter.
 276:Generated_Source\PSoC4/CSD_Filter.c **** *
 277:Generated_Source\PSoC4/CSD_Filter.c **** * \param    ptr2wd_ram The pointer to the widget RAM structure where all the widget 
 278:Generated_Source\PSoC4/CSD_Filter.c **** *           parameters are stored.
 279:Generated_Source\PSoC4/CSD_Filter.c **** *
 280:Generated_Source\PSoC4/CSD_Filter.c **** * \param    ptrSensor The pointer to the sensor RAM structure where all the sensor
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 12


 281:Generated_Source\PSoC4/CSD_Filter.c **** *           parameters are stored.
 282:Generated_Source\PSoC4/CSD_Filter.c **** *
 283:Generated_Source\PSoC4/CSD_Filter.c **** * \return   Returns a status indicating whether the baseline has been updated. 
 284:Generated_Source\PSoC4/CSD_Filter.c **** *
 285:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
 286:Generated_Source\PSoC4/CSD_Filter.c **** cystatus CSD_FtUpdateBaseline(
 287:Generated_Source\PSoC4/CSD_Filter.c ****                                 CSD_RAM_WD_BASE_STRUCT *ptrWidgetRam,
 288:Generated_Source\PSoC4/CSD_Filter.c ****                                 CSD_RAM_SNS_STRUCT *ptrSensor, 
 289:Generated_Source\PSoC4/CSD_Filter.c ****                                 uint32 wdType)
 290:Generated_Source\PSoC4/CSD_Filter.c **** {         
 343              		.loc 1 290 0
 344              		.cfi_startproc
 345 0000 80B5     		push	{r7, lr}
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 7, -8
 348              		.cfi_offset 14, -4
 349 0002 8AB0     		sub	sp, sp, #40
 350              		.cfi_def_cfa_offset 48
 351 0004 00AF     		add	r7, sp, #0
 352              		.cfi_def_cfa_register 7
 353 0006 F860     		str	r0, [r7, #12]
 354 0008 B960     		str	r1, [r7, #8]
 355 000a 7A60     		str	r2, [r7, #4]
 291:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 sign;
 292:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 difference;        
 293:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 channel;
 294:Generated_Source\PSoC4/CSD_Filter.c ****     cystatus bslnStatus = CYRET_SUCCESS; 
 356              		.loc 1 294 0
 357 000c 0023     		mov	r3, #0
 358 000e BB61     		str	r3, [r7, #24]
 295:Generated_Source\PSoC4/CSD_Filter.c ****     
 296:Generated_Source\PSoC4/CSD_Filter.c ****     #if (CSD_TOTAL_WIDGETS)  
 297:Generated_Source\PSoC4/CSD_Filter.c ****         uint32 history;
 298:Generated_Source\PSoC4/CSD_Filter.c ****     #endif /* (CSD_TOTAL_WIDGETS) */    
 299:Generated_Source\PSoC4/CSD_Filter.c ****     
 300:Generated_Source\PSoC4/CSD_Filter.c ****     /* Apply baseline to every channel in sensor */
 301:Generated_Source\PSoC4/CSD_Filter.c ****     for(channel = CSD_NUM_SCAN_FREQS; channel-- > 0u;) 
 359              		.loc 1 301 0
 360 0010 0123     		mov	r3, #1
 361 0012 FB61     		str	r3, [r7, #28]
 362 0014 96E0     		b	.L24
 363              	.L31:
 302:Generated_Source\PSoC4/CSD_Filter.c ****     {               
 303:Generated_Source\PSoC4/CSD_Filter.c ****         /* Calculate signal value and its sign */
 304:Generated_Source\PSoC4/CSD_Filter.c ****         if(ptrSensor->raw[channel] >= ptrSensor->bsln[channel])
 364              		.loc 1 304 0
 365 0016 BB68     		ldr	r3, [r7, #8]
 366 0018 FA69     		ldr	r2, [r7, #28]
 367 001a 5200     		lsl	r2, r2, #1
 368 001c D25A     		ldrh	r2, [r2, r3]
 369 001e B968     		ldr	r1, [r7, #8]
 370 0020 FB69     		ldr	r3, [r7, #28]
 371 0022 5B00     		lsl	r3, r3, #1
 372 0024 CB18     		add	r3, r1, r3
 373 0026 5B88     		ldrh	r3, [r3, #2]
 374 0028 9A42     		cmp	r2, r3
 375 002a 14D3     		bcc	.L25
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 13


 305:Generated_Source\PSoC4/CSD_Filter.c ****         {
 306:Generated_Source\PSoC4/CSD_Filter.c ****             difference = (uint32)ptrSensor->raw[channel] - (uint32)ptrSensor->bsln[channel];
 376              		.loc 1 306 0
 377 002c BB68     		ldr	r3, [r7, #8]
 378 002e FA69     		ldr	r2, [r7, #28]
 379 0030 5200     		lsl	r2, r2, #1
 380 0032 D35A     		ldrh	r3, [r2, r3]
 381 0034 191C     		mov	r1, r3
 382 0036 BA68     		ldr	r2, [r7, #8]
 383 0038 FB69     		ldr	r3, [r7, #28]
 384 003a 5B00     		lsl	r3, r3, #1
 385 003c D318     		add	r3, r2, r3
 386 003e 5B88     		ldrh	r3, [r3, #2]
 387 0040 CB1A     		sub	r3, r1, r3
 388 0042 3B62     		str	r3, [r7, #32]
 307:Generated_Source\PSoC4/CSD_Filter.c ****             sign = 1u;
 389              		.loc 1 307 0
 390 0044 0123     		mov	r3, #1
 391 0046 7B62     		str	r3, [r7, #36]
 308:Generated_Source\PSoC4/CSD_Filter.c ****             ptrSensor->negBslnRstCnt[channel] = 0u;
 392              		.loc 1 308 0
 393 0048 BA68     		ldr	r2, [r7, #8]
 394 004a FB69     		ldr	r3, [r7, #28]
 395 004c D318     		add	r3, r2, r3
 396 004e 0833     		add	r3, r3, #8
 397 0050 0022     		mov	r2, #0
 398 0052 1A70     		strb	r2, [r3]
 399 0054 0DE0     		b	.L26
 400              	.L25:
 309:Generated_Source\PSoC4/CSD_Filter.c ****         }
 310:Generated_Source\PSoC4/CSD_Filter.c ****         else
 311:Generated_Source\PSoC4/CSD_Filter.c ****         {
 312:Generated_Source\PSoC4/CSD_Filter.c ****             difference = (uint32)ptrSensor->bsln[channel] - (uint32)ptrSensor->raw[channel];
 401              		.loc 1 312 0
 402 0056 BA68     		ldr	r2, [r7, #8]
 403 0058 FB69     		ldr	r3, [r7, #28]
 404 005a 5B00     		lsl	r3, r3, #1
 405 005c D318     		add	r3, r2, r3
 406 005e 5B88     		ldrh	r3, [r3, #2]
 407 0060 191C     		mov	r1, r3
 408 0062 BB68     		ldr	r3, [r7, #8]
 409 0064 FA69     		ldr	r2, [r7, #28]
 410 0066 5200     		lsl	r2, r2, #1
 411 0068 D35A     		ldrh	r3, [r2, r3]
 412 006a CB1A     		sub	r3, r1, r3
 413 006c 3B62     		str	r3, [r7, #32]
 313:Generated_Source\PSoC4/CSD_Filter.c ****             sign = 0u;
 414              		.loc 1 313 0
 415 006e 0023     		mov	r3, #0
 416 0070 7B62     		str	r3, [r7, #36]
 417              	.L26:
 314:Generated_Source\PSoC4/CSD_Filter.c ****         }     
 315:Generated_Source\PSoC4/CSD_Filter.c ****         
 316:Generated_Source\PSoC4/CSD_Filter.c ****         /* Reset baseline if condition is met */ 
 317:Generated_Source\PSoC4/CSD_Filter.c ****         if((sign == 0u) && (difference > (uint32) ptrWidgetRam->nNoiseTh))
 418              		.loc 1 317 0
 419 0072 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 14


 420 0074 002B     		cmp	r3, #0
 421 0076 25D1     		bne	.L27
 422              		.loc 1 317 0 is_stmt 0 discriminator 1
 423 0078 FB68     		ldr	r3, [r7, #12]
 424 007a 5B79     		ldrb	r3, [r3, #5]
 425 007c 1A1E     		sub	r2, r3, #0
 426 007e 3B6A     		ldr	r3, [r7, #32]
 427 0080 9A42     		cmp	r2, r3
 428 0082 1FD2     		bcs	.L27
 318:Generated_Source\PSoC4/CSD_Filter.c ****         {
 319:Generated_Source\PSoC4/CSD_Filter.c ****             if(ptrSensor->negBslnRstCnt[channel] >= ptrWidgetRam->lowBslnRst)
 429              		.loc 1 319 0 is_stmt 1
 430 0084 BA68     		ldr	r2, [r7, #8]
 431 0086 FB69     		ldr	r3, [r7, #28]
 432 0088 D318     		add	r3, r2, r3
 433 008a 0833     		add	r3, r3, #8
 434 008c 1A78     		ldrb	r2, [r3]
 435 008e FB68     		ldr	r3, [r7, #12]
 436 0090 1B7A     		ldrb	r3, [r3, #8]
 437 0092 9A42     		cmp	r2, r3
 438 0094 08D3     		bcc	.L28
 320:Generated_Source\PSoC4/CSD_Filter.c ****             {                
 321:Generated_Source\PSoC4/CSD_Filter.c ****                 CSD_FtInitializeBaselineChannel(ptrSensor, wdType, channel);             
 439              		.loc 1 321 0
 440 0096 B968     		ldr	r1, [r7, #8]
 441 0098 7A68     		ldr	r2, [r7, #4]
 442 009a FB69     		ldr	r3, [r7, #28]
 443 009c 081C     		mov	r0, r1
 444 009e 111C     		mov	r1, r2
 445 00a0 1A1C     		mov	r2, r3
 446 00a2 FFF7FEFF 		bl	CSD_FtInitializeBaselineChannel
 447 00a6 0CE0     		b	.L29
 448              	.L28:
 322:Generated_Source\PSoC4/CSD_Filter.c ****             }
 323:Generated_Source\PSoC4/CSD_Filter.c ****             else
 324:Generated_Source\PSoC4/CSD_Filter.c ****             {
 325:Generated_Source\PSoC4/CSD_Filter.c ****                 ptrSensor->negBslnRstCnt[channel]++;
 449              		.loc 1 325 0
 450 00a8 BA68     		ldr	r2, [r7, #8]
 451 00aa FB69     		ldr	r3, [r7, #28]
 452 00ac D318     		add	r3, r2, r3
 453 00ae 0833     		add	r3, r3, #8
 454 00b0 1B78     		ldrb	r3, [r3]
 455 00b2 0133     		add	r3, r3, #1
 456 00b4 D9B2     		uxtb	r1, r3
 457 00b6 BA68     		ldr	r2, [r7, #8]
 458 00b8 FB69     		ldr	r3, [r7, #28]
 459 00ba D318     		add	r3, r2, r3
 460 00bc 0833     		add	r3, r3, #8
 461 00be 0A1C     		add	r2, r1, #0
 462 00c0 1A70     		strb	r2, [r3]
 463              	.L29:
 319:Generated_Source\PSoC4/CSD_Filter.c ****             {                
 464              		.loc 1 319 0
 465 00c2 3FE0     		b	.L24
 466              	.L27:
 326:Generated_Source\PSoC4/CSD_Filter.c ****             }
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 15


 327:Generated_Source\PSoC4/CSD_Filter.c ****         }
 328:Generated_Source\PSoC4/CSD_Filter.c ****         else
 329:Generated_Source\PSoC4/CSD_Filter.c ****         {
 330:Generated_Source\PSoC4/CSD_Filter.c ****             #if (!CSD_SENSOR_AUTO_RESET_EN)
 331:Generated_Source\PSoC4/CSD_Filter.c ****                 /* Update baseline only if signal is in range between noiseThreshold and negativeno
 332:Generated_Source\PSoC4/CSD_Filter.c ****                 if ((difference <= (uint32)ptrWidgetRam->noiseTh) ||
 467              		.loc 1 332 0
 468 00c4 FB68     		ldr	r3, [r7, #12]
 469 00c6 1B79     		ldrb	r3, [r3, #4]
 470 00c8 1A1E     		sub	r2, r3, #0
 471 00ca 3B6A     		ldr	r3, [r7, #32]
 472 00cc 9A42     		cmp	r2, r3
 473 00ce 08D2     		bcs	.L30
 333:Generated_Source\PSoC4/CSD_Filter.c ****                     ((difference < (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 474              		.loc 1 333 0 discriminator 1
 475 00d0 FB68     		ldr	r3, [r7, #12]
 476 00d2 5B79     		ldrb	r3, [r3, #5]
 477 00d4 1A1E     		sub	r2, r3, #0
 332:Generated_Source\PSoC4/CSD_Filter.c ****                     ((difference < (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 478              		.loc 1 332 0 discriminator 1
 479 00d6 3B6A     		ldr	r3, [r7, #32]
 480 00d8 9A42     		cmp	r2, r3
 481 00da 33D9     		bls	.L24
 482              		.loc 1 333 0
 483 00dc 7B6A     		ldr	r3, [r7, #36]
 484 00de 002B     		cmp	r3, #0
 485 00e0 30D1     		bne	.L24
 486              	.L30:
 334:Generated_Source\PSoC4/CSD_Filter.c ****                 {
 335:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (CSD_CSD_AUTO_RESET == CSD_CSD_AUTO_RESET_DISABLE) */
 336:Generated_Source\PSoC4/CSD_Filter.c ****                     #if (CSD_BASELINE_TYPE == CSD_IIR_BASELINE)  
 337:Generated_Source\PSoC4/CSD_Filter.c ****                         
 338:Generated_Source\PSoC4/CSD_Filter.c ****                         /* Calculate baseline value */
 339:Generated_Source\PSoC4/CSD_Filter.c ****                         if ((CSD_WD_TYPE_ENUM)wdType != CSD_WD_PROXIMITY_E)
 487              		.loc 1 339 0
 488 00e2 7B68     		ldr	r3, [r7, #4]
 489 00e4 DBB2     		uxtb	r3, r3
 490 00e6 062B     		cmp	r3, #6
 491 00e8 2CD0     		beq	.L24
 340:Generated_Source\PSoC4/CSD_Filter.c ****                         {
 341:Generated_Source\PSoC4/CSD_Filter.c ****                             #if (CSD_REGULAR_SENSOR_EN) 
 342:Generated_Source\PSoC4/CSD_Filter.c ****                                 #if (CSD_REGULAR_IIR_BL_TYPE == CSD_IIR_FILTER_PERFORMANCE)        
 343:Generated_Source\PSoC4/CSD_Filter.c ****                                     history = (uint32) ptrSensor->bsln[channel] << 8u; 
 492              		.loc 1 343 0
 493 00ea BA68     		ldr	r2, [r7, #8]
 494 00ec FB69     		ldr	r3, [r7, #28]
 495 00ee 5B00     		lsl	r3, r3, #1
 496 00f0 D318     		add	r3, r2, r3
 497 00f2 5B88     		ldrh	r3, [r3, #2]
 498 00f4 1B02     		lsl	r3, r3, #8
 499 00f6 7B61     		str	r3, [r7, #20]
 344:Generated_Source\PSoC4/CSD_Filter.c ****                                     history |= ptrSensor->bslnExt[channel];
 500              		.loc 1 344 0
 501 00f8 BA68     		ldr	r2, [r7, #8]
 502 00fa FB69     		ldr	r3, [r7, #28]
 503 00fc D318     		add	r3, r2, r3
 504 00fe 1B79     		ldrb	r3, [r3, #4]
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 16


 505 0100 1A1C     		mov	r2, r3
 506 0102 7B69     		ldr	r3, [r7, #20]
 507 0104 1343     		orr	r3, r2
 508 0106 7B61     		str	r3, [r7, #20]
 345:Generated_Source\PSoC4/CSD_Filter.c ****                                 #else
 346:Generated_Source\PSoC4/CSD_Filter.c ****                                     history = ptrSensor->bsln[channel];                            
 347:Generated_Source\PSoC4/CSD_Filter.c ****                                 #endif /* (CSD_REGULAR_IIR_BL_TYPE == CSD_IIR_FILTER_PERFORMANCE) *
 348:Generated_Source\PSoC4/CSD_Filter.c ****                             
 349:Generated_Source\PSoC4/CSD_Filter.c ****                                 history =  CSD_FtIIR1stOrder(
 350:Generated_Source\PSoC4/CSD_Filter.c ****                                                 (uint32)ptrSensor->raw[channel],
 509              		.loc 1 350 0
 510 0108 BB68     		ldr	r3, [r7, #8]
 511 010a FA69     		ldr	r2, [r7, #28]
 512 010c 5200     		lsl	r2, r2, #1
 513 010e D35A     		ldrh	r3, [r2, r3]
 349:Generated_Source\PSoC4/CSD_Filter.c ****                                                 (uint32)ptrSensor->raw[channel],
 514              		.loc 1 349 0
 515 0110 1A1C     		mov	r2, r3
 516 0112 7B69     		ldr	r3, [r7, #20]
 517 0114 101C     		mov	r0, r2
 518 0116 191C     		mov	r1, r3
 519 0118 0122     		mov	r2, #1
 520 011a 0823     		mov	r3, #8
 521 011c FFF7FEFF 		bl	CSD_FtIIR1stOrder
 522 0120 031C     		mov	r3, r0
 523 0122 7B61     		str	r3, [r7, #20]
 351:Generated_Source\PSoC4/CSD_Filter.c ****                                                 history, 
 352:Generated_Source\PSoC4/CSD_Filter.c ****                                                 CSD_REGULAR_IIR_BL_N, 
 353:Generated_Source\PSoC4/CSD_Filter.c ****                                                 CSD_REGULAR_IIR_BL_SHIFT);
 354:Generated_Source\PSoC4/CSD_Filter.c ****                                                            
 355:Generated_Source\PSoC4/CSD_Filter.c ****                                 #if (CSD_REGULAR_IIR_BL_TYPE == CSD_IIR_FILTER_PERFORMANCE)        
 356:Generated_Source\PSoC4/CSD_Filter.c ****                                     ptrSensor->bsln[channel] = LO16(history >> 8u);
 524              		.loc 1 356 0
 525 0124 7B69     		ldr	r3, [r7, #20]
 526 0126 1B0A     		lsr	r3, r3, #8
 527 0128 99B2     		uxth	r1, r3
 528 012a BA68     		ldr	r2, [r7, #8]
 529 012c FB69     		ldr	r3, [r7, #28]
 530 012e 5B00     		lsl	r3, r3, #1
 531 0130 D318     		add	r3, r2, r3
 532 0132 0A1C     		add	r2, r1, #0
 533 0134 5A80     		strh	r2, [r3, #2]
 357:Generated_Source\PSoC4/CSD_Filter.c ****                                     ptrSensor->bslnExt[channel] = LO8(history);
 534              		.loc 1 357 0
 535 0136 7B69     		ldr	r3, [r7, #20]
 536 0138 D9B2     		uxtb	r1, r3
 537 013a BA68     		ldr	r2, [r7, #8]
 538 013c FB69     		ldr	r3, [r7, #28]
 539 013e D318     		add	r3, r2, r3
 540 0140 0A1C     		add	r2, r1, #0
 541 0142 1A71     		strb	r2, [r3, #4]
 542              	.L24:
 301:Generated_Source\PSoC4/CSD_Filter.c ****     {               
 543              		.loc 1 301 0 discriminator 1
 544 0144 FB69     		ldr	r3, [r7, #28]
 545 0146 5A1E     		sub	r2, r3, #1
 546 0148 FA61     		str	r2, [r7, #28]
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 17


 547 014a 002B     		cmp	r3, #0
 548 014c 00D0     		beq	.LCB478
 549 014e 62E7     		b	.L31	@long jump
 550              	.LCB478:
 358:Generated_Source\PSoC4/CSD_Filter.c ****                                 #else
 359:Generated_Source\PSoC4/CSD_Filter.c ****                                     ptrSensor->bsln[channel] = LO16(history);
 360:Generated_Source\PSoC4/CSD_Filter.c ****                                 #endif /* (CSD_REGULAR_IIR_BL_TYPE == CSD_IIR_FILTER_PERFORMANCE) *
 361:Generated_Source\PSoC4/CSD_Filter.c ****                             #endif /* (CSD_REGULAR_SENSOR_EN) */
 362:Generated_Source\PSoC4/CSD_Filter.c ****                         }
 363:Generated_Source\PSoC4/CSD_Filter.c ****                         else 
 364:Generated_Source\PSoC4/CSD_Filter.c ****                         {
 365:Generated_Source\PSoC4/CSD_Filter.c ****                             #if (CSD_PROXIMITY_SENSOR_EN)     
 366:Generated_Source\PSoC4/CSD_Filter.c ****                                 #if (CSD_PROX_IIR_BL_TYPE == CSD_IIR_FILTER_PERFORMANCE)           
 367:Generated_Source\PSoC4/CSD_Filter.c ****                                     history = (uint32) ptrSensor->bsln[channel] << 8u; 
 368:Generated_Source\PSoC4/CSD_Filter.c ****                                     history |= ptrSensor->bslnExt[channel];
 369:Generated_Source\PSoC4/CSD_Filter.c ****                                 #else
 370:Generated_Source\PSoC4/CSD_Filter.c ****                                     history = (uint32) ptrSensor->bsln[channel];                   
 371:Generated_Source\PSoC4/CSD_Filter.c ****                                 #endif /* (CSD_PROX_IIR_BL_TYPE == CSD_IIR_FILTER_PERFORMANCE) */ 
 372:Generated_Source\PSoC4/CSD_Filter.c ****                                 
 373:Generated_Source\PSoC4/CSD_Filter.c ****                                 history = CSD_FtIIR1stOrder((uint32)ptrSensor->raw[channel], histor
 374:Generated_Source\PSoC4/CSD_Filter.c ****                                 
 375:Generated_Source\PSoC4/CSD_Filter.c ****                                 #if (CSD_PROX_IIR_BL_TYPE == CSD_IIR_FILTER_PERFORMANCE)           
 376:Generated_Source\PSoC4/CSD_Filter.c ****                                     ptrSensor->bsln[channel] = LO16(history >> 8u);
 377:Generated_Source\PSoC4/CSD_Filter.c ****                                     ptrSensor->bslnExt[channel] = LO8(history);
 378:Generated_Source\PSoC4/CSD_Filter.c ****                                 #else
 379:Generated_Source\PSoC4/CSD_Filter.c ****                                     ptrSensor->bsln[channel] = LO16(history);
 380:Generated_Source\PSoC4/CSD_Filter.c ****                                 #endif /* (CSD_PROX_IIR_BL_TYPE == CSD_IIR_FILTER_PERFORMANCE) */  
 381:Generated_Source\PSoC4/CSD_Filter.c ****                             #endif /* (CSD_PROX_SENSOR_EN)   */
 382:Generated_Source\PSoC4/CSD_Filter.c ****                         }
 383:Generated_Source\PSoC4/CSD_Filter.c ****                     #else
 384:Generated_Source\PSoC4/CSD_Filter.c ****                         
 385:Generated_Source\PSoC4/CSD_Filter.c ****                         /******************************************************************
 386:Generated_Source\PSoC4/CSD_Filter.c ****                         * This is the place where the bucket algorithm should be implemented.
 387:Generated_Source\PSoC4/CSD_Filter.c ****                         * The bucket method will be implemented in the next component version.
 388:Generated_Source\PSoC4/CSD_Filter.c ****                         *******************************************************************/
 389:Generated_Source\PSoC4/CSD_Filter.c ****                         
 390:Generated_Source\PSoC4/CSD_Filter.c ****                     #endif /* (CSD_CSD_BASELINE_TYPE == CSD_IIR_BASELINE)  */
 391:Generated_Source\PSoC4/CSD_Filter.c ****                     
 392:Generated_Source\PSoC4/CSD_Filter.c ****             #if (!CSD_SENSOR_AUTO_RESET_EN)
 393:Generated_Source\PSoC4/CSD_Filter.c ****                 }
 394:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (!CSD_SENSOR_AUTO_RESET_EN) */
 395:Generated_Source\PSoC4/CSD_Filter.c ****         }
 396:Generated_Source\PSoC4/CSD_Filter.c ****     }
 397:Generated_Source\PSoC4/CSD_Filter.c ****     
 398:Generated_Source\PSoC4/CSD_Filter.c ****     return(bslnStatus);    
 551              		.loc 1 398 0
 552 0150 BB69     		ldr	r3, [r7, #24]
 399:Generated_Source\PSoC4/CSD_Filter.c **** }
 553              		.loc 1 399 0
 554 0152 181C     		mov	r0, r3
 555 0154 BD46     		mov	sp, r7
 556 0156 0AB0     		add	sp, sp, #40
 557              		@ sp needed
 558 0158 80BD     		pop	{r7, pc}
 559              		.cfi_endproc
 560              	.LFE5:
 561              		.size	CSD_FtUpdateBaseline, .-CSD_FtUpdateBaseline
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 18


 562 015a C046     		.section	.text.CSD_InitializeAllBaselines,"ax",%progbits
 563              		.align	2
 564              		.global	CSD_InitializeAllBaselines
 565              		.code	16
 566              		.thumb_func
 567              		.type	CSD_InitializeAllBaselines, %function
 568              	CSD_InitializeAllBaselines:
 569              	.LFB6:
 400:Generated_Source\PSoC4/CSD_Filter.c **** 
 401:Generated_Source\PSoC4/CSD_Filter.c **** 
 402:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_InitializeAllBaselines
 404:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
 405:Generated_Source\PSoC4/CSD_Filter.c **** *
 406:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    
 407:Generated_Source\PSoC4/CSD_Filter.c **** *  Initializes (or re-initialize) the baseline of all sensors of all widgets.
 408:Generated_Source\PSoC4/CSD_Filter.c **** *
 409:Generated_Source\PSoC4/CSD_Filter.c **** * \details  
 410:Generated_Source\PSoC4/CSD_Filter.c **** *  Initializes the baseline for all sensors of all widgets. Also, this function
 411:Generated_Source\PSoC4/CSD_Filter.c **** *  can be used to re-initialize baselines. CSD_Start() calls this 
 412:Generated_Source\PSoC4/CSD_Filter.c **** *  API as part of CSD operation initialization.
 413:Generated_Source\PSoC4/CSD_Filter.c **** *
 414:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
 415:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_InitializeAllBaselines(void)
 416:Generated_Source\PSoC4/CSD_Filter.c **** {
 570              		.loc 1 416 0
 571              		.cfi_startproc
 572 0000 80B5     		push	{r7, lr}
 573              		.cfi_def_cfa_offset 8
 574              		.cfi_offset 7, -8
 575              		.cfi_offset 14, -4
 576 0002 82B0     		sub	sp, sp, #8
 577              		.cfi_def_cfa_offset 16
 578 0004 00AF     		add	r7, sp, #0
 579              		.cfi_def_cfa_register 7
 417:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 widgetId;    
 418:Generated_Source\PSoC4/CSD_Filter.c ****     
 419:Generated_Source\PSoC4/CSD_Filter.c ****     for(widgetId = CSD_TOTAL_WIDGETS; widgetId-- > 0u;)
 580              		.loc 1 419 0
 581 0006 0123     		mov	r3, #1
 582 0008 7B60     		str	r3, [r7, #4]
 583 000a 03E0     		b	.L34
 584              	.L35:
 420:Generated_Source\PSoC4/CSD_Filter.c ****     {
 421:Generated_Source\PSoC4/CSD_Filter.c ****         CSD_InitializeWidgetBaseline(widgetId); 
 585              		.loc 1 421 0
 586 000c 7B68     		ldr	r3, [r7, #4]
 587 000e 181C     		mov	r0, r3
 588 0010 FFF7FEFF 		bl	CSD_InitializeWidgetBaseline
 589              	.L34:
 419:Generated_Source\PSoC4/CSD_Filter.c ****     {
 590              		.loc 1 419 0 discriminator 1
 591 0014 7B68     		ldr	r3, [r7, #4]
 592 0016 5A1E     		sub	r2, r3, #1
 593 0018 7A60     		str	r2, [r7, #4]
 594 001a 002B     		cmp	r3, #0
 595 001c F6D1     		bne	.L35
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 19


 422:Generated_Source\PSoC4/CSD_Filter.c ****     }
 423:Generated_Source\PSoC4/CSD_Filter.c **** }
 596              		.loc 1 423 0
 597 001e BD46     		mov	sp, r7
 598 0020 02B0     		add	sp, sp, #8
 599              		@ sp needed
 600 0022 80BD     		pop	{r7, pc}
 601              		.cfi_endproc
 602              	.LFE6:
 603              		.size	CSD_InitializeAllBaselines, .-CSD_InitializeAllBaselines
 604              		.section	.text.CSD_InitializeWidgetBaseline,"ax",%progbits
 605              		.align	2
 606              		.global	CSD_InitializeWidgetBaseline
 607              		.code	16
 608              		.thumb_func
 609              		.type	CSD_InitializeWidgetBaseline, %function
 610              	CSD_InitializeWidgetBaseline:
 611              	.LFB7:
 424:Generated_Source\PSoC4/CSD_Filter.c **** 
 425:Generated_Source\PSoC4/CSD_Filter.c **** 
 426:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
 427:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_InitializeWidgetBaseline
 428:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
 429:Generated_Source\PSoC4/CSD_Filter.c **** *
 430:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    
 431:Generated_Source\PSoC4/CSD_Filter.c **** *  Initializes (or re-initialize) the baseline of all sensors in a widget 
 432:Generated_Source\PSoC4/CSD_Filter.c **** *  specified by input parameter. 
 433:Generated_Source\PSoC4/CSD_Filter.c **** *
 434:Generated_Source\PSoC4/CSD_Filter.c **** * \details  
 435:Generated_Source\PSoC4/CSD_Filter.c **** *  Initializes (or re-initializes) the baseline for all sensors of the 
 436:Generated_Source\PSoC4/CSD_Filter.c **** *  specified widget.
 437:Generated_Source\PSoC4/CSD_Filter.c **** *
 438:Generated_Source\PSoC4/CSD_Filter.c **** * \param  widgetId 
 439:Generated_Source\PSoC4/CSD_Filter.c **** *  Specify the ID number of a widget to initialize the baseline of all sensors
 440:Generated_Source\PSoC4/CSD_Filter.c **** *  in the widget. 
 441:Generated_Source\PSoC4/CSD_Filter.c **** *  A macro for the widget ID can be found in the 
 442:Generated_Source\PSoC4/CSD_Filter.c **** *  CSD_Configuration.h file defined as 
 443:Generated_Source\PSoC4/CSD_Filter.c **** *  CSD_<WidgetName>_WDGT_ID Specifies the ID of the widget.
 444:Generated_Source\PSoC4/CSD_Filter.c **** *
 445:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
 446:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_InitializeWidgetBaseline(uint32 widgetId)
 447:Generated_Source\PSoC4/CSD_Filter.c **** {   
 612              		.loc 1 447 0
 613              		.cfi_startproc
 614 0000 80B5     		push	{r7, lr}
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 7, -8
 617              		.cfi_offset 14, -4
 618 0002 86B0     		sub	sp, sp, #24
 619              		.cfi_def_cfa_offset 32
 620 0004 00AF     		add	r7, sp, #0
 621              		.cfi_def_cfa_register 7
 622 0006 7860     		str	r0, [r7, #4]
 448:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 sensorId;
 449:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 sensorsNumber;
 450:Generated_Source\PSoC4/CSD_Filter.c ****   
 451:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_FLASH_WD_STRUCT const *ptrWidget = &CSD_dsFlash.wdgtArray[widgetId];
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 20


 623              		.loc 1 451 0
 624 0008 7A68     		ldr	r2, [r7, #4]
 625 000a 131C     		mov	r3, r2
 626 000c DB00     		lsl	r3, r3, #3
 627 000e 9B1A     		sub	r3, r3, r2
 628 0010 9B00     		lsl	r3, r3, #2
 629 0012 0B4A     		ldr	r2, .L39
 630 0014 9B18     		add	r3, r3, r2
 631 0016 3B61     		str	r3, [r7, #16]
 452:Generated_Source\PSoC4/CSD_Filter.c **** 
 453:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find total amount of sensors in specified widget */   
 454:Generated_Source\PSoC4/CSD_Filter.c ****     sensorsNumber = CSD_GET_SNS_CNT_BY_PTR(ptrWidget);    
 632              		.loc 1 454 0
 633 0018 3B69     		ldr	r3, [r7, #16]
 634 001a DB8A     		ldrh	r3, [r3, #22]
 635 001c FB60     		str	r3, [r7, #12]
 455:Generated_Source\PSoC4/CSD_Filter.c ****     
 456:Generated_Source\PSoC4/CSD_Filter.c ****     for(sensorId = sensorsNumber; sensorId-- > 0u;)
 636              		.loc 1 456 0
 637 001e FB68     		ldr	r3, [r7, #12]
 638 0020 7B61     		str	r3, [r7, #20]
 639 0022 05E0     		b	.L37
 640              	.L38:
 457:Generated_Source\PSoC4/CSD_Filter.c ****     {
 458:Generated_Source\PSoC4/CSD_Filter.c ****         CSD_InitializeSensorBaseline(widgetId, sensorId);   
 641              		.loc 1 458 0
 642 0024 7A68     		ldr	r2, [r7, #4]
 643 0026 7B69     		ldr	r3, [r7, #20]
 644 0028 101C     		mov	r0, r2
 645 002a 191C     		mov	r1, r3
 646 002c FFF7FEFF 		bl	CSD_InitializeSensorBaseline
 647              	.L37:
 456:Generated_Source\PSoC4/CSD_Filter.c ****     {
 648              		.loc 1 456 0 discriminator 1
 649 0030 7B69     		ldr	r3, [r7, #20]
 650 0032 5A1E     		sub	r2, r3, #1
 651 0034 7A61     		str	r2, [r7, #20]
 652 0036 002B     		cmp	r3, #0
 653 0038 F4D1     		bne	.L38
 459:Generated_Source\PSoC4/CSD_Filter.c ****     }
 460:Generated_Source\PSoC4/CSD_Filter.c **** }
 654              		.loc 1 460 0
 655 003a BD46     		mov	sp, r7
 656 003c 06B0     		add	sp, sp, #24
 657              		@ sp needed
 658 003e 80BD     		pop	{r7, pc}
 659              	.L40:
 660              		.align	2
 661              	.L39:
 662 0040 00000000 		.word	CSD_dsFlash
 663              		.cfi_endproc
 664              	.LFE7:
 665              		.size	CSD_InitializeWidgetBaseline, .-CSD_InitializeWidgetBaseline
 666              		.section	.text.CSD_InitializeSensorBaseline,"ax",%progbits
 667              		.align	2
 668              		.global	CSD_InitializeSensorBaseline
 669              		.code	16
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 21


 670              		.thumb_func
 671              		.type	CSD_InitializeSensorBaseline, %function
 672              	CSD_InitializeSensorBaseline:
 673              	.LFB8:
 461:Generated_Source\PSoC4/CSD_Filter.c **** 
 462:Generated_Source\PSoC4/CSD_Filter.c **** 
 463:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
 464:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_InitializeSensorBaseline
 465:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
 466:Generated_Source\PSoC4/CSD_Filter.c **** *
 467:Generated_Source\PSoC4/CSD_Filter.c **** * \brief
 468:Generated_Source\PSoC4/CSD_Filter.c **** *  Initializes (or re-initialize) the baseline of a sensor in a widget specified
 469:Generated_Source\PSoC4/CSD_Filter.c **** *  by input parameters.
 470:Generated_Source\PSoC4/CSD_Filter.c **** *
 471:Generated_Source\PSoC4/CSD_Filter.c **** * \details  
 472:Generated_Source\PSoC4/CSD_Filter.c **** *  Initializes (or re-initializes) the baseline for a specified sensor within
 473:Generated_Source\PSoC4/CSD_Filter.c **** *  a specified widget.
 474:Generated_Source\PSoC4/CSD_Filter.c **** *
 475:Generated_Source\PSoC4/CSD_Filter.c **** * \param    widgetId 
 476:Generated_Source\PSoC4/CSD_Filter.c **** *  Specify the ID number of a widget to initialize the baseline of all sensors
 477:Generated_Source\PSoC4/CSD_Filter.c **** *  in the widget.
 478:Generated_Source\PSoC4/CSD_Filter.c **** *  A macro for the widget ID can be found in the 
 479:Generated_Source\PSoC4/CSD_Filter.c **** *  CSD_Configuration.h file defined as 
 480:Generated_Source\PSoC4/CSD_Filter.c **** *  CSD_<WidgetName>_WDGT_ID Specifies the ID of the widget.
 481:Generated_Source\PSoC4/CSD_Filter.c **** *  
 482:Generated_Source\PSoC4/CSD_Filter.c **** * \param    sensorId 
 483:Generated_Source\PSoC4/CSD_Filter.c **** *  Specify the ID number of the sensor within the widget to initialize its 
 484:Generated_Source\PSoC4/CSD_Filter.c **** *  baseline.
 485:Generated_Source\PSoC4/CSD_Filter.c **** *  A macro for the sensor ID within a specified widget can be found in the 
 486:Generated_Source\PSoC4/CSD_Filter.c **** *  CSD_Configuration.h file defined as 
 487:Generated_Source\PSoC4/CSD_Filter.c **** *  CSD_<WidgetName>_SNS<SensorNumber>_ID
 488:Generated_Source\PSoC4/CSD_Filter.c **** *
 489:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
 490:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_InitializeSensorBaseline(uint32 widgetId, uint32 sensorId)
 491:Generated_Source\PSoC4/CSD_Filter.c **** {      
 674              		.loc 1 491 0
 675              		.cfi_startproc
 676 0000 80B5     		push	{r7, lr}
 677              		.cfi_def_cfa_offset 8
 678              		.cfi_offset 7, -8
 679              		.cfi_offset 14, -4
 680 0002 84B0     		sub	sp, sp, #16
 681              		.cfi_def_cfa_offset 24
 682 0004 00AF     		add	r7, sp, #0
 683              		.cfi_def_cfa_register 7
 684 0006 7860     		str	r0, [r7, #4]
 685 0008 3960     		str	r1, [r7]
 492:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_RAM_SNS_STRUCT *ptrSensor = NULL;    
 686              		.loc 1 492 0
 687 000a 0023     		mov	r3, #0
 688 000c FB60     		str	r3, [r7, #12]
 493:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_FLASH_WD_STRUCT const *ptrWidget = NULL;
 689              		.loc 1 493 0
 690 000e 0023     		mov	r3, #0
 691 0010 BB60     		str	r3, [r7, #8]
 494:Generated_Source\PSoC4/CSD_Filter.c ****     ptrWidget = &CSD_dsFlash.wdgtArray[widgetId];
 692              		.loc 1 494 0
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 22


 693 0012 7A68     		ldr	r2, [r7, #4]
 694 0014 131C     		mov	r3, r2
 695 0016 DB00     		lsl	r3, r3, #3
 696 0018 9B1A     		sub	r3, r3, r2
 697 001a 9B00     		lsl	r3, r3, #2
 698 001c 0C4A     		ldr	r2, .L42
 699 001e 9B18     		add	r3, r3, r2
 700 0020 BB60     		str	r3, [r7, #8]
 495:Generated_Source\PSoC4/CSD_Filter.c ****     
 496:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified sensor object */     
 497:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 701              		.loc 1 497 0
 702 0022 BB68     		ldr	r3, [r7, #8]
 703 0024 9B68     		ldr	r3, [r3, #8]
 704 0026 FB60     		str	r3, [r7, #12]
 498:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 705              		.loc 1 498 0
 706 0028 3A68     		ldr	r2, [r7]
 707 002a 131C     		mov	r3, r2
 708 002c 9B00     		lsl	r3, r3, #2
 709 002e 9B18     		add	r3, r3, r2
 710 0030 5B00     		lsl	r3, r3, #1
 711 0032 1A1C     		mov	r2, r3
 712 0034 FB68     		ldr	r3, [r7, #12]
 713 0036 9B18     		add	r3, r3, r2
 714 0038 FB60     		str	r3, [r7, #12]
 499:Generated_Source\PSoC4/CSD_Filter.c ****     
 500:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_FtInitializeBaseline(ptrSensor, (uint32)ptrWidget->wdgtType);      
 715              		.loc 1 500 0
 716 003a BB68     		ldr	r3, [r7, #8]
 717 003c 1B7E     		ldrb	r3, [r3, #24]
 718 003e 1A1C     		mov	r2, r3
 719 0040 FB68     		ldr	r3, [r7, #12]
 720 0042 181C     		mov	r0, r3
 721 0044 111C     		mov	r1, r2
 722 0046 FFF7FEFF 		bl	CSD_FtInitializeBaseline
 501:Generated_Source\PSoC4/CSD_Filter.c **** }
 723              		.loc 1 501 0
 724 004a BD46     		mov	sp, r7
 725 004c 04B0     		add	sp, sp, #16
 726              		@ sp needed
 727 004e 80BD     		pop	{r7, pc}
 728              	.L43:
 729              		.align	2
 730              	.L42:
 731 0050 00000000 		.word	CSD_dsFlash
 732              		.cfi_endproc
 733              	.LFE8:
 734              		.size	CSD_InitializeSensorBaseline, .-CSD_InitializeSensorBaseline
 735              		.section	.text.CSD_FtInitializeBaseline,"ax",%progbits
 736              		.align	2
 737              		.global	CSD_FtInitializeBaseline
 738              		.code	16
 739              		.thumb_func
 740              		.type	CSD_FtInitializeBaseline, %function
 741              	CSD_FtInitializeBaseline:
 742              	.LFB9:
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 23


 502:Generated_Source\PSoC4/CSD_Filter.c **** 
 503:Generated_Source\PSoC4/CSD_Filter.c **** 
 504:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
 505:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_FtInitializeBaseline
 506:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
 507:Generated_Source\PSoC4/CSD_Filter.c **** *
 508:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Initializes the baseline history for a sensor indicated by an input
 509:Generated_Source\PSoC4/CSD_Filter.c **** *           parameter.
 510:Generated_Source\PSoC4/CSD_Filter.c **** *
 511:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Initializes the baseline history for a sensor indicated by an input
 512:Generated_Source\PSoC4/CSD_Filter.c **** *           parameter.
 513:Generated_Source\PSoC4/CSD_Filter.c **** *
 514:Generated_Source\PSoC4/CSD_Filter.c **** * \param    *ptrSensor The pointer to the sensor RAM object.
 515:Generated_Source\PSoC4/CSD_Filter.c **** * \param    wdType     Specifies the type of a widget.
 516:Generated_Source\PSoC4/CSD_Filter.c **** *
 517:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
 518:Generated_Source\PSoC4/CSD_Filter.c **** CY_INLINE void CSD_FtInitializeBaseline(CSD_RAM_SNS_STRUCT *ptrSensor, uint32 wdType) 
 519:Generated_Source\PSoC4/CSD_Filter.c **** {
 743              		.loc 1 519 0
 744              		.cfi_startproc
 745 0000 80B5     		push	{r7, lr}
 746              		.cfi_def_cfa_offset 8
 747              		.cfi_offset 7, -8
 748              		.cfi_offset 14, -4
 749 0002 84B0     		sub	sp, sp, #16
 750              		.cfi_def_cfa_offset 24
 751 0004 00AF     		add	r7, sp, #0
 752              		.cfi_def_cfa_register 7
 753 0006 7860     		str	r0, [r7, #4]
 754 0008 3960     		str	r1, [r7]
 520:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 channel;
 521:Generated_Source\PSoC4/CSD_Filter.c **** 
 522:Generated_Source\PSoC4/CSD_Filter.c ****     /* Apply baseline initialization to every channel in sensor */    
 523:Generated_Source\PSoC4/CSD_Filter.c ****     for(channel = CSD_NUM_SCAN_FREQS; channel-- > 0u;) 
 755              		.loc 1 523 0
 756 000a 0123     		mov	r3, #1
 757 000c FB60     		str	r3, [r7, #12]
 758 000e 07E0     		b	.L45
 759              	.L46:
 524:Generated_Source\PSoC4/CSD_Filter.c ****     {
 525:Generated_Source\PSoC4/CSD_Filter.c ****         CSD_FtInitializeBaselineChannel(ptrSensor, wdType, channel); 
 760              		.loc 1 525 0
 761 0010 7968     		ldr	r1, [r7, #4]
 762 0012 3A68     		ldr	r2, [r7]
 763 0014 FB68     		ldr	r3, [r7, #12]
 764 0016 081C     		mov	r0, r1
 765 0018 111C     		mov	r1, r2
 766 001a 1A1C     		mov	r2, r3
 767 001c FFF7FEFF 		bl	CSD_FtInitializeBaselineChannel
 768              	.L45:
 523:Generated_Source\PSoC4/CSD_Filter.c ****     {
 769              		.loc 1 523 0 discriminator 1
 770 0020 FB68     		ldr	r3, [r7, #12]
 771 0022 5A1E     		sub	r2, r3, #1
 772 0024 FA60     		str	r2, [r7, #12]
 773 0026 002B     		cmp	r3, #0
 774 0028 F2D1     		bne	.L46
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 24


 526:Generated_Source\PSoC4/CSD_Filter.c ****     }
 527:Generated_Source\PSoC4/CSD_Filter.c **** }
 775              		.loc 1 527 0
 776 002a BD46     		mov	sp, r7
 777 002c 04B0     		add	sp, sp, #16
 778              		@ sp needed
 779 002e 80BD     		pop	{r7, pc}
 780              		.cfi_endproc
 781              	.LFE9:
 782              		.size	CSD_FtInitializeBaseline, .-CSD_FtInitializeBaseline
 783              		.section	.text.CSD_FtInitializeBaselineChannel,"ax",%progbits
 784              		.align	2
 785              		.global	CSD_FtInitializeBaselineChannel
 786              		.code	16
 787              		.thumb_func
 788              		.type	CSD_FtInitializeBaselineChannel, %function
 789              	CSD_FtInitializeBaselineChannel:
 790              	.LFB10:
 528:Generated_Source\PSoC4/CSD_Filter.c **** 
 529:Generated_Source\PSoC4/CSD_Filter.c **** 
 530:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
 531:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_FtInitializeBaselineChannel
 532:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
 533:Generated_Source\PSoC4/CSD_Filter.c **** *
 534:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Initializes the baseline history for a sensor indicated by an input
 535:Generated_Source\PSoC4/CSD_Filter.c **** *           parameter.
 536:Generated_Source\PSoC4/CSD_Filter.c **** *
 537:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Initializes the baseline history for a sensor indicated by an input
 538:Generated_Source\PSoC4/CSD_Filter.c **** *           parameter.
 539:Generated_Source\PSoC4/CSD_Filter.c **** *
 540:Generated_Source\PSoC4/CSD_Filter.c **** * \param    *ptrSensor The pointer to the sensor RAM object.
 541:Generated_Source\PSoC4/CSD_Filter.c **** * \param    wdType     Specifies the type of a widget.
 542:Generated_Source\PSoC4/CSD_Filter.c **** * \param    channel    Specifies the number of the channel to be initialized.
 543:Generated_Source\PSoC4/CSD_Filter.c **** *
 544:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
 545:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_FtInitializeBaselineChannel(CSD_RAM_SNS_STRUCT *ptrSensor, uint32 wdType, uint32 channel) 
 546:Generated_Source\PSoC4/CSD_Filter.c **** {
 791              		.loc 1 546 0
 792              		.cfi_startproc
 793 0000 80B5     		push	{r7, lr}
 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 84B0     		sub	sp, sp, #16
 798              		.cfi_def_cfa_offset 24
 799 0004 00AF     		add	r7, sp, #0
 800              		.cfi_def_cfa_register 7
 801 0006 F860     		str	r0, [r7, #12]
 802 0008 B960     		str	r1, [r7, #8]
 803 000a 7A60     		str	r2, [r7, #4]
 547:Generated_Source\PSoC4/CSD_Filter.c ****     #if (CSD_BASELINE_TYPE == CSD_IIR_BASELINE)  
 548:Generated_Source\PSoC4/CSD_Filter.c ****         if ((CSD_WD_TYPE_ENUM)wdType != CSD_WD_PROXIMITY_E)
 804              		.loc 1 548 0
 805 000c BB68     		ldr	r3, [r7, #8]
 806 000e DBB2     		uxtb	r3, r3
 807 0010 062B     		cmp	r3, #6
 808 0012 04D0     		beq	.L48
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 25


 549:Generated_Source\PSoC4/CSD_Filter.c ****         {
 550:Generated_Source\PSoC4/CSD_Filter.c ****             #if (CSD_REGULAR_SENSOR_EN)
 551:Generated_Source\PSoC4/CSD_Filter.c ****                 #if (CSD_REGULAR_IIR_BL_TYPE == CSD_IIR_FILTER_PERFORMANCE)                    
 552:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrSensor->bslnExt[channel] = 0u;                
 809              		.loc 1 552 0
 810 0014 FA68     		ldr	r2, [r7, #12]
 811 0016 7B68     		ldr	r3, [r7, #4]
 812 0018 D318     		add	r3, r2, r3
 813 001a 0022     		mov	r2, #0
 814 001c 1A71     		strb	r2, [r3, #4]
 815              	.L48:
 553:Generated_Source\PSoC4/CSD_Filter.c ****                 #endif /* (CSD_REGULAR_IIR_BL_TYPE == CSD_IIR_FILTER_PERFORMANCE) */
 554:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (CSD_REGULAR_SENSOR_EN) */
 555:Generated_Source\PSoC4/CSD_Filter.c ****         }
 556:Generated_Source\PSoC4/CSD_Filter.c ****         else
 557:Generated_Source\PSoC4/CSD_Filter.c ****         {
 558:Generated_Source\PSoC4/CSD_Filter.c ****             #if (CSD_PROXIMITY_SENSOR_EN)     
 559:Generated_Source\PSoC4/CSD_Filter.c ****                 #if (CSD_PROX_IIR_BL_TYPE == CSD_IIR_FILTER_PERFORMANCE)                   
 560:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrSensor->bslnExt[channel] = 0u;               
 561:Generated_Source\PSoC4/CSD_Filter.c ****                 #endif /* (CSD_PROX_IIR_BL_TYPE == CSD_IIR_FILTER_PERFORMANCE) */
 562:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (CSD_PROX_SENSOR_EN) */
 563:Generated_Source\PSoC4/CSD_Filter.c ****         }
 564:Generated_Source\PSoC4/CSD_Filter.c ****     #else
 565:Generated_Source\PSoC4/CSD_Filter.c ****         /* CSD_BASELINE_TYPE == CSD_BUCKET_BASELINE */        
 566:Generated_Source\PSoC4/CSD_Filter.c ****         ptrSensor->bslnExt[channel] = 0u;        
 567:Generated_Source\PSoC4/CSD_Filter.c ****     #endif /* (CSD_BASELINE_TYPE == CSD_IIR_BASELINE) */      
 568:Generated_Source\PSoC4/CSD_Filter.c ****     
 569:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor->bsln[channel] = ptrSensor->raw[channel];
 816              		.loc 1 569 0
 817 001e FB68     		ldr	r3, [r7, #12]
 818 0020 7A68     		ldr	r2, [r7, #4]
 819 0022 5200     		lsl	r2, r2, #1
 820 0024 D15A     		ldrh	r1, [r2, r3]
 821 0026 FA68     		ldr	r2, [r7, #12]
 822 0028 7B68     		ldr	r3, [r7, #4]
 823 002a 5B00     		lsl	r3, r3, #1
 824 002c D318     		add	r3, r2, r3
 825 002e 0A1C     		add	r2, r1, #0
 826 0030 5A80     		strh	r2, [r3, #2]
 570:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor->negBslnRstCnt[channel] = 0u;
 827              		.loc 1 570 0
 828 0032 FA68     		ldr	r2, [r7, #12]
 829 0034 7B68     		ldr	r3, [r7, #4]
 830 0036 D318     		add	r3, r2, r3
 831 0038 0833     		add	r3, r3, #8
 832 003a 0022     		mov	r2, #0
 833 003c 1A70     		strb	r2, [r3]
 571:Generated_Source\PSoC4/CSD_Filter.c **** }
 834              		.loc 1 571 0
 835 003e BD46     		mov	sp, r7
 836 0040 04B0     		add	sp, sp, #16
 837              		@ sp needed
 838 0042 80BD     		pop	{r7, pc}
 839              		.cfi_endproc
 840              	.LFE10:
 841              		.size	CSD_FtInitializeBaselineChannel, .-CSD_FtInitializeBaselineChannel
 842              		.section	.text.CSD_InitializeIIR,"ax",%progbits
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 26


 843              		.align	2
 844              		.global	CSD_InitializeIIR
 845              		.code	16
 846              		.thumb_func
 847              		.type	CSD_InitializeIIR, %function
 848              	CSD_InitializeIIR:
 849              	.LFB11:
 572:Generated_Source\PSoC4/CSD_Filter.c **** 
 573:Generated_Source\PSoC4/CSD_Filter.c **** 
 574:Generated_Source\PSoC4/CSD_Filter.c **** #if (CSD_REGULAR_RC_IIR_FILTER_EN || CSD_PROX_RC_IIR_FILTER_EN)
 575:Generated_Source\PSoC4/CSD_Filter.c **** 
 576:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
 577:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_InitializeIIR
 578:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
 579:Generated_Source\PSoC4/CSD_Filter.c **** *
 580:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Initialize the IIR filter history.
 581:Generated_Source\PSoC4/CSD_Filter.c **** *
 582:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Initialize the IIR filter history.
 583:Generated_Source\PSoC4/CSD_Filter.c **** *
 584:Generated_Source\PSoC4/CSD_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 585:Generated_Source\PSoC4/CSD_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 586:Generated_Source\PSoC4/CSD_Filter.c **** *
 587:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
 588:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_InitializeIIR(uint32 widgetId, uint32 sensorId)
 589:Generated_Source\PSoC4/CSD_Filter.c **** {   
 850              		.loc 1 589 0
 851              		.cfi_startproc
 852 0000 90B5     		push	{r4, r7, lr}
 853              		.cfi_def_cfa_offset 12
 854              		.cfi_offset 4, -12
 855              		.cfi_offset 7, -8
 856              		.cfi_offset 14, -4
 857 0002 87B0     		sub	sp, sp, #28
 858              		.cfi_def_cfa_offset 40
 859 0004 00AF     		add	r7, sp, #0
 860              		.cfi_def_cfa_register 7
 861 0006 7860     		str	r0, [r7, #4]
 862 0008 3960     		str	r1, [r7]
 590:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_FLASH_WD_STRUCT const *ptrWidget = &CSD_dsFlash.wdgtArray[widgetId];      
 863              		.loc 1 590 0
 864 000a 7A68     		ldr	r2, [r7, #4]
 865 000c 131C     		mov	r3, r2
 866 000e DB00     		lsl	r3, r3, #3
 867 0010 9B1A     		sub	r3, r3, r2
 868 0012 9B00     		lsl	r3, r3, #2
 869 0014 144A     		ldr	r2, .L51
 870 0016 9B18     		add	r3, r3, r2
 871 0018 7B61     		str	r3, [r7, #20]
 591:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_RAM_SNS_STRUCT *ptrSensor = NULL;    
 872              		.loc 1 591 0
 873 001a 0023     		mov	r3, #0
 874 001c 3B61     		str	r3, [r7, #16]
 592:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_PTR_FILTER_VARIANT ptrFilterHistObj; 
 593:Generated_Source\PSoC4/CSD_Filter.c ****               
 594:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified sensor object */     
 595:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 875              		.loc 1 595 0
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 27


 876 001e 7B69     		ldr	r3, [r7, #20]
 877 0020 9B68     		ldr	r3, [r3, #8]
 878 0022 3B61     		str	r3, [r7, #16]
 596:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 879              		.loc 1 596 0
 880 0024 3A68     		ldr	r2, [r7]
 881 0026 131C     		mov	r3, r2
 882 0028 9B00     		lsl	r3, r3, #2
 883 002a 9B18     		add	r3, r3, r2
 884 002c 5B00     		lsl	r3, r3, #1
 885 002e 1A1C     		mov	r2, r3
 886 0030 3B69     		ldr	r3, [r7, #16]
 887 0032 9B18     		add	r3, r3, r2
 888 0034 3B61     		str	r3, [r7, #16]
 597:Generated_Source\PSoC4/CSD_Filter.c ****         
 598:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified filter sensor object */     
 599:Generated_Source\PSoC4/CSD_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 889              		.loc 1 599 0
 890 0036 7B69     		ldr	r3, [r7, #20]
 891 0038 DB68     		ldr	r3, [r3, #12]
 892 003a FB60     		str	r3, [r7, #12]
 600:Generated_Source\PSoC4/CSD_Filter.c ****     
 601:Generated_Source\PSoC4/CSD_Filter.c ****     if ((CSD_WD_TYPE_ENUM)ptrWidget->wdgtType != CSD_WD_PROXIMITY_E)
 893              		.loc 1 601 0
 894 003c 7B69     		ldr	r3, [r7, #20]
 895 003e 1B7E     		ldrb	r3, [r3, #24]
 896 0040 062B     		cmp	r3, #6
 897 0042 04D0     		beq	.L50
 602:Generated_Source\PSoC4/CSD_Filter.c ****     {
 603:Generated_Source\PSoC4/CSD_Filter.c ****         #if (CSD_REGULAR_SENSOR_EN)
 604:Generated_Source\PSoC4/CSD_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 898              		.loc 1 604 0
 899 0044 FA68     		ldr	r2, [r7, #12]
 900 0046 3B68     		ldr	r3, [r7]
 901 0048 5B00     		lsl	r3, r3, #1
 902 004a D318     		add	r3, r2, r3
 903 004c FB60     		str	r3, [r7, #12]
 904              	.L50:
 605:Generated_Source\PSoC4/CSD_Filter.c ****         #endif /* (CSD_REGULAR_SENSOR_EN) */
 606:Generated_Source\PSoC4/CSD_Filter.c ****     }
 607:Generated_Source\PSoC4/CSD_Filter.c ****     else
 608:Generated_Source\PSoC4/CSD_Filter.c ****     {
 609:Generated_Source\PSoC4/CSD_Filter.c ****         #if (CSD_PROXIMITY_SENSOR_EN)
 610:Generated_Source\PSoC4/CSD_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 611:Generated_Source\PSoC4/CSD_Filter.c ****         #endif /* (CSD_PROXIMITY_SENSOR_EN) */
 612:Generated_Source\PSoC4/CSD_Filter.c ****     }    
 613:Generated_Source\PSoC4/CSD_Filter.c ****     
 614:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_InitializeIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 905              		.loc 1 614 0
 906 004e 7B69     		ldr	r3, [r7, #20]
 907 0050 1B7E     		ldrb	r3, [r3, #24]
 908 0052 1C1C     		mov	r4, r3
 909 0054 FA68     		ldr	r2, [r7, #12]
 910 0056 3B69     		ldr	r3, [r7, #16]
 911 0058 101C     		mov	r0, r2
 912 005a 191C     		mov	r1, r3
 913 005c 221C     		mov	r2, r4
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 28


 914 005e FFF7FEFF 		bl	CSD_InitializeIIRInternal
 615:Generated_Source\PSoC4/CSD_Filter.c **** }
 915              		.loc 1 615 0
 916 0062 BD46     		mov	sp, r7
 917 0064 07B0     		add	sp, sp, #28
 918              		@ sp needed
 919 0066 90BD     		pop	{r4, r7, pc}
 920              	.L52:
 921              		.align	2
 922              	.L51:
 923 0068 00000000 		.word	CSD_dsFlash
 924              		.cfi_endproc
 925              	.LFE11:
 926              		.size	CSD_InitializeIIR, .-CSD_InitializeIIR
 927              		.section	.text.CSD_RunIIR,"ax",%progbits
 928              		.align	2
 929              		.global	CSD_RunIIR
 930              		.code	16
 931              		.thumb_func
 932              		.type	CSD_RunIIR, %function
 933              	CSD_RunIIR:
 934              	.LFB12:
 616:Generated_Source\PSoC4/CSD_Filter.c **** 
 617:Generated_Source\PSoC4/CSD_Filter.c **** 
 618:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
 619:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_RunIIR
 620:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
 621:Generated_Source\PSoC4/CSD_Filter.c **** *
 622:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Executes the IIR filter algorithm on a sensor indicated by an input
 623:Generated_Source\PSoC4/CSD_Filter.c **** *           parameter. 
 624:Generated_Source\PSoC4/CSD_Filter.c **** *
 625:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Executes the IIR filter algorithm on a sensor indicated by an input
 626:Generated_Source\PSoC4/CSD_Filter.c **** *           parameter. 
 627:Generated_Source\PSoC4/CSD_Filter.c **** *
 628:Generated_Source\PSoC4/CSD_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 629:Generated_Source\PSoC4/CSD_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 630:Generated_Source\PSoC4/CSD_Filter.c **** *
 631:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
 632:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_RunIIR(uint32 widgetId, uint32 sensorId)
 633:Generated_Source\PSoC4/CSD_Filter.c **** {
 935              		.loc 1 633 0
 936              		.cfi_startproc
 937 0000 90B5     		push	{r4, r7, lr}
 938              		.cfi_def_cfa_offset 12
 939              		.cfi_offset 4, -12
 940              		.cfi_offset 7, -8
 941              		.cfi_offset 14, -4
 942 0002 87B0     		sub	sp, sp, #28
 943              		.cfi_def_cfa_offset 40
 944 0004 00AF     		add	r7, sp, #0
 945              		.cfi_def_cfa_register 7
 946 0006 7860     		str	r0, [r7, #4]
 947 0008 3960     		str	r1, [r7]
 634:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_FLASH_WD_STRUCT const *ptrWidget = &CSD_dsFlash.wdgtArray[widgetId];      
 948              		.loc 1 634 0
 949 000a 7A68     		ldr	r2, [r7, #4]
 950 000c 131C     		mov	r3, r2
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 29


 951 000e DB00     		lsl	r3, r3, #3
 952 0010 9B1A     		sub	r3, r3, r2
 953 0012 9B00     		lsl	r3, r3, #2
 954 0014 144A     		ldr	r2, .L55
 955 0016 9B18     		add	r3, r3, r2
 956 0018 7B61     		str	r3, [r7, #20]
 635:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_RAM_SNS_STRUCT *ptrSensor = NULL;    
 957              		.loc 1 635 0
 958 001a 0023     		mov	r3, #0
 959 001c 3B61     		str	r3, [r7, #16]
 636:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_PTR_FILTER_VARIANT ptrFilterHistObj; 
 637:Generated_Source\PSoC4/CSD_Filter.c ****               
 638:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified sensor object */     
 639:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 960              		.loc 1 639 0
 961 001e 7B69     		ldr	r3, [r7, #20]
 962 0020 9B68     		ldr	r3, [r3, #8]
 963 0022 3B61     		str	r3, [r7, #16]
 640:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 964              		.loc 1 640 0
 965 0024 3A68     		ldr	r2, [r7]
 966 0026 131C     		mov	r3, r2
 967 0028 9B00     		lsl	r3, r3, #2
 968 002a 9B18     		add	r3, r3, r2
 969 002c 5B00     		lsl	r3, r3, #1
 970 002e 1A1C     		mov	r2, r3
 971 0030 3B69     		ldr	r3, [r7, #16]
 972 0032 9B18     		add	r3, r3, r2
 973 0034 3B61     		str	r3, [r7, #16]
 641:Generated_Source\PSoC4/CSD_Filter.c ****         
 642:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified filter sensor object */     
 643:Generated_Source\PSoC4/CSD_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 974              		.loc 1 643 0
 975 0036 7B69     		ldr	r3, [r7, #20]
 976 0038 DB68     		ldr	r3, [r3, #12]
 977 003a FB60     		str	r3, [r7, #12]
 644:Generated_Source\PSoC4/CSD_Filter.c ****     
 645:Generated_Source\PSoC4/CSD_Filter.c ****     if ((CSD_WD_TYPE_ENUM)ptrWidget->wdgtType != CSD_WD_PROXIMITY_E)
 978              		.loc 1 645 0
 979 003c 7B69     		ldr	r3, [r7, #20]
 980 003e 1B7E     		ldrb	r3, [r3, #24]
 981 0040 062B     		cmp	r3, #6
 982 0042 04D0     		beq	.L54
 646:Generated_Source\PSoC4/CSD_Filter.c ****     {
 647:Generated_Source\PSoC4/CSD_Filter.c ****         #if (CSD_REGULAR_SENSOR_EN)
 648:Generated_Source\PSoC4/CSD_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 983              		.loc 1 648 0
 984 0044 FA68     		ldr	r2, [r7, #12]
 985 0046 3B68     		ldr	r3, [r7]
 986 0048 5B00     		lsl	r3, r3, #1
 987 004a D318     		add	r3, r2, r3
 988 004c FB60     		str	r3, [r7, #12]
 989              	.L54:
 649:Generated_Source\PSoC4/CSD_Filter.c ****         #endif /* (CSD_REGULAR_SENSOR_EN) */
 650:Generated_Source\PSoC4/CSD_Filter.c ****     }
 651:Generated_Source\PSoC4/CSD_Filter.c ****     else
 652:Generated_Source\PSoC4/CSD_Filter.c ****     {
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 30


 653:Generated_Source\PSoC4/CSD_Filter.c ****         #if (CSD_PROXIMITY_SENSOR_EN)
 654:Generated_Source\PSoC4/CSD_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 655:Generated_Source\PSoC4/CSD_Filter.c ****         #endif /* (CSD_PROXIMITY_SENSOR_EN) */
 656:Generated_Source\PSoC4/CSD_Filter.c ****     }    
 657:Generated_Source\PSoC4/CSD_Filter.c ****     
 658:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_RunIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 990              		.loc 1 658 0
 991 004e 7B69     		ldr	r3, [r7, #20]
 992 0050 1B7E     		ldrb	r3, [r3, #24]
 993 0052 1C1C     		mov	r4, r3
 994 0054 FA68     		ldr	r2, [r7, #12]
 995 0056 3B69     		ldr	r3, [r7, #16]
 996 0058 101C     		mov	r0, r2
 997 005a 191C     		mov	r1, r3
 998 005c 221C     		mov	r2, r4
 999 005e FFF7FEFF 		bl	CSD_RunIIRInternal
 659:Generated_Source\PSoC4/CSD_Filter.c **** }
 1000              		.loc 1 659 0
 1001 0062 BD46     		mov	sp, r7
 1002 0064 07B0     		add	sp, sp, #28
 1003              		@ sp needed
 1004 0066 90BD     		pop	{r4, r7, pc}
 1005              	.L56:
 1006              		.align	2
 1007              	.L55:
 1008 0068 00000000 		.word	CSD_dsFlash
 1009              		.cfi_endproc
 1010              	.LFE12:
 1011              		.size	CSD_RunIIR, .-CSD_RunIIR
 1012              		.section	.text.CSD_InitializeIIRInternal,"ax",%progbits
 1013              		.align	2
 1014              		.global	CSD_InitializeIIRInternal
 1015              		.code	16
 1016              		.thumb_func
 1017              		.type	CSD_InitializeIIRInternal, %function
 1018              	CSD_InitializeIIRInternal:
 1019              	.LFB13:
 660:Generated_Source\PSoC4/CSD_Filter.c ****     
 661:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
 662:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_InitializeIIRInternal
 663:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
 664:Generated_Source\PSoC4/CSD_Filter.c **** *
 665:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Initializes the IIR filter history.
 666:Generated_Source\PSoC4/CSD_Filter.c **** *
 667:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Initializes the IIR filter history.
 668:Generated_Source\PSoC4/CSD_Filter.c **** *
 669:Generated_Source\PSoC4/CSD_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
 670:Generated_Source\PSoC4/CSD_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
 671:Generated_Source\PSoC4/CSD_Filter.c **** * \param    wdType           Specifies the type of a widget.                                  
 672:Generated_Source\PSoC4/CSD_Filter.c **** *
 673:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
 674:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_InitializeIIRInternal(CSD_PTR_FILTER_VARIANT ptrFilterHistObj,
 675:Generated_Source\PSoC4/CSD_Filter.c ****                                             CSD_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
 676:Generated_Source\PSoC4/CSD_Filter.c **** {
 1020              		.loc 1 676 0
 1021              		.cfi_startproc
 1022 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 31


 1023              		.cfi_def_cfa_offset 8
 1024              		.cfi_offset 7, -8
 1025              		.cfi_offset 14, -4
 1026 0002 86B0     		sub	sp, sp, #24
 1027              		.cfi_def_cfa_offset 32
 1028 0004 00AF     		add	r7, sp, #0
 1029              		.cfi_def_cfa_register 7
 1030 0006 F860     		str	r0, [r7, #12]
 1031 0008 B960     		str	r1, [r7, #8]
 1032 000a 7A60     		str	r2, [r7, #4]
 677:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 channel;
 678:Generated_Source\PSoC4/CSD_Filter.c **** 
 679:Generated_Source\PSoC4/CSD_Filter.c ****     for(channel = CSD_NUM_SCAN_FREQS; channel-- > 0u;)
 1033              		.loc 1 679 0
 1034 000c 0123     		mov	r3, #1
 1035 000e 7B61     		str	r3, [r7, #20]
 1036 0010 0BE0     		b	.L58
 1037              	.L59:
 680:Generated_Source\PSoC4/CSD_Filter.c ****     {
 681:Generated_Source\PSoC4/CSD_Filter.c ****         if ((CSD_WD_TYPE_ENUM)wdType != CSD_WD_PROXIMITY_E)
 1038              		.loc 1 681 0
 1039 0012 7B68     		ldr	r3, [r7, #4]
 1040 0014 DBB2     		uxtb	r3, r3
 1041 0016 062B     		cmp	r3, #6
 1042 0018 07D0     		beq	.L58
 682:Generated_Source\PSoC4/CSD_Filter.c ****         {
 683:Generated_Source\PSoC4/CSD_Filter.c ****             #if (CSD_REGULAR_SENSOR_EN && CSD_REGULAR_RC_IIR_FILTER_EN)
 684:Generated_Source\PSoC4/CSD_Filter.c ****                 #if (CSD_REGULAR_IIR_RC_TYPE == CSD_IIR_FILTER_PERFORMANCE)
 685:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[channel].iirHistory = ptrSensorObj-
 686:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[channel].iirHistoryLow = 0u;
 687:Generated_Source\PSoC4/CSD_Filter.c ****                 #else
 688:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[channel].iirHistory = ptrSensorObj-
 1043              		.loc 1 688 0
 1044 001a FB68     		ldr	r3, [r7, #12]
 1045 001c BA68     		ldr	r2, [r7, #8]
 1046 001e 7969     		ldr	r1, [r7, #20]
 1047 0020 4900     		lsl	r1, r1, #1
 1048 0022 895A     		ldrh	r1, [r1, r2]
 1049 0024 7A69     		ldr	r2, [r7, #20]
 1050 0026 5200     		lsl	r2, r2, #1
 1051 0028 D152     		strh	r1, [r2, r3]
 1052              	.L58:
 679:Generated_Source\PSoC4/CSD_Filter.c ****     {
 1053              		.loc 1 679 0 discriminator 1
 1054 002a 7B69     		ldr	r3, [r7, #20]
 1055 002c 5A1E     		sub	r2, r3, #1
 1056 002e 7A61     		str	r2, [r7, #20]
 1057 0030 002B     		cmp	r3, #0
 1058 0032 EED1     		bne	.L59
 689:Generated_Source\PSoC4/CSD_Filter.c ****                 #endif /* (CSD_REGULAR_IIR_RC_TYPE == CSD_IIR_FILTER_PERFORMANCE) */
 690:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (CSD_REGULAR_SENSOR_EN) */    
 691:Generated_Source\PSoC4/CSD_Filter.c ****         }
 692:Generated_Source\PSoC4/CSD_Filter.c ****         else
 693:Generated_Source\PSoC4/CSD_Filter.c ****         {
 694:Generated_Source\PSoC4/CSD_Filter.c ****             #if (CSD_PROXIMITY_SENSOR_EN && CSD_PROX_RC_IIR_FILTER_EN)
 695:Generated_Source\PSoC4/CSD_Filter.c ****                 #if (CSD_PROX_IIR_RC_TYPE == CSD_IIR_FILTER_PERFORMANCE)
 696:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[channel].iirHistory = ptrSensorObj->raw[c
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 32


 697:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[channel].iirHistoryLow = 0u;    
 698:Generated_Source\PSoC4/CSD_Filter.c ****                 #else
 699:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[channel].iirHistory = ptrSensorObj->raw[c
 700:Generated_Source\PSoC4/CSD_Filter.c ****                 #endif /* (CSD_PROX_IIR_RC_TYPE == CSD_IIR_FILTER_PERFORMANCE) */
 701:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (CSD_PROX_SENSOR_EN) */
 702:Generated_Source\PSoC4/CSD_Filter.c ****         }    
 703:Generated_Source\PSoC4/CSD_Filter.c ****     }    
 704:Generated_Source\PSoC4/CSD_Filter.c **** }
 1059              		.loc 1 704 0
 1060 0034 BD46     		mov	sp, r7
 1061 0036 06B0     		add	sp, sp, #24
 1062              		@ sp needed
 1063 0038 80BD     		pop	{r7, pc}
 1064              		.cfi_endproc
 1065              	.LFE13:
 1066              		.size	CSD_InitializeIIRInternal, .-CSD_InitializeIIRInternal
 1067 003a C046     		.section	.text.CSD_RunIIRInternal,"ax",%progbits
 1068              		.align	2
 1069              		.global	CSD_RunIIRInternal
 1070              		.code	16
 1071              		.thumb_func
 1072              		.type	CSD_RunIIRInternal, %function
 1073              	CSD_RunIIRInternal:
 1074              	.LFB14:
 705:Generated_Source\PSoC4/CSD_Filter.c ****  
 706:Generated_Source\PSoC4/CSD_Filter.c **** 
 707:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
 708:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_RunIIRInternal
 709:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
 710:Generated_Source\PSoC4/CSD_Filter.c **** *
 711:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Run the IIR filter.
 712:Generated_Source\PSoC4/CSD_Filter.c **** *
 713:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Run the IIR filter.
 714:Generated_Source\PSoC4/CSD_Filter.c **** *
 715:Generated_Source\PSoC4/CSD_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
 716:Generated_Source\PSoC4/CSD_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
 717:Generated_Source\PSoC4/CSD_Filter.c **** * \param    wdType           Specifies the type of a widget.
 718:Generated_Source\PSoC4/CSD_Filter.c **** *
 719:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/    
 720:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_RunIIRInternal(CSD_PTR_FILTER_VARIANT ptrFilterHistObj, 
 721:Generated_Source\PSoC4/CSD_Filter.c ****                                      CSD_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
 722:Generated_Source\PSoC4/CSD_Filter.c **** {        
 1075              		.loc 1 722 0
 1076              		.cfi_startproc
 1077 0000 80B5     		push	{r7, lr}
 1078              		.cfi_def_cfa_offset 8
 1079              		.cfi_offset 7, -8
 1080              		.cfi_offset 14, -4
 1081 0002 86B0     		sub	sp, sp, #24
 1082              		.cfi_def_cfa_offset 32
 1083 0004 00AF     		add	r7, sp, #0
 1084              		.cfi_def_cfa_register 7
 1085 0006 F860     		str	r0, [r7, #12]
 1086 0008 B960     		str	r1, [r7, #8]
 1087 000a 7A60     		str	r2, [r7, #4]
 723:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 channel;
 724:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 temp;
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 33


 725:Generated_Source\PSoC4/CSD_Filter.c **** 
 726:Generated_Source\PSoC4/CSD_Filter.c ****     for(channel = CSD_NUM_SCAN_FREQS; channel-- > 0u;)
 1088              		.loc 1 726 0
 1089 000c 0123     		mov	r3, #1
 1090 000e 7B61     		str	r3, [r7, #20]
 1091 0010 20E0     		b	.L61
 1092              	.L62:
 727:Generated_Source\PSoC4/CSD_Filter.c ****     {
 728:Generated_Source\PSoC4/CSD_Filter.c ****         if ((CSD_WD_TYPE_ENUM)wdType != CSD_WD_PROXIMITY_E)
 1093              		.loc 1 728 0
 1094 0012 7B68     		ldr	r3, [r7, #4]
 1095 0014 DBB2     		uxtb	r3, r3
 1096 0016 062B     		cmp	r3, #6
 1097 0018 1CD0     		beq	.L61
 729:Generated_Source\PSoC4/CSD_Filter.c ****         {
 730:Generated_Source\PSoC4/CSD_Filter.c ****             #if (CSD_REGULAR_SENSOR_EN && CSD_REGULAR_RC_IIR_FILTER_EN)
 731:Generated_Source\PSoC4/CSD_Filter.c ****                 #if (CSD_REGULAR_IIR_RC_TYPE == CSD_IIR_FILTER_PERFORMANCE)
 732:Generated_Source\PSoC4/CSD_Filter.c ****                     temp =  ptrFilterHistObj.ptrRegular->regularChannel[channel].iirHistory << CSD_
 733:Generated_Source\PSoC4/CSD_Filter.c ****                     temp |= ptrFilterHistObj.ptrRegular->regularChannel[channel].iirHistoryLow;
 734:Generated_Source\PSoC4/CSD_Filter.c ****                     temp =CSD_FtIIR1stOrder((uint32)ptrSensorObj->raw[channel],
 735:Generated_Source\PSoC4/CSD_Filter.c ****                                                         temp,
 736:Generated_Source\PSoC4/CSD_Filter.c ****                                                         CSD_REGULAR_IIR_RC_N,
 737:Generated_Source\PSoC4/CSD_Filter.c ****                                                         CSD_REGULAR_IIR_RC_SHIFT);
 738:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[channel].iirHistory = LO16(temp >>C
 739:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[channel].iirHistoryLow = LO8(temp);
 740:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrSensorObj->raw[channel] = LO16(temp >>CSD_REGULAR_IIR_RC_SHIFT);
 741:Generated_Source\PSoC4/CSD_Filter.c ****                 #else
 742:Generated_Source\PSoC4/CSD_Filter.c ****                     temp =CSD_FtIIR1stOrder((uint32)ptrSensorObj->raw[channel],
 1098              		.loc 1 742 0
 1099 001a BB68     		ldr	r3, [r7, #8]
 1100 001c 7A69     		ldr	r2, [r7, #20]
 1101 001e 5200     		lsl	r2, r2, #1
 1102 0020 D35A     		ldrh	r3, [r2, r3]
 1103 0022 191C     		mov	r1, r3
 743:Generated_Source\PSoC4/CSD_Filter.c ****                                                         (uint32)ptrFilterHistObj.ptrRegular->regula
 1104              		.loc 1 743 0
 1105 0024 FB68     		ldr	r3, [r7, #12]
 1106 0026 7A69     		ldr	r2, [r7, #20]
 1107 0028 5200     		lsl	r2, r2, #1
 1108 002a D35A     		ldrh	r3, [r2, r3]
 742:Generated_Source\PSoC4/CSD_Filter.c ****                                                         (uint32)ptrFilterHistObj.ptrRegular->regula
 1109              		.loc 1 742 0
 1110 002c 081C     		mov	r0, r1
 1111 002e 191C     		mov	r1, r3
 1112 0030 8022     		mov	r2, #128
 1113 0032 0023     		mov	r3, #0
 1114 0034 FFF7FEFF 		bl	CSD_FtIIR1stOrder
 1115 0038 031C     		mov	r3, r0
 1116 003a 3B61     		str	r3, [r7, #16]
 744:Generated_Source\PSoC4/CSD_Filter.c ****                                                         CSD_REGULAR_IIR_RC_N,
 745:Generated_Source\PSoC4/CSD_Filter.c ****                                                         CSD_REGULAR_IIR_RC_SHIFT);
 746:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[channel].iirHistory = LO16(temp);
 1117              		.loc 1 746 0
 1118 003c FB68     		ldr	r3, [r7, #12]
 1119 003e 3A69     		ldr	r2, [r7, #16]
 1120 0040 91B2     		uxth	r1, r2
 1121 0042 7A69     		ldr	r2, [r7, #20]
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 34


 1122 0044 5200     		lsl	r2, r2, #1
 1123 0046 D152     		strh	r1, [r2, r3]
 747:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrSensorObj->raw[channel] = LO16(temp >>CSD_REGULAR_IIR_RC_SHIFT);
 1124              		.loc 1 747 0
 1125 0048 3B69     		ldr	r3, [r7, #16]
 1126 004a 99B2     		uxth	r1, r3
 1127 004c BB68     		ldr	r3, [r7, #8]
 1128 004e 7A69     		ldr	r2, [r7, #20]
 1129 0050 5200     		lsl	r2, r2, #1
 1130 0052 D152     		strh	r1, [r2, r3]
 1131              	.L61:
 726:Generated_Source\PSoC4/CSD_Filter.c ****     {
 1132              		.loc 1 726 0 discriminator 1
 1133 0054 7B69     		ldr	r3, [r7, #20]
 1134 0056 5A1E     		sub	r2, r3, #1
 1135 0058 7A61     		str	r2, [r7, #20]
 1136 005a 002B     		cmp	r3, #0
 1137 005c D9D1     		bne	.L62
 748:Generated_Source\PSoC4/CSD_Filter.c ****                 #endif /* (CSD_REGULAR_IIR_RC_TYPE == CSD_IIR_FILTER_PERFORMANCE) */
 749:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (CSD_REGULAR_SENSOR_EN) */    
 750:Generated_Source\PSoC4/CSD_Filter.c ****         }
 751:Generated_Source\PSoC4/CSD_Filter.c ****         else
 752:Generated_Source\PSoC4/CSD_Filter.c ****         {
 753:Generated_Source\PSoC4/CSD_Filter.c ****             #if (CSD_PROXIMITY_SENSOR_EN && CSD_PROX_RC_IIR_FILTER_EN)
 754:Generated_Source\PSoC4/CSD_Filter.c ****                 #if (CSD_PROX_IIR_RC_TYPE == CSD_IIR_FILTER_PERFORMANCE)
 755:Generated_Source\PSoC4/CSD_Filter.c ****                     temp =  ptrFilterHistObj.ptrProx->proxChannel[channel].iirHistory << CSD_PROX_I
 756:Generated_Source\PSoC4/CSD_Filter.c ****                     temp |= ptrFilterHistObj.ptrProx->proxChannel[channel].iirHistoryLow;
 757:Generated_Source\PSoC4/CSD_Filter.c ****                     temp =CSD_FtIIR1stOrder((uint32)ptrSensorObj->raw[channel],
 758:Generated_Source\PSoC4/CSD_Filter.c ****                                                         temp,
 759:Generated_Source\PSoC4/CSD_Filter.c ****                                                         CSD_PROX_IIR_RC_N,
 760:Generated_Source\PSoC4/CSD_Filter.c ****                                                         CSD_PROX_IIR_RC_SHIFT);
 761:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[channel].iirHistory = LO16(temp >>CSD_PRO
 762:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[channel].iirHistoryLow = LO8(temp);
 763:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrSensorObj->raw[channel] = LO16(temp >>CSD_PROX_IIR_RC_SHIFT);
 764:Generated_Source\PSoC4/CSD_Filter.c ****                 #else
 765:Generated_Source\PSoC4/CSD_Filter.c ****                     temp =CSD_FtIIR1stOrder((uint32)ptrSensorObj->raw[channel],
 766:Generated_Source\PSoC4/CSD_Filter.c ****                                                         (uint32)ptrFilterHistObj.ptrProx->proxChann
 767:Generated_Source\PSoC4/CSD_Filter.c ****                                                         CSD_PROX_IIR_RC_N,
 768:Generated_Source\PSoC4/CSD_Filter.c ****                                                         CSD_PROX_IIR_RC_SHIFT);
 769:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[channel].iirHistory = LO16(temp);
 770:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrSensorObj->raw[channel] = LO16(temp >>CSD_PROX_IIR_RC_SHIFT);
 771:Generated_Source\PSoC4/CSD_Filter.c ****                 #endif /* (CSD_PROX_IIR_RC_TYPE == CSD_IIR_FILTER_PERFORMANCE) */
 772:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (CSD_PROX_SENSOR_EN) */
 773:Generated_Source\PSoC4/CSD_Filter.c ****         }    
 774:Generated_Source\PSoC4/CSD_Filter.c ****     }        
 775:Generated_Source\PSoC4/CSD_Filter.c **** }    
 1138              		.loc 1 775 0
 1139 005e BD46     		mov	sp, r7
 1140 0060 06B0     		add	sp, sp, #24
 1141              		@ sp needed
 1142 0062 80BD     		pop	{r7, pc}
 1143              		.cfi_endproc
 1144              	.LFE14:
 1145              		.size	CSD_RunIIRInternal, .-CSD_RunIIRInternal
 1146              		.section	.text.CSD_FtRunEnabledFilters,"ax",%progbits
 1147              		.align	2
 1148              		.global	CSD_FtRunEnabledFilters
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 35


 1149              		.code	16
 1150              		.thumb_func
 1151              		.type	CSD_FtRunEnabledFilters, %function
 1152              	CSD_FtRunEnabledFilters:
 1153              	.LFB15:
 776:Generated_Source\PSoC4/CSD_Filter.c **** #endif /* #if (CSD_REGULAR_RC_IIR_FILTER_EN || CSD_PROX_RC_IIR_FILTER_EN) */
 777:Generated_Source\PSoC4/CSD_Filter.c **** 
 778:Generated_Source\PSoC4/CSD_Filter.c **** 
 779:Generated_Source\PSoC4/CSD_Filter.c **** #if (CSD_REGULAR_RC_MEDIAN_FILTER_EN || CSD_PROX_RC_MEDIAN_FILTER_EN)
 780:Generated_Source\PSoC4/CSD_Filter.c **** 
 781:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
 782:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_InitializeMedian
 783:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
 784:Generated_Source\PSoC4/CSD_Filter.c **** *
 785:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Initializes the Median filter history.
 786:Generated_Source\PSoC4/CSD_Filter.c **** *
 787:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Initializes the Median filter history.
 788:Generated_Source\PSoC4/CSD_Filter.c **** *
 789:Generated_Source\PSoC4/CSD_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 790:Generated_Source\PSoC4/CSD_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 791:Generated_Source\PSoC4/CSD_Filter.c **** *
 792:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
 793:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_InitializeMedian(uint32 widgetId, uint32 sensorId)
 794:Generated_Source\PSoC4/CSD_Filter.c **** {
 795:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_FLASH_WD_STRUCT const *ptrWidget = &CSD_dsFlash.wdgtArray[widgetId];      
 796:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_RAM_SNS_STRUCT *ptrSensor = NULL;    
 797:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_PTR_FILTER_VARIANT ptrFilterHistObj; 
 798:Generated_Source\PSoC4/CSD_Filter.c ****               
 799:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified sensor object */     
 800:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 801:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 802:Generated_Source\PSoC4/CSD_Filter.c ****     
 803:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified filter sensor object */     
 804:Generated_Source\PSoC4/CSD_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 805:Generated_Source\PSoC4/CSD_Filter.c ****     
 806:Generated_Source\PSoC4/CSD_Filter.c ****     if ((CSD_WD_TYPE_ENUM)ptrWidget->wdgtType != CSD_WD_PROXIMITY_E)
 807:Generated_Source\PSoC4/CSD_Filter.c ****     {
 808:Generated_Source\PSoC4/CSD_Filter.c ****         #if (CSD_REGULAR_SENSOR_EN)
 809:Generated_Source\PSoC4/CSD_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 810:Generated_Source\PSoC4/CSD_Filter.c ****         #endif /* (CSD_REGULAR_SENSOR_EN) */
 811:Generated_Source\PSoC4/CSD_Filter.c ****     }
 812:Generated_Source\PSoC4/CSD_Filter.c ****     else
 813:Generated_Source\PSoC4/CSD_Filter.c ****     {
 814:Generated_Source\PSoC4/CSD_Filter.c ****         #if (CSD_PROXIMITY_SENSOR_EN)
 815:Generated_Source\PSoC4/CSD_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 816:Generated_Source\PSoC4/CSD_Filter.c ****         #endif /* (CSD_PROXIMITY_SENSOR_EN) */
 817:Generated_Source\PSoC4/CSD_Filter.c ****     }
 818:Generated_Source\PSoC4/CSD_Filter.c ****     
 819:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_InitializeMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 820:Generated_Source\PSoC4/CSD_Filter.c **** }     
 821:Generated_Source\PSoC4/CSD_Filter.c **** 
 822:Generated_Source\PSoC4/CSD_Filter.c **** 
 823:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
 824:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_RunMedian
 825:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
 826:Generated_Source\PSoC4/CSD_Filter.c **** *
 827:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Executes the Median filter algorithm on a sensor indicated by an input 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 36


 828:Generated_Source\PSoC4/CSD_Filter.c **** *           parameter. 
 829:Generated_Source\PSoC4/CSD_Filter.c **** *
 830:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Executes the Median filter algorithm on a sensor indicated by an input 
 831:Generated_Source\PSoC4/CSD_Filter.c **** *           parameter. 
 832:Generated_Source\PSoC4/CSD_Filter.c **** *
 833:Generated_Source\PSoC4/CSD_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 834:Generated_Source\PSoC4/CSD_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 835:Generated_Source\PSoC4/CSD_Filter.c **** *
 836:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
 837:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_RunMedian(uint32 widgetId, uint32 sensorId)
 838:Generated_Source\PSoC4/CSD_Filter.c **** {
 839:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_FLASH_WD_STRUCT const *ptrWidget = &CSD_dsFlash.wdgtArray[widgetId];      
 840:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_RAM_SNS_STRUCT *ptrSensor = NULL;    
 841:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_PTR_FILTER_VARIANT ptrFilterHistObj; 
 842:Generated_Source\PSoC4/CSD_Filter.c ****               
 843:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified sensor object */     
 844:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 845:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 846:Generated_Source\PSoC4/CSD_Filter.c ****     
 847:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified filter sensor object */     
 848:Generated_Source\PSoC4/CSD_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 849:Generated_Source\PSoC4/CSD_Filter.c ****     
 850:Generated_Source\PSoC4/CSD_Filter.c ****     if ((CSD_WD_TYPE_ENUM)ptrWidget->wdgtType != CSD_WD_PROXIMITY_E)
 851:Generated_Source\PSoC4/CSD_Filter.c ****     {
 852:Generated_Source\PSoC4/CSD_Filter.c ****         #if (CSD_REGULAR_SENSOR_EN)
 853:Generated_Source\PSoC4/CSD_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 854:Generated_Source\PSoC4/CSD_Filter.c ****         #endif /* (CSD_REGULAR_SENSOR_EN) */
 855:Generated_Source\PSoC4/CSD_Filter.c ****     }
 856:Generated_Source\PSoC4/CSD_Filter.c ****     else
 857:Generated_Source\PSoC4/CSD_Filter.c ****     {
 858:Generated_Source\PSoC4/CSD_Filter.c ****         #if (CSD_PROXIMITY_SENSOR_EN)
 859:Generated_Source\PSoC4/CSD_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 860:Generated_Source\PSoC4/CSD_Filter.c ****         #endif /* (CSD_PROXIMITY_SENSOR_EN) */
 861:Generated_Source\PSoC4/CSD_Filter.c ****     }
 862:Generated_Source\PSoC4/CSD_Filter.c ****     
 863:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_RunMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 864:Generated_Source\PSoC4/CSD_Filter.c **** }
 865:Generated_Source\PSoC4/CSD_Filter.c ****    
 866:Generated_Source\PSoC4/CSD_Filter.c **** 
 867:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
 868:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_InitializeMedianInternal
 869:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
 870:Generated_Source\PSoC4/CSD_Filter.c **** *
 871:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Initializes the Median filter.
 872:Generated_Source\PSoC4/CSD_Filter.c **** *
 873:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Initializes the Median filter.
 874:Generated_Source\PSoC4/CSD_Filter.c **** *
 875:Generated_Source\PSoC4/CSD_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
 876:Generated_Source\PSoC4/CSD_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
 877:Generated_Source\PSoC4/CSD_Filter.c **** * \param    wdType           Specifies the type of a widget.
 878:Generated_Source\PSoC4/CSD_Filter.c **** *
 879:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
 880:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_InitializeMedianInternal(CSD_PTR_FILTER_VARIANT ptrFilterHistObj,
 881:Generated_Source\PSoC4/CSD_Filter.c ****                                                CSD_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
 882:Generated_Source\PSoC4/CSD_Filter.c **** {
 883:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 channel;
 884:Generated_Source\PSoC4/CSD_Filter.c **** 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 37


 885:Generated_Source\PSoC4/CSD_Filter.c ****     for(channel = CSD_NUM_SCAN_FREQS; channel-- > 0u;)
 886:Generated_Source\PSoC4/CSD_Filter.c ****     {
 887:Generated_Source\PSoC4/CSD_Filter.c ****         if ((CSD_WD_TYPE_ENUM)wdType != CSD_WD_PROXIMITY_E)
 888:Generated_Source\PSoC4/CSD_Filter.c ****         {
 889:Generated_Source\PSoC4/CSD_Filter.c ****             #if (CSD_REGULAR_SENSOR_EN && CSD_REGULAR_RC_MEDIAN_FILTER_EN)
 890:Generated_Source\PSoC4/CSD_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[channel].medHistory[0u] = ptrSensorObj-
 891:Generated_Source\PSoC4/CSD_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[channel].medHistory[1u] = ptrSensorObj-
 892:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (CSD_REGULAR_SENSOR_EN) */
 893:Generated_Source\PSoC4/CSD_Filter.c ****         }
 894:Generated_Source\PSoC4/CSD_Filter.c ****         else
 895:Generated_Source\PSoC4/CSD_Filter.c ****         {
 896:Generated_Source\PSoC4/CSD_Filter.c ****             #if (CSD_PROXIMITY_SENSOR_EN && CSD_PROX_RC_MEDIAN_FILTER_EN)
 897:Generated_Source\PSoC4/CSD_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[channel].medHistory[0u] = ptrSensorObj->raw[c
 898:Generated_Source\PSoC4/CSD_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[channel].medHistory[1u] = ptrSensorObj->raw[c
 899:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (CSD_PROXIMITY_SENSOR_EN) */               
 900:Generated_Source\PSoC4/CSD_Filter.c ****         }
 901:Generated_Source\PSoC4/CSD_Filter.c ****     }
 902:Generated_Source\PSoC4/CSD_Filter.c **** }
 903:Generated_Source\PSoC4/CSD_Filter.c **** 
 904:Generated_Source\PSoC4/CSD_Filter.c **** 
 905:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
 906:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_RunMedianInternal
 907:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
 908:Generated_Source\PSoC4/CSD_Filter.c **** *
 909:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Runs the Median filter.
 910:Generated_Source\PSoC4/CSD_Filter.c **** *
 911:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Runs the Median filter.
 912:Generated_Source\PSoC4/CSD_Filter.c **** *
 913:Generated_Source\PSoC4/CSD_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
 914:Generated_Source\PSoC4/CSD_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
 915:Generated_Source\PSoC4/CSD_Filter.c **** * \param    wdType           Specifies the type of a widget.
 916:Generated_Source\PSoC4/CSD_Filter.c **** *
 917:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
 918:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_RunMedianInternal(CSD_PTR_FILTER_VARIANT ptrFilterHistObj,
 919:Generated_Source\PSoC4/CSD_Filter.c ****                                         CSD_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
 920:Generated_Source\PSoC4/CSD_Filter.c **** {
 921:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 channel;
 922:Generated_Source\PSoC4/CSD_Filter.c ****     
 923:Generated_Source\PSoC4/CSD_Filter.c ****     #if ((CSD_REGULAR_SENSOR_EN && CSD_REGULAR_RC_MEDIAN_FILTER_EN) || \
 924:Generated_Source\PSoC4/CSD_Filter.c ****          (CSD_PROXIMITY_SENSOR_EN && CSD_PROX_RC_MEDIAN_FILTER_EN))
 925:Generated_Source\PSoC4/CSD_Filter.c ****         uint32 temp;
 926:Generated_Source\PSoC4/CSD_Filter.c ****     #endif
 927:Generated_Source\PSoC4/CSD_Filter.c ****     
 928:Generated_Source\PSoC4/CSD_Filter.c ****     for(channel = CSD_NUM_SCAN_FREQS; channel-- > 0u;)
 929:Generated_Source\PSoC4/CSD_Filter.c ****     {    
 930:Generated_Source\PSoC4/CSD_Filter.c ****         if ((CSD_WD_TYPE_ENUM)wdType != CSD_WD_PROXIMITY_E)
 931:Generated_Source\PSoC4/CSD_Filter.c ****         {                                             
 932:Generated_Source\PSoC4/CSD_Filter.c ****             #if (CSD_REGULAR_SENSOR_EN && CSD_REGULAR_RC_MEDIAN_FILTER_EN)
 933:Generated_Source\PSoC4/CSD_Filter.c ****                 temp = CSD_FtMedian((uint32)ptrSensorObj->raw[channel],\
 934:Generated_Source\PSoC4/CSD_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrRegular->regularChanne
 935:Generated_Source\PSoC4/CSD_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrRegular->regularChanne
 936:Generated_Source\PSoC4/CSD_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[channel].medHistory[1u] = \
 937:Generated_Source\PSoC4/CSD_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[channel].medHistory[0u];
 938:Generated_Source\PSoC4/CSD_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[channel].medHistory[0u] = ptrSensorObj-
 939:Generated_Source\PSoC4/CSD_Filter.c ****                 ptrSensorObj->raw[channel] = LO16(temp);
 940:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (CSD_REGULAR_SENSOR_EN) */     
 941:Generated_Source\PSoC4/CSD_Filter.c ****         }
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 38


 942:Generated_Source\PSoC4/CSD_Filter.c ****         else 
 943:Generated_Source\PSoC4/CSD_Filter.c ****         {                   
 944:Generated_Source\PSoC4/CSD_Filter.c ****             #if (CSD_PROXIMITY_SENSOR_EN && CSD_PROX_RC_MEDIAN_FILTER_EN)
 945:Generated_Source\PSoC4/CSD_Filter.c ****                 temp = CSD_FtMedian((uint32)ptrSensorObj->raw[channel],\
 946:Generated_Source\PSoC4/CSD_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrProx->proxChannel[chan
 947:Generated_Source\PSoC4/CSD_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrProx->proxChannel[chan
 948:Generated_Source\PSoC4/CSD_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[channel].medHistory[1u] = \
 949:Generated_Source\PSoC4/CSD_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[channel].medHistory[0u];
 950:Generated_Source\PSoC4/CSD_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[channel].medHistory[0u] = ptrSensorObj->raw[c
 951:Generated_Source\PSoC4/CSD_Filter.c ****                 ptrSensorObj->raw[channel] = LO16(temp);
 952:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (CSD_PROXIMITY_SENSOR_EN) */               
 953:Generated_Source\PSoC4/CSD_Filter.c ****         }
 954:Generated_Source\PSoC4/CSD_Filter.c ****     }
 955:Generated_Source\PSoC4/CSD_Filter.c **** }
 956:Generated_Source\PSoC4/CSD_Filter.c **** #endif /* (CSD_REGULAR_RC_MEDIAN_FILTER_EN || CSD_PROX_RC_MEDIAN_FILTER_EN) */
 957:Generated_Source\PSoC4/CSD_Filter.c **** 
 958:Generated_Source\PSoC4/CSD_Filter.c **** 
 959:Generated_Source\PSoC4/CSD_Filter.c **** #if (CSD_REGULAR_RC_AVERAGE_FILTER_EN || CSD_PROX_RC_AVERAGE_FILTER_EN)
 960:Generated_Source\PSoC4/CSD_Filter.c **** 
 961:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
 962:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_InitializeAverage
 963:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
 964:Generated_Source\PSoC4/CSD_Filter.c **** *
 965:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Initializes the average filter history.
 966:Generated_Source\PSoC4/CSD_Filter.c **** *
 967:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Initializes the average filter history.
 968:Generated_Source\PSoC4/CSD_Filter.c **** *
 969:Generated_Source\PSoC4/CSD_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 970:Generated_Source\PSoC4/CSD_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 971:Generated_Source\PSoC4/CSD_Filter.c **** *
 972:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
 973:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_InitializeAverage(uint32 widgetId, uint32 sensorId)
 974:Generated_Source\PSoC4/CSD_Filter.c **** {
 975:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_FLASH_WD_STRUCT const *ptrWidget = &CSD_dsFlash.wdgtArray[widgetId];      
 976:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_RAM_SNS_STRUCT *ptrSensor = NULL;
 977:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_PTR_FILTER_VARIANT ptrFilterHistObj;
 978:Generated_Source\PSoC4/CSD_Filter.c **** 
 979:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified sensor object */
 980:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 981:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 982:Generated_Source\PSoC4/CSD_Filter.c ****     
 983:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified filter sensor object */
 984:Generated_Source\PSoC4/CSD_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 985:Generated_Source\PSoC4/CSD_Filter.c **** 
 986:Generated_Source\PSoC4/CSD_Filter.c ****     if ((CSD_WD_TYPE_ENUM)ptrWidget->wdgtType != CSD_WD_PROXIMITY_E)
 987:Generated_Source\PSoC4/CSD_Filter.c ****     {
 988:Generated_Source\PSoC4/CSD_Filter.c ****         #if (CSD_REGULAR_SENSOR_EN)
 989:Generated_Source\PSoC4/CSD_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 990:Generated_Source\PSoC4/CSD_Filter.c ****         #endif /* (CSD_REGULAR_SENSOR_EN) */
 991:Generated_Source\PSoC4/CSD_Filter.c ****     }
 992:Generated_Source\PSoC4/CSD_Filter.c ****     else
 993:Generated_Source\PSoC4/CSD_Filter.c ****     {
 994:Generated_Source\PSoC4/CSD_Filter.c ****         #if (CSD_PROXIMITY_SENSOR_EN)
 995:Generated_Source\PSoC4/CSD_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 996:Generated_Source\PSoC4/CSD_Filter.c ****         #endif /* (CSD_PROXIMITY_SENSOR_EN) */
 997:Generated_Source\PSoC4/CSD_Filter.c ****     }
 998:Generated_Source\PSoC4/CSD_Filter.c **** 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 39


 999:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_InitializeAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1000:Generated_Source\PSoC4/CSD_Filter.c **** }
1001:Generated_Source\PSoC4/CSD_Filter.c **** 
1002:Generated_Source\PSoC4/CSD_Filter.c **** 
1003:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
1004:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_RunAverage
1005:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
1006:Generated_Source\PSoC4/CSD_Filter.c **** *
1007:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Executes the average filter algorithm on a sensor indicated by an input 
1008:Generated_Source\PSoC4/CSD_Filter.c **** *           parameter. 
1009:Generated_Source\PSoC4/CSD_Filter.c **** *
1010:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Executes the average filter algorithm on a sensor indicated by an input 
1011:Generated_Source\PSoC4/CSD_Filter.c **** *           parameter. 
1012:Generated_Source\PSoC4/CSD_Filter.c **** *
1013:Generated_Source\PSoC4/CSD_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1014:Generated_Source\PSoC4/CSD_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1015:Generated_Source\PSoC4/CSD_Filter.c **** *
1016:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
1017:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_RunAverage(uint32 widgetId, uint32 sensorId)
1018:Generated_Source\PSoC4/CSD_Filter.c **** {
1019:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_FLASH_WD_STRUCT const *ptrWidget = &CSD_dsFlash.wdgtArray[widgetId];      
1020:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_RAM_SNS_STRUCT *ptrSensor = NULL;    
1021:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_PTR_FILTER_VARIANT ptrFilterHistObj; 
1022:Generated_Source\PSoC4/CSD_Filter.c ****               
1023:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified sensor object */     
1024:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1025:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1026:Generated_Source\PSoC4/CSD_Filter.c ****     
1027:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified filter sensor object */     
1028:Generated_Source\PSoC4/CSD_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1029:Generated_Source\PSoC4/CSD_Filter.c ****     
1030:Generated_Source\PSoC4/CSD_Filter.c ****     if ((CSD_WD_TYPE_ENUM)ptrWidget->wdgtType != CSD_WD_PROXIMITY_E)
1031:Generated_Source\PSoC4/CSD_Filter.c ****     {
1032:Generated_Source\PSoC4/CSD_Filter.c ****         #if (CSD_REGULAR_SENSOR_EN)
1033:Generated_Source\PSoC4/CSD_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1034:Generated_Source\PSoC4/CSD_Filter.c ****         #endif /* (CSD_REGULAR_SENSOR_EN) */
1035:Generated_Source\PSoC4/CSD_Filter.c ****     }
1036:Generated_Source\PSoC4/CSD_Filter.c ****     else
1037:Generated_Source\PSoC4/CSD_Filter.c ****     {
1038:Generated_Source\PSoC4/CSD_Filter.c ****         #if (CSD_PROXIMITY_SENSOR_EN)
1039:Generated_Source\PSoC4/CSD_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1040:Generated_Source\PSoC4/CSD_Filter.c ****         #endif /* (CSD_PROXIMITY_SENSOR_EN) */
1041:Generated_Source\PSoC4/CSD_Filter.c ****     }
1042:Generated_Source\PSoC4/CSD_Filter.c ****     
1043:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_RunAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1044:Generated_Source\PSoC4/CSD_Filter.c **** }
1045:Generated_Source\PSoC4/CSD_Filter.c **** 
1046:Generated_Source\PSoC4/CSD_Filter.c **** 
1047:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
1048:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_InitializeAverageInternal
1049:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
1050:Generated_Source\PSoC4/CSD_Filter.c **** *
1051:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Initializes the average filter.
1052:Generated_Source\PSoC4/CSD_Filter.c **** *
1053:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Initializes the average filter.
1054:Generated_Source\PSoC4/CSD_Filter.c **** *
1055:Generated_Source\PSoC4/CSD_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 40


1056:Generated_Source\PSoC4/CSD_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1057:Generated_Source\PSoC4/CSD_Filter.c **** * \param    wdType           Specifies the type of a widget.
1058:Generated_Source\PSoC4/CSD_Filter.c **** *
1059:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
1060:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_InitializeAverageInternal(CSD_PTR_FILTER_VARIANT ptrFilterHistObj,\
1061:Generated_Source\PSoC4/CSD_Filter.c ****                                                   CSD_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
1062:Generated_Source\PSoC4/CSD_Filter.c **** {
1063:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 channel;
1064:Generated_Source\PSoC4/CSD_Filter.c **** 
1065:Generated_Source\PSoC4/CSD_Filter.c ****     for(channel = CSD_NUM_SCAN_FREQS; channel-- > 0u;)
1066:Generated_Source\PSoC4/CSD_Filter.c ****     {
1067:Generated_Source\PSoC4/CSD_Filter.c ****         if ((CSD_WD_TYPE_ENUM)wdType != CSD_WD_PROXIMITY_E)
1068:Generated_Source\PSoC4/CSD_Filter.c ****         {
1069:Generated_Source\PSoC4/CSD_Filter.c ****             #if (CSD_REGULAR_SENSOR_EN && CSD_REGULAR_RC_AVERAGE_FILTER_EN)
1070:Generated_Source\PSoC4/CSD_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[channel].avgHistory[0] = ptrSensorObj->
1071:Generated_Source\PSoC4/CSD_Filter.c ****                 #if (CSD_REGULAR_AVERAGE_LEN == CSD_AVERAGE_FILTER_LEN_4)
1072:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[channel].avgHistory[1u] = ptrSensor
1073:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[channel].avgHistory[2u] = ptrSensor
1074:Generated_Source\PSoC4/CSD_Filter.c ****                 #endif /* CSD_REGULAR_AVERAGE_LEN == CSD_AVERAGE_FILTER_LEN_4 */
1075:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (CSD_REGULAR_SENSOR_EN) */      
1076:Generated_Source\PSoC4/CSD_Filter.c ****         }
1077:Generated_Source\PSoC4/CSD_Filter.c ****         else
1078:Generated_Source\PSoC4/CSD_Filter.c ****         {
1079:Generated_Source\PSoC4/CSD_Filter.c ****             #if (CSD_PROXIMITY_SENSOR_EN && CSD_PROX_RC_AVERAGE_FILTER_EN)
1080:Generated_Source\PSoC4/CSD_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[channel].avgHistory[0] = ptrSensorObj->raw[ch
1081:Generated_Source\PSoC4/CSD_Filter.c ****                     #if (CSD_PROX_AVERAGE_LEN == CSD_AVERAGE_FILTER_LEN_4)
1082:Generated_Source\PSoC4/CSD_Filter.c ****                         ptrFilterHistObj.ptrProx->proxChannel[channel].avgHistory[1u] = ptrSensorOb
1083:Generated_Source\PSoC4/CSD_Filter.c ****                         ptrFilterHistObj.ptrProx->proxChannel[channel].avgHistory[2u] = ptrSensorOb
1084:Generated_Source\PSoC4/CSD_Filter.c ****                     #endif /* CSD_REGULAR_AVERAGE_LEN == CSD_AVERAGE_FILTER_LEN_4 */
1085:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (CSD_PROXIMITY_SENSOR_EN) */
1086:Generated_Source\PSoC4/CSD_Filter.c ****         }
1087:Generated_Source\PSoC4/CSD_Filter.c ****     }
1088:Generated_Source\PSoC4/CSD_Filter.c **** }
1089:Generated_Source\PSoC4/CSD_Filter.c **** 
1090:Generated_Source\PSoC4/CSD_Filter.c **** 
1091:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
1092:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_RunAverageInternal
1093:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
1094:Generated_Source\PSoC4/CSD_Filter.c **** *
1095:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Runs the average filter.
1096:Generated_Source\PSoC4/CSD_Filter.c **** *
1097:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Runs the average filter.
1098:Generated_Source\PSoC4/CSD_Filter.c **** *
1099:Generated_Source\PSoC4/CSD_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1100:Generated_Source\PSoC4/CSD_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1101:Generated_Source\PSoC4/CSD_Filter.c **** * \param    wdType           Specifies the type of a widget.
1102:Generated_Source\PSoC4/CSD_Filter.c **** *
1103:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
1104:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_RunAverageInternal(CSD_PTR_FILTER_VARIANT ptrFilterHistObj,\
1105:Generated_Source\PSoC4/CSD_Filter.c ****                                            CSD_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
1106:Generated_Source\PSoC4/CSD_Filter.c **** {
1107:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 channel;
1108:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 temp;
1109:Generated_Source\PSoC4/CSD_Filter.c **** 
1110:Generated_Source\PSoC4/CSD_Filter.c ****     for(channel = CSD_NUM_SCAN_FREQS; channel-- > 0u;)
1111:Generated_Source\PSoC4/CSD_Filter.c ****     {
1112:Generated_Source\PSoC4/CSD_Filter.c ****         if ((CSD_WD_TYPE_ENUM)wdType != CSD_WD_PROXIMITY_E)
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 41


1113:Generated_Source\PSoC4/CSD_Filter.c ****         {
1114:Generated_Source\PSoC4/CSD_Filter.c ****             #if (CSD_REGULAR_SENSOR_EN && CSD_REGULAR_RC_AVERAGE_FILTER_EN)
1115:Generated_Source\PSoC4/CSD_Filter.c ****                 #if (CSD_REGULAR_AVERAGE_LEN == CSD_AVERAGE_FILTER_LEN_2)
1116:Generated_Source\PSoC4/CSD_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[channel] + 
1117:Generated_Source\PSoC4/CSD_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[channel].avgHistory
1118:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[channel].avgHistory[0] = ptrSensorO
1119:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrSensorObj->raw[channel] = LO16(temp);
1120:Generated_Source\PSoC4/CSD_Filter.c ****                 #else
1121:Generated_Source\PSoC4/CSD_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[channel] + 
1122:Generated_Source\PSoC4/CSD_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[channel].avgHistory
1123:Generated_Source\PSoC4/CSD_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[channel].avgHistory
1124:Generated_Source\PSoC4/CSD_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[channel].avgHistory
1125:Generated_Source\PSoC4/CSD_Filter.c **** 
1126:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[channel].avgHistory[2u] =
1127:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[channel].avgHistory[1u];
1128:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[channel].avgHistory[1u] =
1129:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[channel].avgHistory[0];
1130:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[channel].avgHistory[0] = ptrSensorO
1131:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrSensorObj->raw[channel] = LO16(temp);
1132:Generated_Source\PSoC4/CSD_Filter.c ****                 #endif /* CSD_REGULAR_AVERAGE_LEN == CSD_AVERAGE_FILTER_LEN_4 */
1133:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (CSD_REGULAR_SENSOR_EN) */
1134:Generated_Source\PSoC4/CSD_Filter.c ****         }
1135:Generated_Source\PSoC4/CSD_Filter.c ****         else 
1136:Generated_Source\PSoC4/CSD_Filter.c ****         {
1137:Generated_Source\PSoC4/CSD_Filter.c ****             #if (CSD_PROXIMITY_SENSOR_EN && CSD_PROX_RC_AVERAGE_FILTER_EN)
1138:Generated_Source\PSoC4/CSD_Filter.c ****                 #if (CSD_PROX_AVERAGE_LEN == CSD_AVERAGE_FILTER_LEN_2)     
1139:Generated_Source\PSoC4/CSD_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[channel] + 
1140:Generated_Source\PSoC4/CSD_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[channel].avgHistory[0]) >
1141:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[channel].avgHistory[0] = ptrSensorObj->ra
1142:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrSensorObj->raw[channel] = LO16(temp);
1143:Generated_Source\PSoC4/CSD_Filter.c ****                 #else
1144:Generated_Source\PSoC4/CSD_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[channel] + 
1145:Generated_Source\PSoC4/CSD_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[channel].avgHistory[0] +
1146:Generated_Source\PSoC4/CSD_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[channel].avgHistory[1u] +
1147:Generated_Source\PSoC4/CSD_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[channel].avgHistory[2u]) 
1148:Generated_Source\PSoC4/CSD_Filter.c ****                     
1149:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[channel].avgHistory[2u] =
1150:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[channel].avgHistory[1u];
1151:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[channel].avgHistory[1u] =
1152:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[channel].avgHistory[0];
1153:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[channel].avgHistory[0] = ptrSensorObj->ra
1154:Generated_Source\PSoC4/CSD_Filter.c ****                     ptrSensorObj->raw[channel] = LO16(temp);
1155:Generated_Source\PSoC4/CSD_Filter.c ****                 #endif /* CSD_PROX_AVERAGE_LEN == CSD_AVERAGE_FILTER_LEN_4 */
1156:Generated_Source\PSoC4/CSD_Filter.c ****             #endif /* (CSD_PROXIMITY_SENSOR_EN) */
1157:Generated_Source\PSoC4/CSD_Filter.c ****         }
1158:Generated_Source\PSoC4/CSD_Filter.c ****     }
1159:Generated_Source\PSoC4/CSD_Filter.c **** }
1160:Generated_Source\PSoC4/CSD_Filter.c **** #endif /* (CSD_REGULAR_RC_AVERAGE_FILTER_EN || CSD_PROX_RC_AVERAGE_FILTER_EN) */
1161:Generated_Source\PSoC4/CSD_Filter.c **** 
1162:Generated_Source\PSoC4/CSD_Filter.c **** 
1163:Generated_Source\PSoC4/CSD_Filter.c **** #if ((CSD_REGULAR_RC_FILTER_EN || CSD_PROX_RC_FILTER_EN))
1164:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
1165:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_FtRunEnabledFilters
1166:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
1167:Generated_Source\PSoC4/CSD_Filter.c **** *
1168:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Runs all enabled filters.
1169:Generated_Source\PSoC4/CSD_Filter.c **** *
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 42


1170:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Runs all enabled filters.
1171:Generated_Source\PSoC4/CSD_Filter.c **** *
1172:Generated_Source\PSoC4/CSD_Filter.c **** * \param    widgetId Specifies the ID number of a widget to update the IIR filter history.*
1173:Generated_Source\PSoC4/CSD_Filter.c **** * \param    sensorId Specifies the ID number of a sensor in the widget to update the IIR 
1174:Generated_Source\PSoC4/CSD_Filter.c **** *           filter history.
1175:Generated_Source\PSoC4/CSD_Filter.c **** *
1176:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
1177:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_FtRunEnabledFilters(uint32 widgetId, uint32 sensorId)
1178:Generated_Source\PSoC4/CSD_Filter.c **** {
 1154              		.loc 1 1178 0
 1155              		.cfi_startproc
 1156 0000 90B5     		push	{r4, r7, lr}
 1157              		.cfi_def_cfa_offset 12
 1158              		.cfi_offset 4, -12
 1159              		.cfi_offset 7, -8
 1160              		.cfi_offset 14, -4
 1161 0002 87B0     		sub	sp, sp, #28
 1162              		.cfi_def_cfa_offset 40
 1163 0004 00AF     		add	r7, sp, #0
 1164              		.cfi_def_cfa_register 7
 1165 0006 7860     		str	r0, [r7, #4]
 1166 0008 3960     		str	r1, [r7]
1179:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_FLASH_WD_STRUCT const *ptrWidget = &CSD_dsFlash.wdgtArray[widgetId];      
 1167              		.loc 1 1179 0
 1168 000a 7A68     		ldr	r2, [r7, #4]
 1169 000c 131C     		mov	r3, r2
 1170 000e DB00     		lsl	r3, r3, #3
 1171 0010 9B1A     		sub	r3, r3, r2
 1172 0012 9B00     		lsl	r3, r3, #2
 1173 0014 144A     		ldr	r2, .L65
 1174 0016 9B18     		add	r3, r3, r2
 1175 0018 7B61     		str	r3, [r7, #20]
1180:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_RAM_SNS_STRUCT *ptrSensor = NULL;    
 1176              		.loc 1 1180 0
 1177 001a 0023     		mov	r3, #0
 1178 001c 3B61     		str	r3, [r7, #16]
1181:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_PTR_FILTER_VARIANT ptrFilterHistObj; 
1182:Generated_Source\PSoC4/CSD_Filter.c ****               
1183:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified sensor object */     
1184:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 1179              		.loc 1 1184 0
 1180 001e 7B69     		ldr	r3, [r7, #20]
 1181 0020 9B68     		ldr	r3, [r3, #8]
 1182 0022 3B61     		str	r3, [r7, #16]
1185:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 1183              		.loc 1 1185 0
 1184 0024 3A68     		ldr	r2, [r7]
 1185 0026 131C     		mov	r3, r2
 1186 0028 9B00     		lsl	r3, r3, #2
 1187 002a 9B18     		add	r3, r3, r2
 1188 002c 5B00     		lsl	r3, r3, #1
 1189 002e 1A1C     		mov	r2, r3
 1190 0030 3B69     		ldr	r3, [r7, #16]
 1191 0032 9B18     		add	r3, r3, r2
 1192 0034 3B61     		str	r3, [r7, #16]
1186:Generated_Source\PSoC4/CSD_Filter.c ****     
1187:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified filter sensor object */     
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 43


1188:Generated_Source\PSoC4/CSD_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 1193              		.loc 1 1188 0
 1194 0036 7B69     		ldr	r3, [r7, #20]
 1195 0038 DB68     		ldr	r3, [r3, #12]
 1196 003a FB60     		str	r3, [r7, #12]
1189:Generated_Source\PSoC4/CSD_Filter.c ****     
1190:Generated_Source\PSoC4/CSD_Filter.c ****     if ((CSD_WD_TYPE_ENUM)ptrWidget->wdgtType != CSD_WD_PROXIMITY_E)
 1197              		.loc 1 1190 0
 1198 003c 7B69     		ldr	r3, [r7, #20]
 1199 003e 1B7E     		ldrb	r3, [r3, #24]
 1200 0040 062B     		cmp	r3, #6
 1201 0042 04D0     		beq	.L64
1191:Generated_Source\PSoC4/CSD_Filter.c ****     {
1192:Generated_Source\PSoC4/CSD_Filter.c ****         #if (CSD_REGULAR_SENSOR_EN)
1193:Generated_Source\PSoC4/CSD_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 1202              		.loc 1 1193 0
 1203 0044 FA68     		ldr	r2, [r7, #12]
 1204 0046 3B68     		ldr	r3, [r7]
 1205 0048 5B00     		lsl	r3, r3, #1
 1206 004a D318     		add	r3, r2, r3
 1207 004c FB60     		str	r3, [r7, #12]
 1208              	.L64:
1194:Generated_Source\PSoC4/CSD_Filter.c ****         #endif /* (CSD_REGULAR_SENSOR_EN) */
1195:Generated_Source\PSoC4/CSD_Filter.c ****     }
1196:Generated_Source\PSoC4/CSD_Filter.c ****     else
1197:Generated_Source\PSoC4/CSD_Filter.c ****     {
1198:Generated_Source\PSoC4/CSD_Filter.c ****         #if (CSD_PROXIMITY_SENSOR_EN)
1199:Generated_Source\PSoC4/CSD_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1200:Generated_Source\PSoC4/CSD_Filter.c ****         #endif /* (CSD_PROXIMITY_SENSOR_EN) */
1201:Generated_Source\PSoC4/CSD_Filter.c ****     }
1202:Generated_Source\PSoC4/CSD_Filter.c ****     
1203:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_FtRunEnabledFiltersInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 1209              		.loc 1 1203 0
 1210 004e 7B69     		ldr	r3, [r7, #20]
 1211 0050 1B7E     		ldrb	r3, [r3, #24]
 1212 0052 1C1C     		mov	r4, r3
 1213 0054 FA68     		ldr	r2, [r7, #12]
 1214 0056 3B69     		ldr	r3, [r7, #16]
 1215 0058 101C     		mov	r0, r2
 1216 005a 191C     		mov	r1, r3
 1217 005c 221C     		mov	r2, r4
 1218 005e FFF7FEFF 		bl	CSD_FtRunEnabledFiltersInternal
1204:Generated_Source\PSoC4/CSD_Filter.c **** }
 1219              		.loc 1 1204 0
 1220 0062 BD46     		mov	sp, r7
 1221 0064 07B0     		add	sp, sp, #28
 1222              		@ sp needed
 1223 0066 90BD     		pop	{r4, r7, pc}
 1224              	.L66:
 1225              		.align	2
 1226              	.L65:
 1227 0068 00000000 		.word	CSD_dsFlash
 1228              		.cfi_endproc
 1229              	.LFE15:
 1230              		.size	CSD_FtRunEnabledFilters, .-CSD_FtRunEnabledFilters
 1231              		.section	.text.CSD_FtRunEnabledFiltersInternal,"ax",%progbits
 1232              		.align	2
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 44


 1233              		.global	CSD_FtRunEnabledFiltersInternal
 1234              		.code	16
 1235              		.thumb_func
 1236              		.type	CSD_FtRunEnabledFiltersInternal, %function
 1237              	CSD_FtRunEnabledFiltersInternal:
 1238              	.LFB16:
1205:Generated_Source\PSoC4/CSD_Filter.c **** 
1206:Generated_Source\PSoC4/CSD_Filter.c **** 
1207:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
1208:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_FtRunEnabledFiltersInternal
1209:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
1210:Generated_Source\PSoC4/CSD_Filter.c **** *
1211:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Runs all enabled filters.
1212:Generated_Source\PSoC4/CSD_Filter.c **** *
1213:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Runs all enabled filters.
1214:Generated_Source\PSoC4/CSD_Filter.c **** *
1215:Generated_Source\PSoC4/CSD_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1216:Generated_Source\PSoC4/CSD_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1217:Generated_Source\PSoC4/CSD_Filter.c **** * \param    wdType           Specifies the type of a widget.
1218:Generated_Source\PSoC4/CSD_Filter.c **** *
1219:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
1220:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_FtRunEnabledFiltersInternal(CSD_PTR_FILTER_VARIANT ptrFilterHistObj, 
1221:Generated_Source\PSoC4/CSD_Filter.c ****                                                   CSD_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
1222:Generated_Source\PSoC4/CSD_Filter.c **** {
 1239              		.loc 1 1222 0
 1240              		.cfi_startproc
 1241 0000 80B5     		push	{r7, lr}
 1242              		.cfi_def_cfa_offset 8
 1243              		.cfi_offset 7, -8
 1244              		.cfi_offset 14, -4
 1245 0002 84B0     		sub	sp, sp, #16
 1246              		.cfi_def_cfa_offset 24
 1247 0004 00AF     		add	r7, sp, #0
 1248              		.cfi_def_cfa_register 7
 1249 0006 F860     		str	r0, [r7, #12]
 1250 0008 B960     		str	r1, [r7, #8]
 1251 000a 7A60     		str	r2, [r7, #4]
1223:Generated_Source\PSoC4/CSD_Filter.c ****     #if (CSD_REGULAR_RC_MEDIAN_FILTER_EN || CSD_PROX_RC_MEDIAN_FILTER_EN)
1224:Generated_Source\PSoC4/CSD_Filter.c ****         CSD_RunMedianInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1225:Generated_Source\PSoC4/CSD_Filter.c ****     #endif /* (CSD_REGULAR_RC_MEDIAN_FILTER_EN || CSD_PROX_RC_MEDIAN_FILTER_EN) */
1226:Generated_Source\PSoC4/CSD_Filter.c ****     
1227:Generated_Source\PSoC4/CSD_Filter.c ****     #if (CSD_REGULAR_RC_IIR_FILTER_EN || CSD_PROX_RC_IIR_FILTER_EN)    
1228:Generated_Source\PSoC4/CSD_Filter.c ****         CSD_RunIIRInternal(ptrFilterHistObj, ptrSensorObj, wdType);
 1252              		.loc 1 1228 0
 1253 000c F968     		ldr	r1, [r7, #12]
 1254 000e BA68     		ldr	r2, [r7, #8]
 1255 0010 7B68     		ldr	r3, [r7, #4]
 1256 0012 081C     		mov	r0, r1
 1257 0014 111C     		mov	r1, r2
 1258 0016 1A1C     		mov	r2, r3
 1259 0018 FFF7FEFF 		bl	CSD_RunIIRInternal
1229:Generated_Source\PSoC4/CSD_Filter.c ****     #endif /* (CSD_REGULAR_RC_IIR_FILTER_EN || CSD_PROX_RC_IIR_FILTER_EN) */ 
1230:Generated_Source\PSoC4/CSD_Filter.c **** 
1231:Generated_Source\PSoC4/CSD_Filter.c ****     #if (CSD_REGULAR_RC_AVERAGE_FILTER_EN || CSD_PROX_RC_AVERAGE_FILTER_EN)
1232:Generated_Source\PSoC4/CSD_Filter.c ****         CSD_RunAverageInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1233:Generated_Source\PSoC4/CSD_Filter.c ****     #endif /* (CSD_REGULAR_RC_AVERAGE_FILTER_EN || CSD_PROX_RC_AVERAGE_FILTER_EN) */            
1234:Generated_Source\PSoC4/CSD_Filter.c **** }
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 45


 1260              		.loc 1 1234 0
 1261 001c BD46     		mov	sp, r7
 1262 001e 04B0     		add	sp, sp, #16
 1263              		@ sp needed
 1264 0020 80BD     		pop	{r7, pc}
 1265              		.cfi_endproc
 1266              	.LFE16:
 1267              		.size	CSD_FtRunEnabledFiltersInternal, .-CSD_FtRunEnabledFiltersInternal
 1268 0022 C046     		.section	.text.CSD_FtIIR1stOrder,"ax",%progbits
 1269              		.align	2
 1270              		.global	CSD_FtIIR1stOrder
 1271              		.code	16
 1272              		.thumb_func
 1273              		.type	CSD_FtIIR1stOrder, %function
 1274              	CSD_FtIIR1stOrder:
 1275              	.LFB17:
1235:Generated_Source\PSoC4/CSD_Filter.c **** #endif /* (CSD_REGULAR_RC_FILTER_EN || CSD_PROX_RC_FILTER_EN) */
1236:Generated_Source\PSoC4/CSD_Filter.c **** 
1237:Generated_Source\PSoC4/CSD_Filter.c **** 
1238:Generated_Source\PSoC4/CSD_Filter.c **** #if (CSD_CSD_AUTOTUNE & CSD_CSD_SS_TH_EN)
1239:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
1240:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_RunNoiseEnvelope
1241:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
1242:Generated_Source\PSoC4/CSD_Filter.c **** *
1243:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Executes the noise envelope  filter algorithm on a sensor indicated by 
1244:Generated_Source\PSoC4/CSD_Filter.c **** *           an input parameter to measure the pk-to-pk noise in the sensor raw count.
1245:Generated_Source\PSoC4/CSD_Filter.c **** *
1246:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Executes the noise envelope  filter algorithm on a sensor indicated by 
1247:Generated_Source\PSoC4/CSD_Filter.c **** *           an input parameter to measure the pk-to-pk noise in the sensor raw count.
1248:Generated_Source\PSoC4/CSD_Filter.c **** *
1249:Generated_Source\PSoC4/CSD_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1250:Generated_Source\PSoC4/CSD_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1251:Generated_Source\PSoC4/CSD_Filter.c **** *
1252:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
1253:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_RunNoiseEnvelope(uint32 widgetId, uint32 sensorId)
1254:Generated_Source\PSoC4/CSD_Filter.c **** {
1255:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_FLASH_WD_STRUCT const *ptrWidget = &CSD_dsFlash.wdgtArray[widgetId];
1256:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_RAM_WD_BASE_STRUCT *ptrWidgetRam = ptrWidget->ptr2WdgtRam;
1257:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_RAM_SNS_STRUCT *ptrSensor = NULL;    
1258:Generated_Source\PSoC4/CSD_Filter.c ****     SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
1259:Generated_Source\PSoC4/CSD_Filter.c **** 
1260:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified sensor object */
1261:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1262:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1263:Generated_Source\PSoC4/CSD_Filter.c ****     
1264:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified filter sensor object */
1265:Generated_Source\PSoC4/CSD_Filter.c ****     ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
1266:Generated_Source\PSoC4/CSD_Filter.c ****     ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];    
1267:Generated_Source\PSoC4/CSD_Filter.c **** 
1268:Generated_Source\PSoC4/CSD_Filter.c ****     SmartSense_RunNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoiseEnvelope);
1269:Generated_Source\PSoC4/CSD_Filter.c **** }
1270:Generated_Source\PSoC4/CSD_Filter.c **** 
1271:Generated_Source\PSoC4/CSD_Filter.c **** 
1272:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
1273:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_InitializeNoiseEnvelope
1274:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
1275:Generated_Source\PSoC4/CSD_Filter.c **** *
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 46


1276:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Initializes the noise-envelope filter
1277:Generated_Source\PSoC4/CSD_Filter.c **** *
1278:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Initializes the noise-envelope filter
1279:Generated_Source\PSoC4/CSD_Filter.c **** *
1280:Generated_Source\PSoC4/CSD_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1281:Generated_Source\PSoC4/CSD_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1282:Generated_Source\PSoC4/CSD_Filter.c **** *
1283:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
1284:Generated_Source\PSoC4/CSD_Filter.c **** void CSD_InitializeNoiseEnvelope(uint32 widgetId, uint32 sensorId)
1285:Generated_Source\PSoC4/CSD_Filter.c **** {
1286:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_FLASH_WD_STRUCT const *ptrWidget = &CSD_dsFlash.wdgtArray[widgetId];
1287:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_RAM_WD_BASE_STRUCT *ptrWidgetRam = ptrWidget->ptr2WdgtRam;
1288:Generated_Source\PSoC4/CSD_Filter.c ****     CSD_RAM_SNS_STRUCT *ptrSensor = NULL;    
1289:Generated_Source\PSoC4/CSD_Filter.c ****     SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
1290:Generated_Source\PSoC4/CSD_Filter.c **** 
1291:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified sensor object */
1292:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1293:Generated_Source\PSoC4/CSD_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1294:Generated_Source\PSoC4/CSD_Filter.c ****     
1295:Generated_Source\PSoC4/CSD_Filter.c ****     /* Find pointer to specified filter sensor object */
1296:Generated_Source\PSoC4/CSD_Filter.c ****     ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
1297:Generated_Source\PSoC4/CSD_Filter.c ****     ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];    
1298:Generated_Source\PSoC4/CSD_Filter.c **** 
1299:Generated_Source\PSoC4/CSD_Filter.c ****     SmartSense_InitializeNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoiseEnvelope);
1300:Generated_Source\PSoC4/CSD_Filter.c **** }
1301:Generated_Source\PSoC4/CSD_Filter.c **** #endif /* #if CSD_CSD_AUTOTUNE & CSD_CSD_SS_TH_EN */
1302:Generated_Source\PSoC4/CSD_Filter.c **** 
1303:Generated_Source\PSoC4/CSD_Filter.c **** 
1304:Generated_Source\PSoC4/CSD_Filter.c **** #if (CSD_POS_MEDIAN_FILTER_EN || CSD_REGULAR_RC_MEDIAN_FILTER_EN || CSD_PROX_RC_MEDIAN_FILTER_EN)
1305:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
1306:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_FtMedian
1307:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
1308:Generated_Source\PSoC4/CSD_Filter.c **** *
1309:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Return the median value from the three passed arguments.
1310:Generated_Source\PSoC4/CSD_Filter.c **** *
1311:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Return the median value from the three passed arguments.
1312:Generated_Source\PSoC4/CSD_Filter.c **** *
1313:Generated_Source\PSoC4/CSD_Filter.c **** * \param    x1 The first value to be compared.
1314:Generated_Source\PSoC4/CSD_Filter.c **** * \param    x2 The second value to be compared.
1315:Generated_Source\PSoC4/CSD_Filter.c **** * \param    x3 The third value to be compared.
1316:Generated_Source\PSoC4/CSD_Filter.c **** *
1317:Generated_Source\PSoC4/CSD_Filter.c **** * \return   Returns the median value of input arguments.
1318:Generated_Source\PSoC4/CSD_Filter.c **** *
1319:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
1320:Generated_Source\PSoC4/CSD_Filter.c **** uint32 CSD_FtMedian(uint32 x1, uint32 x2, uint32 x3)
1321:Generated_Source\PSoC4/CSD_Filter.c **** {
1322:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 tmp;
1323:Generated_Source\PSoC4/CSD_Filter.c **** 
1324:Generated_Source\PSoC4/CSD_Filter.c ****     if (x1 > x2)
1325:Generated_Source\PSoC4/CSD_Filter.c ****     {
1326:Generated_Source\PSoC4/CSD_Filter.c ****         tmp = x2;
1327:Generated_Source\PSoC4/CSD_Filter.c ****         x2 = x1;
1328:Generated_Source\PSoC4/CSD_Filter.c ****         x1 = tmp;
1329:Generated_Source\PSoC4/CSD_Filter.c ****     }
1330:Generated_Source\PSoC4/CSD_Filter.c **** 
1331:Generated_Source\PSoC4/CSD_Filter.c ****     if (x2 > x3)
1332:Generated_Source\PSoC4/CSD_Filter.c ****     {
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 47


1333:Generated_Source\PSoC4/CSD_Filter.c ****         x2 = x3;
1334:Generated_Source\PSoC4/CSD_Filter.c ****     }
1335:Generated_Source\PSoC4/CSD_Filter.c **** 
1336:Generated_Source\PSoC4/CSD_Filter.c ****     return ((x1 > x2) ? x1 : x2);
1337:Generated_Source\PSoC4/CSD_Filter.c **** }
1338:Generated_Source\PSoC4/CSD_Filter.c **** #endif /*CSD_POS_MEDIAN_FILTER_EN || CSD_REGULAR_RC_MEDIAN_FILTER_EN || CSD_PROX_RC_MEDIAN_FILTER_E
1339:Generated_Source\PSoC4/CSD_Filter.c **** 
1340:Generated_Source\PSoC4/CSD_Filter.c **** 
1341:Generated_Source\PSoC4/CSD_Filter.c **** /*******************************************************************************
1342:Generated_Source\PSoC4/CSD_Filter.c **** * Function Name: CSD_FtIIR1stOrder
1343:Generated_Source\PSoC4/CSD_Filter.c **** ****************************************************************************//**
1344:Generated_Source\PSoC4/CSD_Filter.c **** *
1345:Generated_Source\PSoC4/CSD_Filter.c **** * \brief    Return the filtered data by the IIR 1-st order algorithm
1346:Generated_Source\PSoC4/CSD_Filter.c **** *
1347:Generated_Source\PSoC4/CSD_Filter.c **** * \details  Return the filtered data by the IIR 1-st order algorithm
1348:Generated_Source\PSoC4/CSD_Filter.c **** *
1349:Generated_Source\PSoC4/CSD_Filter.c **** * \param    input      The data to be filtered.
1350:Generated_Source\PSoC4/CSD_Filter.c **** * \param    prevOutput The previous filtered data.
1351:Generated_Source\PSoC4/CSD_Filter.c **** * \param    n          The IIR filter coefficient (n/256).
1352:Generated_Source\PSoC4/CSD_Filter.c **** * \param    shift      The parameter is used to shift input data to have free LSB 
1353:Generated_Source\PSoC4/CSD_Filter.c **** *                       bits for a fraction storage of the filter output calculation.
1354:Generated_Source\PSoC4/CSD_Filter.c **** *
1355:Generated_Source\PSoC4/CSD_Filter.c **** * \return   Returns the filtered data.
1356:Generated_Source\PSoC4/CSD_Filter.c **** *
1357:Generated_Source\PSoC4/CSD_Filter.c **** *******************************************************************************/
1358:Generated_Source\PSoC4/CSD_Filter.c **** uint32 CSD_FtIIR1stOrder(uint32 input, uint32 prevOutput, uint32 n, uint32 shift)
1359:Generated_Source\PSoC4/CSD_Filter.c **** {   
 1276              		.loc 1 1359 0
 1277              		.cfi_startproc
 1278 0000 80B5     		push	{r7, lr}
 1279              		.cfi_def_cfa_offset 8
 1280              		.cfi_offset 7, -8
 1281              		.cfi_offset 14, -4
 1282 0002 86B0     		sub	sp, sp, #24
 1283              		.cfi_def_cfa_offset 32
 1284 0004 00AF     		add	r7, sp, #0
 1285              		.cfi_def_cfa_register 7
 1286 0006 F860     		str	r0, [r7, #12]
 1287 0008 B960     		str	r1, [r7, #8]
 1288 000a 7A60     		str	r2, [r7, #4]
 1289 000c 3B60     		str	r3, [r7]
1360:Generated_Source\PSoC4/CSD_Filter.c ****     uint32 output;
1361:Generated_Source\PSoC4/CSD_Filter.c ****    
1362:Generated_Source\PSoC4/CSD_Filter.c ****     /*
1363:Generated_Source\PSoC4/CSD_Filter.c ****     * n - IIR filter coefficient (n/256)
1364:Generated_Source\PSoC4/CSD_Filter.c ****     * shift - Used to shift input data to have free LSB bits
1365:Generated_Source\PSoC4/CSD_Filter.c ****     * for fraction storage of filter output calculation
1366:Generated_Source\PSoC4/CSD_Filter.c ****     */
1367:Generated_Source\PSoC4/CSD_Filter.c ****     output = ((n * (input << shift)) + ((CSD_IIR_COEFFICIENT_K - n) * prevOutput)) >> 8u;
 1290              		.loc 1 1367 0
 1291 000e 3B68     		ldr	r3, [r7]
 1292 0010 FA68     		ldr	r2, [r7, #12]
 1293 0012 9A40     		lsl	r2, r2, r3
 1294 0014 131C     		mov	r3, r2
 1295 0016 7A68     		ldr	r2, [r7, #4]
 1296 0018 5A43     		mul	r2, r3
 1297 001a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 48


 1298 001c 8021     		mov	r1, #128
 1299 001e 4900     		lsl	r1, r1, #1
 1300 0020 CB1A     		sub	r3, r1, r3
 1301 0022 B968     		ldr	r1, [r7, #8]
 1302 0024 4B43     		mul	r3, r1
 1303 0026 D318     		add	r3, r2, r3
 1304 0028 1B0A     		lsr	r3, r3, #8
 1305 002a 7B61     		str	r3, [r7, #20]
1368:Generated_Source\PSoC4/CSD_Filter.c ****     
1369:Generated_Source\PSoC4/CSD_Filter.c ****     /* Shift operation of output will be done in upper level API if needed */
1370:Generated_Source\PSoC4/CSD_Filter.c ****     return output;
 1306              		.loc 1 1370 0
 1307 002c 7B69     		ldr	r3, [r7, #20]
1371:Generated_Source\PSoC4/CSD_Filter.c **** }
 1308              		.loc 1 1371 0
 1309 002e 181C     		mov	r0, r3
 1310 0030 BD46     		mov	sp, r7
 1311 0032 06B0     		add	sp, sp, #24
 1312              		@ sp needed
 1313 0034 80BD     		pop	{r7, pc}
 1314              		.cfi_endproc
 1315              	.LFE17:
 1316              		.size	CSD_FtIIR1stOrder, .-CSD_FtIIR1stOrder
 1317 0036 C046     		.text
 1318              	.Letext0:
 1319              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1320              		.file 3 "Generated_Source\\PSoC4\\CSD_Configuration.h"
 1321              		.file 4 "Generated_Source\\PSoC4\\CSD_Structure.h"
 1322              		.section	.debug_info,"",%progbits
 1323              	.Ldebug_info0:
 1324 0000 86090000 		.4byte	0x986
 1325 0004 0400     		.2byte	0x4
 1326 0006 00000000 		.4byte	.Ldebug_abbrev0
 1327 000a 04       		.byte	0x4
 1328 000b 01       		.uleb128 0x1
 1329 000c 3E020000 		.4byte	.LASF98
 1330 0010 01       		.byte	0x1
 1331 0011 00000000 		.4byte	.LASF99
 1332 0015 C3010000 		.4byte	.LASF100
 1333 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1334 001d 00000000 		.4byte	0
 1335 0021 00000000 		.4byte	.Ldebug_line0
 1336 0025 02       		.uleb128 0x2
 1337 0026 01       		.byte	0x1
 1338 0027 06       		.byte	0x6
 1339 0028 E2000000 		.4byte	.LASF0
 1340 002c 02       		.uleb128 0x2
 1341 002d 01       		.byte	0x1
 1342 002e 08       		.byte	0x8
 1343 002f D5040000 		.4byte	.LASF1
 1344 0033 02       		.uleb128 0x2
 1345 0034 02       		.byte	0x2
 1346 0035 05       		.byte	0x5
 1347 0036 E3040000 		.4byte	.LASF2
 1348 003a 02       		.uleb128 0x2
 1349 003b 02       		.byte	0x2
 1350 003c 07       		.byte	0x7
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 49


 1351 003d 0D030000 		.4byte	.LASF3
 1352 0041 02       		.uleb128 0x2
 1353 0042 04       		.byte	0x4
 1354 0043 05       		.byte	0x5
 1355 0044 00010000 		.4byte	.LASF4
 1356 0048 02       		.uleb128 0x2
 1357 0049 04       		.byte	0x4
 1358 004a 07       		.byte	0x7
 1359 004b 52050000 		.4byte	.LASF5
 1360 004f 02       		.uleb128 0x2
 1361 0050 08       		.byte	0x8
 1362 0051 05       		.byte	0x5
 1363 0052 D4000000 		.4byte	.LASF6
 1364 0056 02       		.uleb128 0x2
 1365 0057 08       		.byte	0x8
 1366 0058 07       		.byte	0x7
 1367 0059 6C000000 		.4byte	.LASF7
 1368 005d 03       		.uleb128 0x3
 1369 005e 04       		.byte	0x4
 1370 005f 05       		.byte	0x5
 1371 0060 696E7400 		.ascii	"int\000"
 1372 0064 02       		.uleb128 0x2
 1373 0065 04       		.byte	0x4
 1374 0066 07       		.byte	0x7
 1375 0067 B6010000 		.4byte	.LASF8
 1376 006b 04       		.uleb128 0x4
 1377 006c 1A010000 		.4byte	.LASF9
 1378 0070 02       		.byte	0x2
 1379 0071 9801     		.2byte	0x198
 1380 0073 2C000000 		.4byte	0x2c
 1381 0077 04       		.uleb128 0x4
 1382 0078 24000000 		.4byte	.LASF10
 1383 007c 02       		.byte	0x2
 1384 007d 9901     		.2byte	0x199
 1385 007f 3A000000 		.4byte	0x3a
 1386 0083 04       		.uleb128 0x4
 1387 0084 59010000 		.4byte	.LASF11
 1388 0088 02       		.byte	0x2
 1389 0089 9A01     		.2byte	0x19a
 1390 008b 48000000 		.4byte	0x48
 1391 008f 02       		.uleb128 0x2
 1392 0090 04       		.byte	0x4
 1393 0091 04       		.byte	0x4
 1394 0092 85040000 		.4byte	.LASF12
 1395 0096 02       		.uleb128 0x2
 1396 0097 08       		.byte	0x8
 1397 0098 04       		.byte	0x4
 1398 0099 33010000 		.4byte	.LASF13
 1399 009d 02       		.uleb128 0x2
 1400 009e 01       		.byte	0x1
 1401 009f 08       		.byte	0x8
 1402 00a0 64050000 		.4byte	.LASF14
 1403 00a4 04       		.uleb128 0x4
 1404 00a5 12060000 		.4byte	.LASF15
 1405 00a9 02       		.byte	0x2
 1406 00aa 3A02     		.2byte	0x23a
 1407 00ac 48000000 		.4byte	0x48
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 50


 1408 00b0 02       		.uleb128 0x2
 1409 00b1 04       		.byte	0x4
 1410 00b2 07       		.byte	0x7
 1411 00b3 D3030000 		.4byte	.LASF16
 1412 00b7 05       		.uleb128 0x5
 1413 00b8 04       		.byte	0x4
 1414 00b9 06       		.uleb128 0x6
 1415 00ba 60010000 		.4byte	.LASF17
 1416 00be 03       		.byte	0x3
 1417 00bf D8       		.byte	0xd8
 1418 00c0 77000000 		.4byte	0x77
 1419 00c4 06       		.uleb128 0x6
 1420 00c5 28020000 		.4byte	.LASF18
 1421 00c9 03       		.byte	0x3
 1422 00ca DC       		.byte	0xdc
 1423 00cb 6B000000 		.4byte	0x6b
 1424 00cf 07       		.uleb128 0x7
 1425 00d0 01       		.byte	0x1
 1426 00d1 04       		.byte	0x4
 1427 00d2 4F       		.byte	0x4f
 1428 00d3 FC000000 		.4byte	0xfc
 1429 00d7 08       		.uleb128 0x8
 1430 00d8 3A010000 		.4byte	.LASF19
 1431 00dc 01       		.sleb128 1
 1432 00dd 08       		.uleb128 0x8
 1433 00de 7B050000 		.4byte	.LASF20
 1434 00e2 02       		.sleb128 2
 1435 00e3 08       		.uleb128 0x8
 1436 00e4 67060000 		.4byte	.LASF21
 1437 00e8 03       		.sleb128 3
 1438 00e9 08       		.uleb128 0x8
 1439 00ea 09050000 		.4byte	.LASF22
 1440 00ee 04       		.sleb128 4
 1441 00ef 08       		.uleb128 0x8
 1442 00f0 EE000000 		.4byte	.LASF23
 1443 00f4 05       		.sleb128 5
 1444 00f5 08       		.uleb128 0x8
 1445 00f6 AE000000 		.4byte	.LASF24
 1446 00fa 06       		.sleb128 6
 1447 00fb 00       		.byte	0
 1448 00fc 06       		.uleb128 0x6
 1449 00fd 1D040000 		.4byte	.LASF25
 1450 0101 04       		.byte	0x4
 1451 0102 56       		.byte	0x56
 1452 0103 CF000000 		.4byte	0xcf
 1453 0107 09       		.uleb128 0x9
 1454 0108 0E       		.byte	0xe
 1455 0109 04       		.byte	0x4
 1456 010a 7B       		.byte	0x7b
 1457 010b 94010000 		.4byte	0x194
 1458 010f 0A       		.uleb128 0xa
 1459 0110 3C050000 		.4byte	.LASF26
 1460 0114 04       		.byte	0x4
 1461 0115 81       		.byte	0x81
 1462 0116 77000000 		.4byte	0x77
 1463 011a 00       		.byte	0
 1464 011b 0A       		.uleb128 0xa
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 51


 1465 011c 41060000 		.4byte	.LASF27
 1466 0120 04       		.byte	0x4
 1467 0121 86       		.byte	0x86
 1468 0122 B9000000 		.4byte	0xb9
 1469 0126 02       		.byte	0x2
 1470 0127 0A       		.uleb128 0xa
 1471 0128 89060000 		.4byte	.LASF28
 1472 012c 04       		.byte	0x4
 1473 012d 8B       		.byte	0x8b
 1474 012e 6B000000 		.4byte	0x6b
 1475 0132 04       		.byte	0x4
 1476 0133 0A       		.uleb128 0xa
 1477 0134 0B040000 		.4byte	.LASF29
 1478 0138 04       		.byte	0x4
 1479 0139 90       		.byte	0x90
 1480 013a 6B000000 		.4byte	0x6b
 1481 013e 05       		.byte	0x5
 1482 013f 0A       		.uleb128 0xa
 1483 0140 CA040000 		.4byte	.LASF30
 1484 0144 04       		.byte	0x4
 1485 0145 95       		.byte	0x95
 1486 0146 6B000000 		.4byte	0x6b
 1487 014a 06       		.byte	0x6
 1488 014b 0A       		.uleb128 0xa
 1489 014c 70050000 		.4byte	.LASF31
 1490 0150 04       		.byte	0x4
 1491 0151 9A       		.byte	0x9a
 1492 0152 6B000000 		.4byte	0x6b
 1493 0156 07       		.byte	0x7
 1494 0157 0A       		.uleb128 0xa
 1495 0158 E2020000 		.4byte	.LASF32
 1496 015c 04       		.byte	0x4
 1497 015d A0       		.byte	0xa0
 1498 015e C4000000 		.4byte	0xc4
 1499 0162 08       		.byte	0x8
 1500 0163 0A       		.uleb128 0xa
 1501 0164 9C040000 		.4byte	.LASF33
 1502 0168 04       		.byte	0x4
 1503 0169 A5       		.byte	0xa5
 1504 016a 6B000000 		.4byte	0x6b
 1505 016e 09       		.byte	0x9
 1506 016f 0A       		.uleb128 0xa
 1507 0170 C3030000 		.4byte	.LASF34
 1508 0174 04       		.byte	0x4
 1509 0175 AC       		.byte	0xac
 1510 0176 94010000 		.4byte	0x194
 1511 017a 0A       		.byte	0xa
 1512 017b 0A       		.uleb128 0xa
 1513 017c 69050000 		.4byte	.LASF35
 1514 0180 04       		.byte	0x4
 1515 0181 B3       		.byte	0xb3
 1516 0182 6B000000 		.4byte	0x6b
 1517 0186 0B       		.byte	0xb
 1518 0187 0A       		.uleb128 0xa
 1519 0188 05060000 		.4byte	.LASF36
 1520 018c 04       		.byte	0x4
 1521 018d B8       		.byte	0xb8
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 52


 1522 018e 6B000000 		.4byte	0x6b
 1523 0192 0C       		.byte	0xc
 1524 0193 00       		.byte	0
 1525 0194 0B       		.uleb128 0xb
 1526 0195 6B000000 		.4byte	0x6b
 1527 0199 A4010000 		.4byte	0x1a4
 1528 019d 0C       		.uleb128 0xc
 1529 019e B0000000 		.4byte	0xb0
 1530 01a2 00       		.byte	0
 1531 01a3 00       		.byte	0
 1532 01a4 06       		.uleb128 0x6
 1533 01a5 9C030000 		.4byte	.LASF37
 1534 01a9 04       		.byte	0x4
 1535 01aa B9       		.byte	0xb9
 1536 01ab 07010000 		.4byte	0x107
 1537 01af 0D       		.uleb128 0xd
 1538 01b0 0A       		.byte	0xa
 1539 01b1 04       		.byte	0x4
 1540 01b2 0E01     		.2byte	0x10e
 1541 01b4 07020000 		.4byte	0x207
 1542 01b8 0E       		.uleb128 0xe
 1543 01b9 72617700 		.ascii	"raw\000"
 1544 01bd 04       		.byte	0x4
 1545 01be 1301     		.2byte	0x113
 1546 01c0 07020000 		.4byte	0x207
 1547 01c4 00       		.byte	0
 1548 01c5 0F       		.uleb128 0xf
 1549 01c6 B1010000 		.4byte	.LASF38
 1550 01ca 04       		.byte	0x4
 1551 01cb 1801     		.2byte	0x118
 1552 01cd 07020000 		.4byte	0x207
 1553 01d1 02       		.byte	0x2
 1554 01d2 0F       		.uleb128 0xf
 1555 01d3 8B010000 		.4byte	.LASF39
 1556 01d7 04       		.byte	0x4
 1557 01d8 1E01     		.2byte	0x11e
 1558 01da 94010000 		.4byte	0x194
 1559 01de 04       		.byte	0x4
 1560 01df 0F       		.uleb128 0xf
 1561 01e0 92050000 		.4byte	.LASF40
 1562 01e4 04       		.byte	0x4
 1563 01e5 2401     		.2byte	0x124
 1564 01e7 94010000 		.4byte	0x194
 1565 01eb 05       		.byte	0x5
 1566 01ec 0F       		.uleb128 0xf
 1567 01ed A9000000 		.4byte	.LASF41
 1568 01f1 04       		.byte	0x4
 1569 01f2 2901     		.2byte	0x129
 1570 01f4 B9000000 		.4byte	0xb9
 1571 01f8 06       		.byte	0x6
 1572 01f9 0F       		.uleb128 0xf
 1573 01fa 9B050000 		.4byte	.LASF42
 1574 01fe 04       		.byte	0x4
 1575 01ff 2E01     		.2byte	0x12e
 1576 0201 17020000 		.4byte	0x217
 1577 0205 08       		.byte	0x8
 1578 0206 00       		.byte	0
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 53


 1579 0207 0B       		.uleb128 0xb
 1580 0208 77000000 		.4byte	0x77
 1581 020c 17020000 		.4byte	0x217
 1582 0210 0C       		.uleb128 0xc
 1583 0211 B0000000 		.4byte	0xb0
 1584 0215 00       		.byte	0
 1585 0216 00       		.byte	0
 1586 0217 0B       		.uleb128 0xb
 1587 0218 C4000000 		.4byte	0xc4
 1588 021c 27020000 		.4byte	0x227
 1589 0220 0C       		.uleb128 0xc
 1590 0221 B0000000 		.4byte	0xb0
 1591 0225 00       		.byte	0
 1592 0226 00       		.byte	0
 1593 0227 04       		.uleb128 0x4
 1594 0228 20010000 		.4byte	.LASF43
 1595 022c 04       		.byte	0x4
 1596 022d 2F01     		.2byte	0x12f
 1597 022f AF010000 		.4byte	0x1af
 1598 0233 0D       		.uleb128 0xd
 1599 0234 1C       		.byte	0x1c
 1600 0235 04       		.byte	0x4
 1601 0236 FC01     		.2byte	0x1fc
 1602 0238 B2020000 		.4byte	0x2b2
 1603 023c 0F       		.uleb128 0xf
 1604 023d 9C000000 		.4byte	.LASF44
 1605 0241 04       		.byte	0x4
 1606 0242 0502     		.2byte	0x205
 1607 0244 B2020000 		.4byte	0x2b2
 1608 0248 00       		.byte	0
 1609 0249 0F       		.uleb128 0xf
 1610 024a 7E030000 		.4byte	.LASF45
 1611 024e 04       		.byte	0x4
 1612 024f 0B02     		.2byte	0x20b
 1613 0251 B7000000 		.4byte	0xb7
 1614 0255 04       		.byte	0x4
 1615 0256 0F       		.uleb128 0xf
 1616 0257 09010000 		.4byte	.LASF46
 1617 025b 04       		.byte	0x4
 1618 025c 1102     		.2byte	0x211
 1619 025e B9020000 		.4byte	0x2b9
 1620 0262 08       		.byte	0x8
 1621 0263 0F       		.uleb128 0xf
 1622 0264 F9040000 		.4byte	.LASF47
 1623 0268 04       		.byte	0x4
 1624 0269 1602     		.2byte	0x216
 1625 026b B7000000 		.4byte	0xb7
 1626 026f 0C       		.byte	0xc
 1627 0270 0F       		.uleb128 0xf
 1628 0271 B5050000 		.4byte	.LASF48
 1629 0275 04       		.byte	0x4
 1630 0276 1D02     		.2byte	0x21d
 1631 0278 BF020000 		.4byte	0x2bf
 1632 027c 10       		.byte	0x10
 1633 027d 0F       		.uleb128 0xf
 1634 027e FE030000 		.4byte	.LASF49
 1635 0282 04       		.byte	0x4
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 54


 1636 0283 2202     		.2byte	0x222
 1637 0285 77000000 		.4byte	0x77
 1638 0289 14       		.byte	0x14
 1639 028a 0F       		.uleb128 0xf
 1640 028b A9050000 		.4byte	.LASF50
 1641 028f 04       		.byte	0x4
 1642 0290 2902     		.2byte	0x229
 1643 0292 77000000 		.4byte	0x77
 1644 0296 16       		.byte	0x16
 1645 0297 0F       		.uleb128 0xf
 1646 0298 14040000 		.4byte	.LASF51
 1647 029c 04       		.byte	0x4
 1648 029d 3402     		.2byte	0x234
 1649 029f 6B000000 		.4byte	0x6b
 1650 02a3 18       		.byte	0x18
 1651 02a4 0F       		.uleb128 0xf
 1652 02a5 CB030000 		.4byte	.LASF52
 1653 02a9 04       		.byte	0x4
 1654 02aa 3C02     		.2byte	0x23c
 1655 02ac 6B000000 		.4byte	0x6b
 1656 02b0 19       		.byte	0x19
 1657 02b1 00       		.byte	0
 1658 02b2 10       		.uleb128 0x10
 1659 02b3 04       		.byte	0x4
 1660 02b4 B8020000 		.4byte	0x2b8
 1661 02b8 11       		.uleb128 0x11
 1662 02b9 10       		.uleb128 0x10
 1663 02ba 04       		.byte	0x4
 1664 02bb 27020000 		.4byte	0x227
 1665 02bf 10       		.uleb128 0x10
 1666 02c0 04       		.byte	0x4
 1667 02c1 6B000000 		.4byte	0x6b
 1668 02c5 04       		.uleb128 0x4
 1669 02c6 28050000 		.4byte	.LASF53
 1670 02ca 04       		.byte	0x4
 1671 02cb 3D02     		.2byte	0x23d
 1672 02cd 33020000 		.4byte	0x233
 1673 02d1 0D       		.uleb128 0xd
 1674 02d2 1C       		.byte	0x1c
 1675 02d3 04       		.byte	0x4
 1676 02d4 4302     		.2byte	0x243
 1677 02d6 E8020000 		.4byte	0x2e8
 1678 02da 0F       		.uleb128 0xf
 1679 02db F6050000 		.4byte	.LASF54
 1680 02df 04       		.byte	0x4
 1681 02e0 4802     		.2byte	0x248
 1682 02e2 E8020000 		.4byte	0x2e8
 1683 02e6 00       		.byte	0
 1684 02e7 00       		.byte	0
 1685 02e8 0B       		.uleb128 0xb
 1686 02e9 C5020000 		.4byte	0x2c5
 1687 02ed F8020000 		.4byte	0x2f8
 1688 02f1 0C       		.uleb128 0xc
 1689 02f2 B0000000 		.4byte	0xb0
 1690 02f6 00       		.byte	0
 1691 02f7 00       		.byte	0
 1692 02f8 04       		.uleb128 0x4
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 55


 1693 02f9 E5050000 		.4byte	.LASF55
 1694 02fd 04       		.byte	0x4
 1695 02fe 4902     		.2byte	0x249
 1696 0300 D1020000 		.4byte	0x2d1
 1697 0304 0D       		.uleb128 0xd
 1698 0305 02       		.byte	0x2
 1699 0306 04       		.byte	0x4
 1700 0307 6302     		.2byte	0x263
 1701 0309 1B030000 		.4byte	0x31b
 1702 030d 0F       		.uleb128 0xf
 1703 030e A6010000 		.4byte	.LASF56
 1704 0312 04       		.byte	0x4
 1705 0313 6802     		.2byte	0x268
 1706 0315 77000000 		.4byte	0x77
 1707 0319 00       		.byte	0
 1708 031a 00       		.byte	0
 1709 031b 04       		.uleb128 0x4
 1710 031c ED020000 		.4byte	.LASF57
 1711 0320 04       		.byte	0x4
 1712 0321 6902     		.2byte	0x269
 1713 0323 04030000 		.4byte	0x304
 1714 0327 0D       		.uleb128 0xd
 1715 0328 02       		.byte	0x2
 1716 0329 04       		.byte	0x4
 1717 032a 6E02     		.2byte	0x26e
 1718 032c 3E030000 		.4byte	0x33e
 1719 0330 0F       		.uleb128 0xf
 1720 0331 BB040000 		.4byte	.LASF58
 1721 0335 04       		.byte	0x4
 1722 0336 7302     		.2byte	0x273
 1723 0338 3E030000 		.4byte	0x33e
 1724 033c 00       		.byte	0
 1725 033d 00       		.byte	0
 1726 033e 0B       		.uleb128 0xb
 1727 033f 1B030000 		.4byte	0x31b
 1728 0343 4E030000 		.4byte	0x34e
 1729 0347 0C       		.uleb128 0xc
 1730 0348 B0000000 		.4byte	0xb0
 1731 034c 00       		.byte	0
 1732 034d 00       		.byte	0
 1733 034e 04       		.uleb128 0x4
 1734 034f 73010000 		.4byte	.LASF59
 1735 0353 04       		.byte	0x4
 1736 0354 7402     		.2byte	0x274
 1737 0356 27030000 		.4byte	0x327
 1738 035a 12       		.uleb128 0x12
 1739 035b 04       		.byte	0x4
 1740 035c 04       		.byte	0x4
 1741 035d 7902     		.2byte	0x279
 1742 035f 7C030000 		.4byte	0x37c
 1743 0363 13       		.uleb128 0x13
 1744 0364 70747200 		.ascii	"ptr\000"
 1745 0368 04       		.byte	0x4
 1746 0369 7E02     		.2byte	0x27e
 1747 036b B7000000 		.4byte	0xb7
 1748 036f 14       		.uleb128 0x14
 1749 0370 7E060000 		.4byte	.LASF60
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 56


 1750 0374 04       		.byte	0x4
 1751 0375 8302     		.2byte	0x283
 1752 0377 7C030000 		.4byte	0x37c
 1753 037b 00       		.byte	0
 1754 037c 10       		.uleb128 0x10
 1755 037d 04       		.byte	0x4
 1756 037e 4E030000 		.4byte	0x34e
 1757 0382 04       		.uleb128 0x4
 1758 0383 20030000 		.4byte	.LASF61
 1759 0387 04       		.byte	0x4
 1760 0388 8402     		.2byte	0x284
 1761 038a 5A030000 		.4byte	0x35a
 1762 038e 15       		.uleb128 0x15
 1763 038f 8B040000 		.4byte	.LASF79
 1764 0393 01       		.byte	0x1
 1765 0394 38       		.byte	0x38
 1766 0395 00000000 		.4byte	.LFB1
 1767 0399 90000000 		.4byte	.LFE1-.LFB1
 1768 039d 01       		.uleb128 0x1
 1769 039e 9C       		.byte	0x9c
 1770 039f F8030000 		.4byte	0x3f8
 1771 03a3 16       		.uleb128 0x16
 1772 03a4 B3030000 		.4byte	.LASF62
 1773 03a8 01       		.byte	0x1
 1774 03a9 3A       		.byte	0x3a
 1775 03aa 83000000 		.4byte	0x83
 1776 03ae 02       		.uleb128 0x2
 1777 03af 91       		.byte	0x91
 1778 03b0 6C       		.sleb128 -20
 1779 03b1 16       		.uleb128 0x16
 1780 03b2 50010000 		.4byte	.LASF63
 1781 03b6 01       		.byte	0x1
 1782 03b7 3B       		.byte	0x3b
 1783 03b8 83000000 		.4byte	0x83
 1784 03bc 02       		.uleb128 0x2
 1785 03bd 91       		.byte	0x91
 1786 03be 68       		.sleb128 -24
 1787 03bf 16       		.uleb128 0x16
 1788 03c0 93010000 		.4byte	.LASF64
 1789 03c4 01       		.byte	0x1
 1790 03c5 3C       		.byte	0x3c
 1791 03c6 83000000 		.4byte	0x83
 1792 03ca 02       		.uleb128 0x2
 1793 03cb 91       		.byte	0x91
 1794 03cc 5C       		.sleb128 -36
 1795 03cd 16       		.uleb128 0x16
 1796 03ce DC030000 		.4byte	.LASF65
 1797 03d2 01       		.byte	0x1
 1798 03d3 3E       		.byte	0x3e
 1799 03d4 F8030000 		.4byte	0x3f8
 1800 03d8 02       		.uleb128 0x2
 1801 03d9 91       		.byte	0x91
 1802 03da 60       		.sleb128 -32
 1803 03db 16       		.uleb128 0x16
 1804 03dc 2C060000 		.4byte	.LASF66
 1805 03e0 01       		.byte	0x1
 1806 03e1 3F       		.byte	0x3f
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 57


 1807 03e2 B9020000 		.4byte	0x2b9
 1808 03e6 02       		.uleb128 0x2
 1809 03e7 91       		.byte	0x91
 1810 03e8 64       		.sleb128 -28
 1811 03e9 16       		.uleb128 0x16
 1812 03ea 1B060000 		.4byte	.LASF67
 1813 03ee 01       		.byte	0x1
 1814 03ef 40       		.byte	0x40
 1815 03f0 82030000 		.4byte	0x382
 1816 03f4 02       		.uleb128 0x2
 1817 03f5 91       		.byte	0x91
 1818 03f6 58       		.sleb128 -40
 1819 03f7 00       		.byte	0
 1820 03f8 10       		.uleb128 0x10
 1821 03f9 04       		.byte	0x4
 1822 03fa FE030000 		.4byte	0x3fe
 1823 03fe 17       		.uleb128 0x17
 1824 03ff C5020000 		.4byte	0x2c5
 1825 0403 18       		.uleb128 0x18
 1826 0404 4A000000 		.4byte	.LASF69
 1827 0408 01       		.byte	0x1
 1828 0409 9B       		.byte	0x9b
 1829 040a A4000000 		.4byte	0xa4
 1830 040e 00000000 		.4byte	.LFB2
 1831 0412 34000000 		.4byte	.LFE2-.LFB2
 1832 0416 01       		.uleb128 0x1
 1833 0417 9C       		.byte	0x9c
 1834 0418 39040000 		.4byte	0x439
 1835 041c 16       		.uleb128 0x16
 1836 041d B3030000 		.4byte	.LASF62
 1837 0421 01       		.byte	0x1
 1838 0422 9D       		.byte	0x9d
 1839 0423 83000000 		.4byte	0x83
 1840 0427 02       		.uleb128 0x2
 1841 0428 91       		.byte	0x91
 1842 0429 74       		.sleb128 -12
 1843 042a 16       		.uleb128 0x16
 1844 042b 91030000 		.4byte	.LASF68
 1845 042f 01       		.byte	0x1
 1846 0430 9E       		.byte	0x9e
 1847 0431 A4000000 		.4byte	0xa4
 1848 0435 02       		.uleb128 0x2
 1849 0436 91       		.byte	0x91
 1850 0437 70       		.sleb128 -16
 1851 0438 00       		.byte	0
 1852 0439 18       		.uleb128 0x18
 1853 043a 4C030000 		.4byte	.LASF70
 1854 043e 01       		.byte	0x1
 1855 043f C4       		.byte	0xc4
 1856 0440 A4000000 		.4byte	0xa4
 1857 0444 00000000 		.4byte	.LFB3
 1858 0448 54000000 		.4byte	.LFE3-.LFB3
 1859 044c 01       		.uleb128 0x1
 1860 044d 9C       		.byte	0x9c
 1861 044e 99040000 		.4byte	0x499
 1862 0452 19       		.uleb128 0x19
 1863 0453 B3030000 		.4byte	.LASF62
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 58


 1864 0457 01       		.byte	0x1
 1865 0458 C4       		.byte	0xc4
 1866 0459 83000000 		.4byte	0x83
 1867 045d 02       		.uleb128 0x2
 1868 045e 91       		.byte	0x91
 1869 045f 64       		.sleb128 -28
 1870 0460 16       		.uleb128 0x16
 1871 0461 50010000 		.4byte	.LASF63
 1872 0465 01       		.byte	0x1
 1873 0466 C6       		.byte	0xc6
 1874 0467 83000000 		.4byte	0x83
 1875 046b 02       		.uleb128 0x2
 1876 046c 91       		.byte	0x91
 1877 046d 74       		.sleb128 -12
 1878 046e 16       		.uleb128 0x16
 1879 046f 93010000 		.4byte	.LASF64
 1880 0473 01       		.byte	0x1
 1881 0474 C7       		.byte	0xc7
 1882 0475 83000000 		.4byte	0x83
 1883 0479 02       		.uleb128 0x2
 1884 047a 91       		.byte	0x91
 1885 047b 68       		.sleb128 -24
 1886 047c 16       		.uleb128 0x16
 1887 047d DC030000 		.4byte	.LASF65
 1888 0481 01       		.byte	0x1
 1889 0482 C9       		.byte	0xc9
 1890 0483 F8030000 		.4byte	0x3f8
 1891 0487 02       		.uleb128 0x2
 1892 0488 91       		.byte	0x91
 1893 0489 6C       		.sleb128 -20
 1894 048a 16       		.uleb128 0x16
 1895 048b 91030000 		.4byte	.LASF68
 1896 048f 01       		.byte	0x1
 1897 0490 CA       		.byte	0xca
 1898 0491 A4000000 		.4byte	0xa4
 1899 0495 02       		.uleb128 0x2
 1900 0496 91       		.byte	0x91
 1901 0497 70       		.sleb128 -16
 1902 0498 00       		.byte	0
 1903 0499 18       		.uleb128 0x18
 1904 049a 83000000 		.4byte	.LASF71
 1905 049e 01       		.byte	0x1
 1906 049f FA       		.byte	0xfa
 1907 04a0 A4000000 		.4byte	0xa4
 1908 04a4 00000000 		.4byte	.LFB4
 1909 04a8 68000000 		.4byte	.LFE4-.LFB4
 1910 04ac 01       		.uleb128 0x1
 1911 04ad 9C       		.byte	0x9c
 1912 04ae 08050000 		.4byte	0x508
 1913 04b2 19       		.uleb128 0x19
 1914 04b3 B3030000 		.4byte	.LASF62
 1915 04b7 01       		.byte	0x1
 1916 04b8 FA       		.byte	0xfa
 1917 04b9 83000000 		.4byte	0x83
 1918 04bd 02       		.uleb128 0x2
 1919 04be 91       		.byte	0x91
 1920 04bf 5C       		.sleb128 -36
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 59


 1921 04c0 19       		.uleb128 0x19
 1922 04c1 50010000 		.4byte	.LASF63
 1923 04c5 01       		.byte	0x1
 1924 04c6 FA       		.byte	0xfa
 1925 04c7 83000000 		.4byte	0x83
 1926 04cb 02       		.uleb128 0x2
 1927 04cc 91       		.byte	0x91
 1928 04cd 58       		.sleb128 -40
 1929 04ce 16       		.uleb128 0x16
 1930 04cf 91030000 		.4byte	.LASF68
 1931 04d3 01       		.byte	0x1
 1932 04d4 FC       		.byte	0xfc
 1933 04d5 A4000000 		.4byte	0xa4
 1934 04d9 02       		.uleb128 0x2
 1935 04da 91       		.byte	0x91
 1936 04db 6C       		.sleb128 -20
 1937 04dc 16       		.uleb128 0x16
 1938 04dd 2C060000 		.4byte	.LASF66
 1939 04e1 01       		.byte	0x1
 1940 04e2 FE       		.byte	0xfe
 1941 04e3 B9020000 		.4byte	0x2b9
 1942 04e7 02       		.uleb128 0x2
 1943 04e8 91       		.byte	0x91
 1944 04e9 68       		.sleb128 -24
 1945 04ea 16       		.uleb128 0x16
 1946 04eb DC030000 		.4byte	.LASF65
 1947 04ef 01       		.byte	0x1
 1948 04f0 FF       		.byte	0xff
 1949 04f1 F8030000 		.4byte	0x3f8
 1950 04f5 02       		.uleb128 0x2
 1951 04f6 91       		.byte	0x91
 1952 04f7 64       		.sleb128 -28
 1953 04f8 1A       		.uleb128 0x1a
 1954 04f9 2B000000 		.4byte	.LASF72
 1955 04fd 01       		.byte	0x1
 1956 04fe 0001     		.2byte	0x100
 1957 0500 08050000 		.4byte	0x508
 1958 0504 02       		.uleb128 0x2
 1959 0505 91       		.byte	0x91
 1960 0506 60       		.sleb128 -32
 1961 0507 00       		.byte	0
 1962 0508 10       		.uleb128 0x10
 1963 0509 04       		.byte	0x4
 1964 050a A4010000 		.4byte	0x1a4
 1965 050e 1B       		.uleb128 0x1b
 1966 050f 37030000 		.4byte	.LASF73
 1967 0513 01       		.byte	0x1
 1968 0514 1E01     		.2byte	0x11e
 1969 0516 A4000000 		.4byte	0xa4
 1970 051a 00000000 		.4byte	.LFB5
 1971 051e 5A010000 		.4byte	.LFE5-.LFB5
 1972 0522 01       		.uleb128 0x1
 1973 0523 9C       		.byte	0x9c
 1974 0524 A1050000 		.4byte	0x5a1
 1975 0528 1C       		.uleb128 0x1c
 1976 0529 2B000000 		.4byte	.LASF72
 1977 052d 01       		.byte	0x1
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 60


 1978 052e 1F01     		.2byte	0x11f
 1979 0530 08050000 		.4byte	0x508
 1980 0534 02       		.uleb128 0x2
 1981 0535 91       		.byte	0x91
 1982 0536 5C       		.sleb128 -36
 1983 0537 1C       		.uleb128 0x1c
 1984 0538 2C060000 		.4byte	.LASF66
 1985 053c 01       		.byte	0x1
 1986 053d 2001     		.2byte	0x120
 1987 053f B9020000 		.4byte	0x2b9
 1988 0543 02       		.uleb128 0x2
 1989 0544 91       		.byte	0x91
 1990 0545 58       		.sleb128 -40
 1991 0546 1C       		.uleb128 0x1c
 1992 0547 8A030000 		.4byte	.LASF74
 1993 054b 01       		.byte	0x1
 1994 054c 2101     		.2byte	0x121
 1995 054e 83000000 		.4byte	0x83
 1996 0552 02       		.uleb128 0x2
 1997 0553 91       		.byte	0x91
 1998 0554 54       		.sleb128 -44
 1999 0555 1A       		.uleb128 0x1a
 2000 0556 00060000 		.4byte	.LASF75
 2001 055a 01       		.byte	0x1
 2002 055b 2301     		.2byte	0x123
 2003 055d 83000000 		.4byte	0x83
 2004 0561 02       		.uleb128 0x2
 2005 0562 91       		.byte	0x91
 2006 0563 74       		.sleb128 -12
 2007 0564 1A       		.uleb128 0x1a
 2008 0565 61000000 		.4byte	.LASF76
 2009 0569 01       		.byte	0x1
 2010 056a 2401     		.2byte	0x124
 2011 056c 83000000 		.4byte	0x83
 2012 0570 02       		.uleb128 0x2
 2013 0571 91       		.byte	0x91
 2014 0572 70       		.sleb128 -16
 2015 0573 1A       		.uleb128 0x1a
 2016 0574 20050000 		.4byte	.LASF77
 2017 0578 01       		.byte	0x1
 2018 0579 2501     		.2byte	0x125
 2019 057b 83000000 		.4byte	0x83
 2020 057f 02       		.uleb128 0x2
 2021 0580 91       		.byte	0x91
 2022 0581 6C       		.sleb128 -20
 2023 0582 1A       		.uleb128 0x1a
 2024 0583 91030000 		.4byte	.LASF68
 2025 0587 01       		.byte	0x1
 2026 0588 2601     		.2byte	0x126
 2027 058a A4000000 		.4byte	0xa4
 2028 058e 02       		.uleb128 0x2
 2029 058f 91       		.byte	0x91
 2030 0590 68       		.sleb128 -24
 2031 0591 1A       		.uleb128 0x1a
 2032 0592 A6040000 		.4byte	.LASF78
 2033 0596 01       		.byte	0x1
 2034 0597 2901     		.2byte	0x129
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 61


 2035 0599 83000000 		.4byte	0x83
 2036 059d 02       		.uleb128 0x2
 2037 059e 91       		.byte	0x91
 2038 059f 64       		.sleb128 -28
 2039 05a0 00       		.byte	0
 2040 05a1 1D       		.uleb128 0x1d
 2041 05a2 91060000 		.4byte	.LASF80
 2042 05a6 01       		.byte	0x1
 2043 05a7 9F01     		.2byte	0x19f
 2044 05a9 00000000 		.4byte	.LFB6
 2045 05ad 24000000 		.4byte	.LFE6-.LFB6
 2046 05b1 01       		.uleb128 0x1
 2047 05b2 9C       		.byte	0x9c
 2048 05b3 C7050000 		.4byte	0x5c7
 2049 05b7 1A       		.uleb128 0x1a
 2050 05b8 B3030000 		.4byte	.LASF62
 2051 05bc 01       		.byte	0x1
 2052 05bd A101     		.2byte	0x1a1
 2053 05bf 83000000 		.4byte	0x83
 2054 05c3 02       		.uleb128 0x2
 2055 05c4 91       		.byte	0x91
 2056 05c5 74       		.sleb128 -12
 2057 05c6 00       		.byte	0
 2058 05c7 1D       		.uleb128 0x1d
 2059 05c8 4E040000 		.4byte	.LASF81
 2060 05cc 01       		.byte	0x1
 2061 05cd BE01     		.2byte	0x1be
 2062 05cf 00000000 		.4byte	.LFB7
 2063 05d3 44000000 		.4byte	.LFE7-.LFB7
 2064 05d7 01       		.uleb128 0x1
 2065 05d8 9C       		.byte	0x9c
 2066 05d9 1A060000 		.4byte	0x61a
 2067 05dd 1C       		.uleb128 0x1c
 2068 05de B3030000 		.4byte	.LASF62
 2069 05e2 01       		.byte	0x1
 2070 05e3 BE01     		.2byte	0x1be
 2071 05e5 83000000 		.4byte	0x83
 2072 05e9 02       		.uleb128 0x2
 2073 05ea 91       		.byte	0x91
 2074 05eb 64       		.sleb128 -28
 2075 05ec 1A       		.uleb128 0x1a
 2076 05ed 50010000 		.4byte	.LASF63
 2077 05f1 01       		.byte	0x1
 2078 05f2 C001     		.2byte	0x1c0
 2079 05f4 83000000 		.4byte	0x83
 2080 05f8 02       		.uleb128 0x2
 2081 05f9 91       		.byte	0x91
 2082 05fa 74       		.sleb128 -12
 2083 05fb 1A       		.uleb128 0x1a
 2084 05fc 93010000 		.4byte	.LASF64
 2085 0600 01       		.byte	0x1
 2086 0601 C101     		.2byte	0x1c1
 2087 0603 83000000 		.4byte	0x83
 2088 0607 02       		.uleb128 0x2
 2089 0608 91       		.byte	0x91
 2090 0609 6C       		.sleb128 -20
 2091 060a 1A       		.uleb128 0x1a
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 62


 2092 060b DC030000 		.4byte	.LASF65
 2093 060f 01       		.byte	0x1
 2094 0610 C301     		.2byte	0x1c3
 2095 0612 F8030000 		.4byte	0x3f8
 2096 0616 02       		.uleb128 0x2
 2097 0617 91       		.byte	0x91
 2098 0618 70       		.sleb128 -16
 2099 0619 00       		.byte	0
 2100 061a 1D       		.uleb128 0x1d
 2101 061b 4A060000 		.4byte	.LASF82
 2102 061f 01       		.byte	0x1
 2103 0620 EA01     		.2byte	0x1ea
 2104 0622 00000000 		.4byte	.LFB8
 2105 0626 54000000 		.4byte	.LFE8-.LFB8
 2106 062a 01       		.uleb128 0x1
 2107 062b 9C       		.byte	0x9c
 2108 062c 6D060000 		.4byte	0x66d
 2109 0630 1C       		.uleb128 0x1c
 2110 0631 B3030000 		.4byte	.LASF62
 2111 0635 01       		.byte	0x1
 2112 0636 EA01     		.2byte	0x1ea
 2113 0638 83000000 		.4byte	0x83
 2114 063c 02       		.uleb128 0x2
 2115 063d 91       		.byte	0x91
 2116 063e 6C       		.sleb128 -20
 2117 063f 1C       		.uleb128 0x1c
 2118 0640 50010000 		.4byte	.LASF63
 2119 0644 01       		.byte	0x1
 2120 0645 EA01     		.2byte	0x1ea
 2121 0647 83000000 		.4byte	0x83
 2122 064b 02       		.uleb128 0x2
 2123 064c 91       		.byte	0x91
 2124 064d 68       		.sleb128 -24
 2125 064e 1A       		.uleb128 0x1a
 2126 064f 2C060000 		.4byte	.LASF66
 2127 0653 01       		.byte	0x1
 2128 0654 EC01     		.2byte	0x1ec
 2129 0656 B9020000 		.4byte	0x2b9
 2130 065a 02       		.uleb128 0x2
 2131 065b 91       		.byte	0x91
 2132 065c 74       		.sleb128 -12
 2133 065d 1A       		.uleb128 0x1a
 2134 065e DC030000 		.4byte	.LASF65
 2135 0662 01       		.byte	0x1
 2136 0663 ED01     		.2byte	0x1ed
 2137 0665 F8030000 		.4byte	0x3f8
 2138 0669 02       		.uleb128 0x2
 2139 066a 91       		.byte	0x91
 2140 066b 70       		.sleb128 -16
 2141 066c 00       		.byte	0
 2142 066d 1D       		.uleb128 0x1d
 2143 066e 65030000 		.4byte	.LASF83
 2144 0672 01       		.byte	0x1
 2145 0673 0602     		.2byte	0x206
 2146 0675 00000000 		.4byte	.LFB9
 2147 0679 30000000 		.4byte	.LFE9-.LFB9
 2148 067d 01       		.uleb128 0x1
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 63


 2149 067e 9C       		.byte	0x9c
 2150 067f B1060000 		.4byte	0x6b1
 2151 0683 1C       		.uleb128 0x1c
 2152 0684 2C060000 		.4byte	.LASF66
 2153 0688 01       		.byte	0x1
 2154 0689 0602     		.2byte	0x206
 2155 068b B9020000 		.4byte	0x2b9
 2156 068f 02       		.uleb128 0x2
 2157 0690 91       		.byte	0x91
 2158 0691 6C       		.sleb128 -20
 2159 0692 1C       		.uleb128 0x1c
 2160 0693 8A030000 		.4byte	.LASF74
 2161 0697 01       		.byte	0x1
 2162 0698 0602     		.2byte	0x206
 2163 069a 83000000 		.4byte	0x83
 2164 069e 02       		.uleb128 0x2
 2165 069f 91       		.byte	0x91
 2166 06a0 68       		.sleb128 -24
 2167 06a1 1A       		.uleb128 0x1a
 2168 06a2 20050000 		.4byte	.LASF77
 2169 06a6 01       		.byte	0x1
 2170 06a7 0802     		.2byte	0x208
 2171 06a9 83000000 		.4byte	0x83
 2172 06ad 02       		.uleb128 0x2
 2173 06ae 91       		.byte	0x91
 2174 06af 74       		.sleb128 -12
 2175 06b0 00       		.byte	0
 2176 06b1 1E       		.uleb128 0x1e
 2177 06b2 C5050000 		.4byte	.LASF84
 2178 06b6 01       		.byte	0x1
 2179 06b7 2102     		.2byte	0x221
 2180 06b9 00000000 		.4byte	.LFB10
 2181 06bd 44000000 		.4byte	.LFE10-.LFB10
 2182 06c1 01       		.uleb128 0x1
 2183 06c2 9C       		.byte	0x9c
 2184 06c3 F5060000 		.4byte	0x6f5
 2185 06c7 1C       		.uleb128 0x1c
 2186 06c8 2C060000 		.4byte	.LASF66
 2187 06cc 01       		.byte	0x1
 2188 06cd 2102     		.2byte	0x221
 2189 06cf B9020000 		.4byte	0x2b9
 2190 06d3 02       		.uleb128 0x2
 2191 06d4 91       		.byte	0x91
 2192 06d5 74       		.sleb128 -12
 2193 06d6 1C       		.uleb128 0x1c
 2194 06d7 8A030000 		.4byte	.LASF74
 2195 06db 01       		.byte	0x1
 2196 06dc 2102     		.2byte	0x221
 2197 06de 83000000 		.4byte	0x83
 2198 06e2 02       		.uleb128 0x2
 2199 06e3 91       		.byte	0x91
 2200 06e4 70       		.sleb128 -16
 2201 06e5 1C       		.uleb128 0x1c
 2202 06e6 20050000 		.4byte	.LASF77
 2203 06ea 01       		.byte	0x1
 2204 06eb 2102     		.2byte	0x221
 2205 06ed 83000000 		.4byte	0x83
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 64


 2206 06f1 02       		.uleb128 0x2
 2207 06f2 91       		.byte	0x91
 2208 06f3 6C       		.sleb128 -20
 2209 06f4 00       		.byte	0
 2210 06f5 1D       		.uleb128 0x1d
 2211 06f6 38000000 		.4byte	.LASF85
 2212 06fa 01       		.byte	0x1
 2213 06fb 4C02     		.2byte	0x24c
 2214 06fd 00000000 		.4byte	.LFB11
 2215 0701 6C000000 		.4byte	.LFE11-.LFB11
 2216 0705 01       		.uleb128 0x1
 2217 0706 9C       		.byte	0x9c
 2218 0707 57070000 		.4byte	0x757
 2219 070b 1C       		.uleb128 0x1c
 2220 070c B3030000 		.4byte	.LASF62
 2221 0710 01       		.byte	0x1
 2222 0711 4C02     		.2byte	0x24c
 2223 0713 83000000 		.4byte	0x83
 2224 0717 02       		.uleb128 0x2
 2225 0718 91       		.byte	0x91
 2226 0719 5C       		.sleb128 -36
 2227 071a 1C       		.uleb128 0x1c
 2228 071b 50010000 		.4byte	.LASF63
 2229 071f 01       		.byte	0x1
 2230 0720 4C02     		.2byte	0x24c
 2231 0722 83000000 		.4byte	0x83
 2232 0726 02       		.uleb128 0x2
 2233 0727 91       		.byte	0x91
 2234 0728 58       		.sleb128 -40
 2235 0729 1A       		.uleb128 0x1a
 2236 072a DC030000 		.4byte	.LASF65
 2237 072e 01       		.byte	0x1
 2238 072f 4E02     		.2byte	0x24e
 2239 0731 F8030000 		.4byte	0x3f8
 2240 0735 02       		.uleb128 0x2
 2241 0736 91       		.byte	0x91
 2242 0737 6C       		.sleb128 -20
 2243 0738 1A       		.uleb128 0x1a
 2244 0739 2C060000 		.4byte	.LASF66
 2245 073d 01       		.byte	0x1
 2246 073e 4F02     		.2byte	0x24f
 2247 0740 B9020000 		.4byte	0x2b9
 2248 0744 02       		.uleb128 0x2
 2249 0745 91       		.byte	0x91
 2250 0746 68       		.sleb128 -24
 2251 0747 1A       		.uleb128 0x1a
 2252 0748 1B060000 		.4byte	.LASF67
 2253 074c 01       		.byte	0x1
 2254 074d 5002     		.2byte	0x250
 2255 074f 82030000 		.4byte	0x382
 2256 0753 02       		.uleb128 0x2
 2257 0754 91       		.byte	0x91
 2258 0755 64       		.sleb128 -28
 2259 0756 00       		.byte	0
 2260 0757 1D       		.uleb128 0x1d
 2261 0758 47050000 		.4byte	.LASF86
 2262 075c 01       		.byte	0x1
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 65


 2263 075d 7802     		.2byte	0x278
 2264 075f 00000000 		.4byte	.LFB12
 2265 0763 6C000000 		.4byte	.LFE12-.LFB12
 2266 0767 01       		.uleb128 0x1
 2267 0768 9C       		.byte	0x9c
 2268 0769 B9070000 		.4byte	0x7b9
 2269 076d 1C       		.uleb128 0x1c
 2270 076e B3030000 		.4byte	.LASF62
 2271 0772 01       		.byte	0x1
 2272 0773 7802     		.2byte	0x278
 2273 0775 83000000 		.4byte	0x83
 2274 0779 02       		.uleb128 0x2
 2275 077a 91       		.byte	0x91
 2276 077b 5C       		.sleb128 -36
 2277 077c 1C       		.uleb128 0x1c
 2278 077d 50010000 		.4byte	.LASF63
 2279 0781 01       		.byte	0x1
 2280 0782 7802     		.2byte	0x278
 2281 0784 83000000 		.4byte	0x83
 2282 0788 02       		.uleb128 0x2
 2283 0789 91       		.byte	0x91
 2284 078a 58       		.sleb128 -40
 2285 078b 1A       		.uleb128 0x1a
 2286 078c DC030000 		.4byte	.LASF65
 2287 0790 01       		.byte	0x1
 2288 0791 7A02     		.2byte	0x27a
 2289 0793 F8030000 		.4byte	0x3f8
 2290 0797 02       		.uleb128 0x2
 2291 0798 91       		.byte	0x91
 2292 0799 6C       		.sleb128 -20
 2293 079a 1A       		.uleb128 0x1a
 2294 079b 2C060000 		.4byte	.LASF66
 2295 079f 01       		.byte	0x1
 2296 07a0 7B02     		.2byte	0x27b
 2297 07a2 B9020000 		.4byte	0x2b9
 2298 07a6 02       		.uleb128 0x2
 2299 07a7 91       		.byte	0x91
 2300 07a8 68       		.sleb128 -24
 2301 07a9 1A       		.uleb128 0x1a
 2302 07aa 1B060000 		.4byte	.LASF67
 2303 07ae 01       		.byte	0x1
 2304 07af 7C02     		.2byte	0x27c
 2305 07b1 82030000 		.4byte	0x382
 2306 07b5 02       		.uleb128 0x2
 2307 07b6 91       		.byte	0x91
 2308 07b7 64       		.sleb128 -28
 2309 07b8 00       		.byte	0
 2310 07b9 1E       		.uleb128 0x1e
 2311 07ba 6B040000 		.4byte	.LASF87
 2312 07be 01       		.byte	0x1
 2313 07bf A202     		.2byte	0x2a2
 2314 07c1 00000000 		.4byte	.LFB13
 2315 07c5 3A000000 		.4byte	.LFE13-.LFB13
 2316 07c9 01       		.uleb128 0x1
 2317 07ca 9C       		.byte	0x9c
 2318 07cb 0C080000 		.4byte	0x80c
 2319 07cf 1C       		.uleb128 0x1c
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 66


 2320 07d0 1B060000 		.4byte	.LASF67
 2321 07d4 01       		.byte	0x1
 2322 07d5 A202     		.2byte	0x2a2
 2323 07d7 82030000 		.4byte	0x382
 2324 07db 02       		.uleb128 0x2
 2325 07dc 91       		.byte	0x91
 2326 07dd 6C       		.sleb128 -20
 2327 07de 1C       		.uleb128 0x1c
 2328 07df AE040000 		.4byte	.LASF88
 2329 07e3 01       		.byte	0x1
 2330 07e4 A302     		.2byte	0x2a3
 2331 07e6 B9020000 		.4byte	0x2b9
 2332 07ea 02       		.uleb128 0x2
 2333 07eb 91       		.byte	0x91
 2334 07ec 68       		.sleb128 -24
 2335 07ed 1C       		.uleb128 0x1c
 2336 07ee 8A030000 		.4byte	.LASF74
 2337 07f2 01       		.byte	0x1
 2338 07f3 A302     		.2byte	0x2a3
 2339 07f5 83000000 		.4byte	0x83
 2340 07f9 02       		.uleb128 0x2
 2341 07fa 91       		.byte	0x91
 2342 07fb 64       		.sleb128 -28
 2343 07fc 1A       		.uleb128 0x1a
 2344 07fd 20050000 		.4byte	.LASF77
 2345 0801 01       		.byte	0x1
 2346 0802 A502     		.2byte	0x2a5
 2347 0804 83000000 		.4byte	0x83
 2348 0808 02       		.uleb128 0x2
 2349 0809 91       		.byte	0x91
 2350 080a 74       		.sleb128 -12
 2351 080b 00       		.byte	0
 2352 080c 1D       		.uleb128 0x1d
 2353 080d C1000000 		.4byte	.LASF89
 2354 0811 01       		.byte	0x1
 2355 0812 D002     		.2byte	0x2d0
 2356 0814 00000000 		.4byte	.LFB14
 2357 0818 64000000 		.4byte	.LFE14-.LFB14
 2358 081c 01       		.uleb128 0x1
 2359 081d 9C       		.byte	0x9c
 2360 081e 6E080000 		.4byte	0x86e
 2361 0822 1C       		.uleb128 0x1c
 2362 0823 1B060000 		.4byte	.LASF67
 2363 0827 01       		.byte	0x1
 2364 0828 D002     		.2byte	0x2d0
 2365 082a 82030000 		.4byte	0x382
 2366 082e 02       		.uleb128 0x2
 2367 082f 91       		.byte	0x91
 2368 0830 6C       		.sleb128 -20
 2369 0831 1C       		.uleb128 0x1c
 2370 0832 AE040000 		.4byte	.LASF88
 2371 0836 01       		.byte	0x1
 2372 0837 D102     		.2byte	0x2d1
 2373 0839 B9020000 		.4byte	0x2b9
 2374 083d 02       		.uleb128 0x2
 2375 083e 91       		.byte	0x91
 2376 083f 68       		.sleb128 -24
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 67


 2377 0840 1C       		.uleb128 0x1c
 2378 0841 8A030000 		.4byte	.LASF74
 2379 0845 01       		.byte	0x1
 2380 0846 D102     		.2byte	0x2d1
 2381 0848 83000000 		.4byte	0x83
 2382 084c 02       		.uleb128 0x2
 2383 084d 91       		.byte	0x91
 2384 084e 64       		.sleb128 -28
 2385 084f 1A       		.uleb128 0x1a
 2386 0850 20050000 		.4byte	.LASF77
 2387 0854 01       		.byte	0x1
 2388 0855 D302     		.2byte	0x2d3
 2389 0857 83000000 		.4byte	0x83
 2390 085b 02       		.uleb128 0x2
 2391 085c 91       		.byte	0x91
 2392 085d 74       		.sleb128 -12
 2393 085e 1A       		.uleb128 0x1a
 2394 085f A1010000 		.4byte	.LASF90
 2395 0863 01       		.byte	0x1
 2396 0864 D402     		.2byte	0x2d4
 2397 0866 83000000 		.4byte	0x83
 2398 086a 02       		.uleb128 0x2
 2399 086b 91       		.byte	0x91
 2400 086c 70       		.sleb128 -16
 2401 086d 00       		.byte	0
 2402 086e 1D       		.uleb128 0x1d
 2403 086f E6030000 		.4byte	.LASF91
 2404 0873 01       		.byte	0x1
 2405 0874 9904     		.2byte	0x499
 2406 0876 00000000 		.4byte	.LFB15
 2407 087a 6C000000 		.4byte	.LFE15-.LFB15
 2408 087e 01       		.uleb128 0x1
 2409 087f 9C       		.byte	0x9c
 2410 0880 D0080000 		.4byte	0x8d0
 2411 0884 1C       		.uleb128 0x1c
 2412 0885 B3030000 		.4byte	.LASF62
 2413 0889 01       		.byte	0x1
 2414 088a 9904     		.2byte	0x499
 2415 088c 83000000 		.4byte	0x83
 2416 0890 02       		.uleb128 0x2
 2417 0891 91       		.byte	0x91
 2418 0892 5C       		.sleb128 -36
 2419 0893 1C       		.uleb128 0x1c
 2420 0894 50010000 		.4byte	.LASF63
 2421 0898 01       		.byte	0x1
 2422 0899 9904     		.2byte	0x499
 2423 089b 83000000 		.4byte	0x83
 2424 089f 02       		.uleb128 0x2
 2425 08a0 91       		.byte	0x91
 2426 08a1 58       		.sleb128 -40
 2427 08a2 1A       		.uleb128 0x1a
 2428 08a3 DC030000 		.4byte	.LASF65
 2429 08a7 01       		.byte	0x1
 2430 08a8 9B04     		.2byte	0x49b
 2431 08aa F8030000 		.4byte	0x3f8
 2432 08ae 02       		.uleb128 0x2
 2433 08af 91       		.byte	0x91
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 68


 2434 08b0 6C       		.sleb128 -20
 2435 08b1 1A       		.uleb128 0x1a
 2436 08b2 2C060000 		.4byte	.LASF66
 2437 08b6 01       		.byte	0x1
 2438 08b7 9C04     		.2byte	0x49c
 2439 08b9 B9020000 		.4byte	0x2b9
 2440 08bd 02       		.uleb128 0x2
 2441 08be 91       		.byte	0x91
 2442 08bf 68       		.sleb128 -24
 2443 08c0 1A       		.uleb128 0x1a
 2444 08c1 1B060000 		.4byte	.LASF67
 2445 08c5 01       		.byte	0x1
 2446 08c6 9D04     		.2byte	0x49d
 2447 08c8 82030000 		.4byte	0x382
 2448 08cc 02       		.uleb128 0x2
 2449 08cd 91       		.byte	0x91
 2450 08ce 64       		.sleb128 -28
 2451 08cf 00       		.byte	0
 2452 08d0 1D       		.uleb128 0x1d
 2453 08d1 2E040000 		.4byte	.LASF92
 2454 08d5 01       		.byte	0x1
 2455 08d6 C404     		.2byte	0x4c4
 2456 08d8 00000000 		.4byte	.LFB16
 2457 08dc 22000000 		.4byte	.LFE16-.LFB16
 2458 08e0 01       		.uleb128 0x1
 2459 08e1 9C       		.byte	0x9c
 2460 08e2 14090000 		.4byte	0x914
 2461 08e6 1C       		.uleb128 0x1c
 2462 08e7 1B060000 		.4byte	.LASF67
 2463 08eb 01       		.byte	0x1
 2464 08ec C404     		.2byte	0x4c4
 2465 08ee 82030000 		.4byte	0x382
 2466 08f2 02       		.uleb128 0x2
 2467 08f3 91       		.byte	0x91
 2468 08f4 74       		.sleb128 -12
 2469 08f5 1C       		.uleb128 0x1c
 2470 08f6 AE040000 		.4byte	.LASF88
 2471 08fa 01       		.byte	0x1
 2472 08fb C504     		.2byte	0x4c5
 2473 08fd B9020000 		.4byte	0x2b9
 2474 0901 02       		.uleb128 0x2
 2475 0902 91       		.byte	0x91
 2476 0903 70       		.sleb128 -16
 2477 0904 1C       		.uleb128 0x1c
 2478 0905 8A030000 		.4byte	.LASF74
 2479 0909 01       		.byte	0x1
 2480 090a C504     		.2byte	0x4c5
 2481 090c 83000000 		.4byte	0x83
 2482 0910 02       		.uleb128 0x2
 2483 0911 91       		.byte	0x91
 2484 0912 6C       		.sleb128 -20
 2485 0913 00       		.byte	0
 2486 0914 1F       		.uleb128 0x1f
 2487 0915 D0020000 		.4byte	.LASF93
 2488 0919 01       		.byte	0x1
 2489 091a 4E05     		.2byte	0x54e
 2490 091c 83000000 		.4byte	0x83
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 69


 2491 0920 00000000 		.4byte	.LFB17
 2492 0924 36000000 		.4byte	.LFE17-.LFB17
 2493 0928 01       		.uleb128 0x1
 2494 0929 9C       		.byte	0x9c
 2495 092a 78090000 		.4byte	0x978
 2496 092e 1C       		.uleb128 0x1c
 2497 092f 14010000 		.4byte	.LASF94
 2498 0933 01       		.byte	0x1
 2499 0934 4E05     		.2byte	0x54e
 2500 0936 83000000 		.4byte	0x83
 2501 093a 02       		.uleb128 0x2
 2502 093b 91       		.byte	0x91
 2503 093c 6C       		.sleb128 -20
 2504 093d 1C       		.uleb128 0x1c
 2505 093e 36060000 		.4byte	.LASF95
 2506 0942 01       		.byte	0x1
 2507 0943 4E05     		.2byte	0x54e
 2508 0945 83000000 		.4byte	0x83
 2509 0949 02       		.uleb128 0x2
 2510 094a 91       		.byte	0x91
 2511 094b 68       		.sleb128 -24
 2512 094c 20       		.uleb128 0x20
 2513 094d 6E00     		.ascii	"n\000"
 2514 094f 01       		.byte	0x1
 2515 0950 4E05     		.2byte	0x54e
 2516 0952 83000000 		.4byte	0x83
 2517 0956 02       		.uleb128 0x2
 2518 0957 91       		.byte	0x91
 2519 0958 64       		.sleb128 -28
 2520 0959 1C       		.uleb128 0x1c
 2521 095a 4A010000 		.4byte	.LASF96
 2522 095e 01       		.byte	0x1
 2523 095f 4E05     		.2byte	0x54e
 2524 0961 83000000 		.4byte	0x83
 2525 0965 02       		.uleb128 0x2
 2526 0966 91       		.byte	0x91
 2527 0967 60       		.sleb128 -32
 2528 0968 1A       		.uleb128 0x1a
 2529 0969 BC030000 		.4byte	.LASF97
 2530 096d 01       		.byte	0x1
 2531 096e 5005     		.2byte	0x550
 2532 0970 83000000 		.4byte	0x83
 2533 0974 02       		.uleb128 0x2
 2534 0975 91       		.byte	0x91
 2535 0976 74       		.sleb128 -12
 2536 0977 00       		.byte	0
 2537 0978 21       		.uleb128 0x21
 2538 0979 ED040000 		.4byte	.LASF101
 2539 097d 04       		.byte	0x4
 2540 097e 8203     		.2byte	0x382
 2541 0980 84090000 		.4byte	0x984
 2542 0984 17       		.uleb128 0x17
 2543 0985 F8020000 		.4byte	0x2f8
 2544 0989 00       		.byte	0
 2545              		.section	.debug_abbrev,"",%progbits
 2546              	.Ldebug_abbrev0:
 2547 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 70


 2548 0001 11       		.uleb128 0x11
 2549 0002 01       		.byte	0x1
 2550 0003 25       		.uleb128 0x25
 2551 0004 0E       		.uleb128 0xe
 2552 0005 13       		.uleb128 0x13
 2553 0006 0B       		.uleb128 0xb
 2554 0007 03       		.uleb128 0x3
 2555 0008 0E       		.uleb128 0xe
 2556 0009 1B       		.uleb128 0x1b
 2557 000a 0E       		.uleb128 0xe
 2558 000b 55       		.uleb128 0x55
 2559 000c 17       		.uleb128 0x17
 2560 000d 11       		.uleb128 0x11
 2561 000e 01       		.uleb128 0x1
 2562 000f 10       		.uleb128 0x10
 2563 0010 17       		.uleb128 0x17
 2564 0011 00       		.byte	0
 2565 0012 00       		.byte	0
 2566 0013 02       		.uleb128 0x2
 2567 0014 24       		.uleb128 0x24
 2568 0015 00       		.byte	0
 2569 0016 0B       		.uleb128 0xb
 2570 0017 0B       		.uleb128 0xb
 2571 0018 3E       		.uleb128 0x3e
 2572 0019 0B       		.uleb128 0xb
 2573 001a 03       		.uleb128 0x3
 2574 001b 0E       		.uleb128 0xe
 2575 001c 00       		.byte	0
 2576 001d 00       		.byte	0
 2577 001e 03       		.uleb128 0x3
 2578 001f 24       		.uleb128 0x24
 2579 0020 00       		.byte	0
 2580 0021 0B       		.uleb128 0xb
 2581 0022 0B       		.uleb128 0xb
 2582 0023 3E       		.uleb128 0x3e
 2583 0024 0B       		.uleb128 0xb
 2584 0025 03       		.uleb128 0x3
 2585 0026 08       		.uleb128 0x8
 2586 0027 00       		.byte	0
 2587 0028 00       		.byte	0
 2588 0029 04       		.uleb128 0x4
 2589 002a 16       		.uleb128 0x16
 2590 002b 00       		.byte	0
 2591 002c 03       		.uleb128 0x3
 2592 002d 0E       		.uleb128 0xe
 2593 002e 3A       		.uleb128 0x3a
 2594 002f 0B       		.uleb128 0xb
 2595 0030 3B       		.uleb128 0x3b
 2596 0031 05       		.uleb128 0x5
 2597 0032 49       		.uleb128 0x49
 2598 0033 13       		.uleb128 0x13
 2599 0034 00       		.byte	0
 2600 0035 00       		.byte	0
 2601 0036 05       		.uleb128 0x5
 2602 0037 0F       		.uleb128 0xf
 2603 0038 00       		.byte	0
 2604 0039 0B       		.uleb128 0xb
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 71


 2605 003a 0B       		.uleb128 0xb
 2606 003b 00       		.byte	0
 2607 003c 00       		.byte	0
 2608 003d 06       		.uleb128 0x6
 2609 003e 16       		.uleb128 0x16
 2610 003f 00       		.byte	0
 2611 0040 03       		.uleb128 0x3
 2612 0041 0E       		.uleb128 0xe
 2613 0042 3A       		.uleb128 0x3a
 2614 0043 0B       		.uleb128 0xb
 2615 0044 3B       		.uleb128 0x3b
 2616 0045 0B       		.uleb128 0xb
 2617 0046 49       		.uleb128 0x49
 2618 0047 13       		.uleb128 0x13
 2619 0048 00       		.byte	0
 2620 0049 00       		.byte	0
 2621 004a 07       		.uleb128 0x7
 2622 004b 04       		.uleb128 0x4
 2623 004c 01       		.byte	0x1
 2624 004d 0B       		.uleb128 0xb
 2625 004e 0B       		.uleb128 0xb
 2626 004f 3A       		.uleb128 0x3a
 2627 0050 0B       		.uleb128 0xb
 2628 0051 3B       		.uleb128 0x3b
 2629 0052 0B       		.uleb128 0xb
 2630 0053 01       		.uleb128 0x1
 2631 0054 13       		.uleb128 0x13
 2632 0055 00       		.byte	0
 2633 0056 00       		.byte	0
 2634 0057 08       		.uleb128 0x8
 2635 0058 28       		.uleb128 0x28
 2636 0059 00       		.byte	0
 2637 005a 03       		.uleb128 0x3
 2638 005b 0E       		.uleb128 0xe
 2639 005c 1C       		.uleb128 0x1c
 2640 005d 0D       		.uleb128 0xd
 2641 005e 00       		.byte	0
 2642 005f 00       		.byte	0
 2643 0060 09       		.uleb128 0x9
 2644 0061 13       		.uleb128 0x13
 2645 0062 01       		.byte	0x1
 2646 0063 0B       		.uleb128 0xb
 2647 0064 0B       		.uleb128 0xb
 2648 0065 3A       		.uleb128 0x3a
 2649 0066 0B       		.uleb128 0xb
 2650 0067 3B       		.uleb128 0x3b
 2651 0068 0B       		.uleb128 0xb
 2652 0069 01       		.uleb128 0x1
 2653 006a 13       		.uleb128 0x13
 2654 006b 00       		.byte	0
 2655 006c 00       		.byte	0
 2656 006d 0A       		.uleb128 0xa
 2657 006e 0D       		.uleb128 0xd
 2658 006f 00       		.byte	0
 2659 0070 03       		.uleb128 0x3
 2660 0071 0E       		.uleb128 0xe
 2661 0072 3A       		.uleb128 0x3a
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 72


 2662 0073 0B       		.uleb128 0xb
 2663 0074 3B       		.uleb128 0x3b
 2664 0075 0B       		.uleb128 0xb
 2665 0076 49       		.uleb128 0x49
 2666 0077 13       		.uleb128 0x13
 2667 0078 38       		.uleb128 0x38
 2668 0079 0B       		.uleb128 0xb
 2669 007a 00       		.byte	0
 2670 007b 00       		.byte	0
 2671 007c 0B       		.uleb128 0xb
 2672 007d 01       		.uleb128 0x1
 2673 007e 01       		.byte	0x1
 2674 007f 49       		.uleb128 0x49
 2675 0080 13       		.uleb128 0x13
 2676 0081 01       		.uleb128 0x1
 2677 0082 13       		.uleb128 0x13
 2678 0083 00       		.byte	0
 2679 0084 00       		.byte	0
 2680 0085 0C       		.uleb128 0xc
 2681 0086 21       		.uleb128 0x21
 2682 0087 00       		.byte	0
 2683 0088 49       		.uleb128 0x49
 2684 0089 13       		.uleb128 0x13
 2685 008a 2F       		.uleb128 0x2f
 2686 008b 0B       		.uleb128 0xb
 2687 008c 00       		.byte	0
 2688 008d 00       		.byte	0
 2689 008e 0D       		.uleb128 0xd
 2690 008f 13       		.uleb128 0x13
 2691 0090 01       		.byte	0x1
 2692 0091 0B       		.uleb128 0xb
 2693 0092 0B       		.uleb128 0xb
 2694 0093 3A       		.uleb128 0x3a
 2695 0094 0B       		.uleb128 0xb
 2696 0095 3B       		.uleb128 0x3b
 2697 0096 05       		.uleb128 0x5
 2698 0097 01       		.uleb128 0x1
 2699 0098 13       		.uleb128 0x13
 2700 0099 00       		.byte	0
 2701 009a 00       		.byte	0
 2702 009b 0E       		.uleb128 0xe
 2703 009c 0D       		.uleb128 0xd
 2704 009d 00       		.byte	0
 2705 009e 03       		.uleb128 0x3
 2706 009f 08       		.uleb128 0x8
 2707 00a0 3A       		.uleb128 0x3a
 2708 00a1 0B       		.uleb128 0xb
 2709 00a2 3B       		.uleb128 0x3b
 2710 00a3 05       		.uleb128 0x5
 2711 00a4 49       		.uleb128 0x49
 2712 00a5 13       		.uleb128 0x13
 2713 00a6 38       		.uleb128 0x38
 2714 00a7 0B       		.uleb128 0xb
 2715 00a8 00       		.byte	0
 2716 00a9 00       		.byte	0
 2717 00aa 0F       		.uleb128 0xf
 2718 00ab 0D       		.uleb128 0xd
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 73


 2719 00ac 00       		.byte	0
 2720 00ad 03       		.uleb128 0x3
 2721 00ae 0E       		.uleb128 0xe
 2722 00af 3A       		.uleb128 0x3a
 2723 00b0 0B       		.uleb128 0xb
 2724 00b1 3B       		.uleb128 0x3b
 2725 00b2 05       		.uleb128 0x5
 2726 00b3 49       		.uleb128 0x49
 2727 00b4 13       		.uleb128 0x13
 2728 00b5 38       		.uleb128 0x38
 2729 00b6 0B       		.uleb128 0xb
 2730 00b7 00       		.byte	0
 2731 00b8 00       		.byte	0
 2732 00b9 10       		.uleb128 0x10
 2733 00ba 0F       		.uleb128 0xf
 2734 00bb 00       		.byte	0
 2735 00bc 0B       		.uleb128 0xb
 2736 00bd 0B       		.uleb128 0xb
 2737 00be 49       		.uleb128 0x49
 2738 00bf 13       		.uleb128 0x13
 2739 00c0 00       		.byte	0
 2740 00c1 00       		.byte	0
 2741 00c2 11       		.uleb128 0x11
 2742 00c3 26       		.uleb128 0x26
 2743 00c4 00       		.byte	0
 2744 00c5 00       		.byte	0
 2745 00c6 00       		.byte	0
 2746 00c7 12       		.uleb128 0x12
 2747 00c8 17       		.uleb128 0x17
 2748 00c9 01       		.byte	0x1
 2749 00ca 0B       		.uleb128 0xb
 2750 00cb 0B       		.uleb128 0xb
 2751 00cc 3A       		.uleb128 0x3a
 2752 00cd 0B       		.uleb128 0xb
 2753 00ce 3B       		.uleb128 0x3b
 2754 00cf 05       		.uleb128 0x5
 2755 00d0 01       		.uleb128 0x1
 2756 00d1 13       		.uleb128 0x13
 2757 00d2 00       		.byte	0
 2758 00d3 00       		.byte	0
 2759 00d4 13       		.uleb128 0x13
 2760 00d5 0D       		.uleb128 0xd
 2761 00d6 00       		.byte	0
 2762 00d7 03       		.uleb128 0x3
 2763 00d8 08       		.uleb128 0x8
 2764 00d9 3A       		.uleb128 0x3a
 2765 00da 0B       		.uleb128 0xb
 2766 00db 3B       		.uleb128 0x3b
 2767 00dc 05       		.uleb128 0x5
 2768 00dd 49       		.uleb128 0x49
 2769 00de 13       		.uleb128 0x13
 2770 00df 00       		.byte	0
 2771 00e0 00       		.byte	0
 2772 00e1 14       		.uleb128 0x14
 2773 00e2 0D       		.uleb128 0xd
 2774 00e3 00       		.byte	0
 2775 00e4 03       		.uleb128 0x3
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 74


 2776 00e5 0E       		.uleb128 0xe
 2777 00e6 3A       		.uleb128 0x3a
 2778 00e7 0B       		.uleb128 0xb
 2779 00e8 3B       		.uleb128 0x3b
 2780 00e9 05       		.uleb128 0x5
 2781 00ea 49       		.uleb128 0x49
 2782 00eb 13       		.uleb128 0x13
 2783 00ec 00       		.byte	0
 2784 00ed 00       		.byte	0
 2785 00ee 15       		.uleb128 0x15
 2786 00ef 2E       		.uleb128 0x2e
 2787 00f0 01       		.byte	0x1
 2788 00f1 3F       		.uleb128 0x3f
 2789 00f2 19       		.uleb128 0x19
 2790 00f3 03       		.uleb128 0x3
 2791 00f4 0E       		.uleb128 0xe
 2792 00f5 3A       		.uleb128 0x3a
 2793 00f6 0B       		.uleb128 0xb
 2794 00f7 3B       		.uleb128 0x3b
 2795 00f8 0B       		.uleb128 0xb
 2796 00f9 27       		.uleb128 0x27
 2797 00fa 19       		.uleb128 0x19
 2798 00fb 11       		.uleb128 0x11
 2799 00fc 01       		.uleb128 0x1
 2800 00fd 12       		.uleb128 0x12
 2801 00fe 06       		.uleb128 0x6
 2802 00ff 40       		.uleb128 0x40
 2803 0100 18       		.uleb128 0x18
 2804 0101 9642     		.uleb128 0x2116
 2805 0103 19       		.uleb128 0x19
 2806 0104 01       		.uleb128 0x1
 2807 0105 13       		.uleb128 0x13
 2808 0106 00       		.byte	0
 2809 0107 00       		.byte	0
 2810 0108 16       		.uleb128 0x16
 2811 0109 34       		.uleb128 0x34
 2812 010a 00       		.byte	0
 2813 010b 03       		.uleb128 0x3
 2814 010c 0E       		.uleb128 0xe
 2815 010d 3A       		.uleb128 0x3a
 2816 010e 0B       		.uleb128 0xb
 2817 010f 3B       		.uleb128 0x3b
 2818 0110 0B       		.uleb128 0xb
 2819 0111 49       		.uleb128 0x49
 2820 0112 13       		.uleb128 0x13
 2821 0113 02       		.uleb128 0x2
 2822 0114 18       		.uleb128 0x18
 2823 0115 00       		.byte	0
 2824 0116 00       		.byte	0
 2825 0117 17       		.uleb128 0x17
 2826 0118 26       		.uleb128 0x26
 2827 0119 00       		.byte	0
 2828 011a 49       		.uleb128 0x49
 2829 011b 13       		.uleb128 0x13
 2830 011c 00       		.byte	0
 2831 011d 00       		.byte	0
 2832 011e 18       		.uleb128 0x18
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 75


 2833 011f 2E       		.uleb128 0x2e
 2834 0120 01       		.byte	0x1
 2835 0121 3F       		.uleb128 0x3f
 2836 0122 19       		.uleb128 0x19
 2837 0123 03       		.uleb128 0x3
 2838 0124 0E       		.uleb128 0xe
 2839 0125 3A       		.uleb128 0x3a
 2840 0126 0B       		.uleb128 0xb
 2841 0127 3B       		.uleb128 0x3b
 2842 0128 0B       		.uleb128 0xb
 2843 0129 27       		.uleb128 0x27
 2844 012a 19       		.uleb128 0x19
 2845 012b 49       		.uleb128 0x49
 2846 012c 13       		.uleb128 0x13
 2847 012d 11       		.uleb128 0x11
 2848 012e 01       		.uleb128 0x1
 2849 012f 12       		.uleb128 0x12
 2850 0130 06       		.uleb128 0x6
 2851 0131 40       		.uleb128 0x40
 2852 0132 18       		.uleb128 0x18
 2853 0133 9642     		.uleb128 0x2116
 2854 0135 19       		.uleb128 0x19
 2855 0136 01       		.uleb128 0x1
 2856 0137 13       		.uleb128 0x13
 2857 0138 00       		.byte	0
 2858 0139 00       		.byte	0
 2859 013a 19       		.uleb128 0x19
 2860 013b 05       		.uleb128 0x5
 2861 013c 00       		.byte	0
 2862 013d 03       		.uleb128 0x3
 2863 013e 0E       		.uleb128 0xe
 2864 013f 3A       		.uleb128 0x3a
 2865 0140 0B       		.uleb128 0xb
 2866 0141 3B       		.uleb128 0x3b
 2867 0142 0B       		.uleb128 0xb
 2868 0143 49       		.uleb128 0x49
 2869 0144 13       		.uleb128 0x13
 2870 0145 02       		.uleb128 0x2
 2871 0146 18       		.uleb128 0x18
 2872 0147 00       		.byte	0
 2873 0148 00       		.byte	0
 2874 0149 1A       		.uleb128 0x1a
 2875 014a 34       		.uleb128 0x34
 2876 014b 00       		.byte	0
 2877 014c 03       		.uleb128 0x3
 2878 014d 0E       		.uleb128 0xe
 2879 014e 3A       		.uleb128 0x3a
 2880 014f 0B       		.uleb128 0xb
 2881 0150 3B       		.uleb128 0x3b
 2882 0151 05       		.uleb128 0x5
 2883 0152 49       		.uleb128 0x49
 2884 0153 13       		.uleb128 0x13
 2885 0154 02       		.uleb128 0x2
 2886 0155 18       		.uleb128 0x18
 2887 0156 00       		.byte	0
 2888 0157 00       		.byte	0
 2889 0158 1B       		.uleb128 0x1b
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 76


 2890 0159 2E       		.uleb128 0x2e
 2891 015a 01       		.byte	0x1
 2892 015b 3F       		.uleb128 0x3f
 2893 015c 19       		.uleb128 0x19
 2894 015d 03       		.uleb128 0x3
 2895 015e 0E       		.uleb128 0xe
 2896 015f 3A       		.uleb128 0x3a
 2897 0160 0B       		.uleb128 0xb
 2898 0161 3B       		.uleb128 0x3b
 2899 0162 05       		.uleb128 0x5
 2900 0163 27       		.uleb128 0x27
 2901 0164 19       		.uleb128 0x19
 2902 0165 49       		.uleb128 0x49
 2903 0166 13       		.uleb128 0x13
 2904 0167 11       		.uleb128 0x11
 2905 0168 01       		.uleb128 0x1
 2906 0169 12       		.uleb128 0x12
 2907 016a 06       		.uleb128 0x6
 2908 016b 40       		.uleb128 0x40
 2909 016c 18       		.uleb128 0x18
 2910 016d 9642     		.uleb128 0x2116
 2911 016f 19       		.uleb128 0x19
 2912 0170 01       		.uleb128 0x1
 2913 0171 13       		.uleb128 0x13
 2914 0172 00       		.byte	0
 2915 0173 00       		.byte	0
 2916 0174 1C       		.uleb128 0x1c
 2917 0175 05       		.uleb128 0x5
 2918 0176 00       		.byte	0
 2919 0177 03       		.uleb128 0x3
 2920 0178 0E       		.uleb128 0xe
 2921 0179 3A       		.uleb128 0x3a
 2922 017a 0B       		.uleb128 0xb
 2923 017b 3B       		.uleb128 0x3b
 2924 017c 05       		.uleb128 0x5
 2925 017d 49       		.uleb128 0x49
 2926 017e 13       		.uleb128 0x13
 2927 017f 02       		.uleb128 0x2
 2928 0180 18       		.uleb128 0x18
 2929 0181 00       		.byte	0
 2930 0182 00       		.byte	0
 2931 0183 1D       		.uleb128 0x1d
 2932 0184 2E       		.uleb128 0x2e
 2933 0185 01       		.byte	0x1
 2934 0186 3F       		.uleb128 0x3f
 2935 0187 19       		.uleb128 0x19
 2936 0188 03       		.uleb128 0x3
 2937 0189 0E       		.uleb128 0xe
 2938 018a 3A       		.uleb128 0x3a
 2939 018b 0B       		.uleb128 0xb
 2940 018c 3B       		.uleb128 0x3b
 2941 018d 05       		.uleb128 0x5
 2942 018e 27       		.uleb128 0x27
 2943 018f 19       		.uleb128 0x19
 2944 0190 11       		.uleb128 0x11
 2945 0191 01       		.uleb128 0x1
 2946 0192 12       		.uleb128 0x12
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 77


 2947 0193 06       		.uleb128 0x6
 2948 0194 40       		.uleb128 0x40
 2949 0195 18       		.uleb128 0x18
 2950 0196 9642     		.uleb128 0x2116
 2951 0198 19       		.uleb128 0x19
 2952 0199 01       		.uleb128 0x1
 2953 019a 13       		.uleb128 0x13
 2954 019b 00       		.byte	0
 2955 019c 00       		.byte	0
 2956 019d 1E       		.uleb128 0x1e
 2957 019e 2E       		.uleb128 0x2e
 2958 019f 01       		.byte	0x1
 2959 01a0 3F       		.uleb128 0x3f
 2960 01a1 19       		.uleb128 0x19
 2961 01a2 03       		.uleb128 0x3
 2962 01a3 0E       		.uleb128 0xe
 2963 01a4 3A       		.uleb128 0x3a
 2964 01a5 0B       		.uleb128 0xb
 2965 01a6 3B       		.uleb128 0x3b
 2966 01a7 05       		.uleb128 0x5
 2967 01a8 27       		.uleb128 0x27
 2968 01a9 19       		.uleb128 0x19
 2969 01aa 11       		.uleb128 0x11
 2970 01ab 01       		.uleb128 0x1
 2971 01ac 12       		.uleb128 0x12
 2972 01ad 06       		.uleb128 0x6
 2973 01ae 40       		.uleb128 0x40
 2974 01af 18       		.uleb128 0x18
 2975 01b0 9742     		.uleb128 0x2117
 2976 01b2 19       		.uleb128 0x19
 2977 01b3 01       		.uleb128 0x1
 2978 01b4 13       		.uleb128 0x13
 2979 01b5 00       		.byte	0
 2980 01b6 00       		.byte	0
 2981 01b7 1F       		.uleb128 0x1f
 2982 01b8 2E       		.uleb128 0x2e
 2983 01b9 01       		.byte	0x1
 2984 01ba 3F       		.uleb128 0x3f
 2985 01bb 19       		.uleb128 0x19
 2986 01bc 03       		.uleb128 0x3
 2987 01bd 0E       		.uleb128 0xe
 2988 01be 3A       		.uleb128 0x3a
 2989 01bf 0B       		.uleb128 0xb
 2990 01c0 3B       		.uleb128 0x3b
 2991 01c1 05       		.uleb128 0x5
 2992 01c2 27       		.uleb128 0x27
 2993 01c3 19       		.uleb128 0x19
 2994 01c4 49       		.uleb128 0x49
 2995 01c5 13       		.uleb128 0x13
 2996 01c6 11       		.uleb128 0x11
 2997 01c7 01       		.uleb128 0x1
 2998 01c8 12       		.uleb128 0x12
 2999 01c9 06       		.uleb128 0x6
 3000 01ca 40       		.uleb128 0x40
 3001 01cb 18       		.uleb128 0x18
 3002 01cc 9742     		.uleb128 0x2117
 3003 01ce 19       		.uleb128 0x19
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 78


 3004 01cf 01       		.uleb128 0x1
 3005 01d0 13       		.uleb128 0x13
 3006 01d1 00       		.byte	0
 3007 01d2 00       		.byte	0
 3008 01d3 20       		.uleb128 0x20
 3009 01d4 05       		.uleb128 0x5
 3010 01d5 00       		.byte	0
 3011 01d6 03       		.uleb128 0x3
 3012 01d7 08       		.uleb128 0x8
 3013 01d8 3A       		.uleb128 0x3a
 3014 01d9 0B       		.uleb128 0xb
 3015 01da 3B       		.uleb128 0x3b
 3016 01db 05       		.uleb128 0x5
 3017 01dc 49       		.uleb128 0x49
 3018 01dd 13       		.uleb128 0x13
 3019 01de 02       		.uleb128 0x2
 3020 01df 18       		.uleb128 0x18
 3021 01e0 00       		.byte	0
 3022 01e1 00       		.byte	0
 3023 01e2 21       		.uleb128 0x21
 3024 01e3 34       		.uleb128 0x34
 3025 01e4 00       		.byte	0
 3026 01e5 03       		.uleb128 0x3
 3027 01e6 0E       		.uleb128 0xe
 3028 01e7 3A       		.uleb128 0x3a
 3029 01e8 0B       		.uleb128 0xb
 3030 01e9 3B       		.uleb128 0x3b
 3031 01ea 05       		.uleb128 0x5
 3032 01eb 49       		.uleb128 0x49
 3033 01ec 13       		.uleb128 0x13
 3034 01ed 3F       		.uleb128 0x3f
 3035 01ee 19       		.uleb128 0x19
 3036 01ef 3C       		.uleb128 0x3c
 3037 01f0 19       		.uleb128 0x19
 3038 01f1 00       		.byte	0
 3039 01f2 00       		.byte	0
 3040 01f3 00       		.byte	0
 3041              		.section	.debug_aranges,"",%progbits
 3042 0000 9C000000 		.4byte	0x9c
 3043 0004 0200     		.2byte	0x2
 3044 0006 00000000 		.4byte	.Ldebug_info0
 3045 000a 04       		.byte	0x4
 3046 000b 00       		.byte	0
 3047 000c 0000     		.2byte	0
 3048 000e 0000     		.2byte	0
 3049 0010 00000000 		.4byte	.LFB1
 3050 0014 90000000 		.4byte	.LFE1-.LFB1
 3051 0018 00000000 		.4byte	.LFB2
 3052 001c 34000000 		.4byte	.LFE2-.LFB2
 3053 0020 00000000 		.4byte	.LFB3
 3054 0024 54000000 		.4byte	.LFE3-.LFB3
 3055 0028 00000000 		.4byte	.LFB4
 3056 002c 68000000 		.4byte	.LFE4-.LFB4
 3057 0030 00000000 		.4byte	.LFB5
 3058 0034 5A010000 		.4byte	.LFE5-.LFB5
 3059 0038 00000000 		.4byte	.LFB6
 3060 003c 24000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 79


 3061 0040 00000000 		.4byte	.LFB7
 3062 0044 44000000 		.4byte	.LFE7-.LFB7
 3063 0048 00000000 		.4byte	.LFB8
 3064 004c 54000000 		.4byte	.LFE8-.LFB8
 3065 0050 00000000 		.4byte	.LFB9
 3066 0054 30000000 		.4byte	.LFE9-.LFB9
 3067 0058 00000000 		.4byte	.LFB10
 3068 005c 44000000 		.4byte	.LFE10-.LFB10
 3069 0060 00000000 		.4byte	.LFB11
 3070 0064 6C000000 		.4byte	.LFE11-.LFB11
 3071 0068 00000000 		.4byte	.LFB12
 3072 006c 6C000000 		.4byte	.LFE12-.LFB12
 3073 0070 00000000 		.4byte	.LFB13
 3074 0074 3A000000 		.4byte	.LFE13-.LFB13
 3075 0078 00000000 		.4byte	.LFB14
 3076 007c 64000000 		.4byte	.LFE14-.LFB14
 3077 0080 00000000 		.4byte	.LFB15
 3078 0084 6C000000 		.4byte	.LFE15-.LFB15
 3079 0088 00000000 		.4byte	.LFB16
 3080 008c 22000000 		.4byte	.LFE16-.LFB16
 3081 0090 00000000 		.4byte	.LFB17
 3082 0094 36000000 		.4byte	.LFE17-.LFB17
 3083 0098 00000000 		.4byte	0
 3084 009c 00000000 		.4byte	0
 3085              		.section	.debug_ranges,"",%progbits
 3086              	.Ldebug_ranges0:
 3087 0000 00000000 		.4byte	.LFB1
 3088 0004 90000000 		.4byte	.LFE1
 3089 0008 00000000 		.4byte	.LFB2
 3090 000c 34000000 		.4byte	.LFE2
 3091 0010 00000000 		.4byte	.LFB3
 3092 0014 54000000 		.4byte	.LFE3
 3093 0018 00000000 		.4byte	.LFB4
 3094 001c 68000000 		.4byte	.LFE4
 3095 0020 00000000 		.4byte	.LFB5
 3096 0024 5A010000 		.4byte	.LFE5
 3097 0028 00000000 		.4byte	.LFB6
 3098 002c 24000000 		.4byte	.LFE6
 3099 0030 00000000 		.4byte	.LFB7
 3100 0034 44000000 		.4byte	.LFE7
 3101 0038 00000000 		.4byte	.LFB8
 3102 003c 54000000 		.4byte	.LFE8
 3103 0040 00000000 		.4byte	.LFB9
 3104 0044 30000000 		.4byte	.LFE9
 3105 0048 00000000 		.4byte	.LFB10
 3106 004c 44000000 		.4byte	.LFE10
 3107 0050 00000000 		.4byte	.LFB11
 3108 0054 6C000000 		.4byte	.LFE11
 3109 0058 00000000 		.4byte	.LFB12
 3110 005c 6C000000 		.4byte	.LFE12
 3111 0060 00000000 		.4byte	.LFB13
 3112 0064 3A000000 		.4byte	.LFE13
 3113 0068 00000000 		.4byte	.LFB14
 3114 006c 64000000 		.4byte	.LFE14
 3115 0070 00000000 		.4byte	.LFB15
 3116 0074 6C000000 		.4byte	.LFE15
 3117 0078 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 80


 3118 007c 22000000 		.4byte	.LFE16
 3119 0080 00000000 		.4byte	.LFB17
 3120 0084 36000000 		.4byte	.LFE17
 3121 0088 00000000 		.4byte	0
 3122 008c 00000000 		.4byte	0
 3123              		.section	.debug_line,"",%progbits
 3124              	.Ldebug_line0:
 3125 0000 69020000 		.section	.debug_str,"MS",%progbits,1
 3125      02007100 
 3125      00000201 
 3125      FB0E0D00 
 3125      01010101 
 3126              	.LASF99:
 3127 0000 47656E65 		.ascii	"Generated_Source\\PSoC4\\CSD_Filter.c\000"
 3127      72617465 
 3127      645F536F 
 3127      75726365 
 3127      5C50536F 
 3128              	.LASF10:
 3129 0024 75696E74 		.ascii	"uint16\000"
 3129      313600
 3130              	.LASF72:
 3131 002b 70747257 		.ascii	"ptrWidgetRam\000"
 3131      69646765 
 3131      7452616D 
 3131      00
 3132              	.LASF85:
 3133 0038 4353445F 		.ascii	"CSD_InitializeIIR\000"
 3133      496E6974 
 3133      69616C69 
 3133      7A654949 
 3133      5200
 3134              	.LASF69:
 3135 004a 4353445F 		.ascii	"CSD_UpdateAllBaselines\000"
 3135      55706461 
 3135      7465416C 
 3135      6C426173 
 3135      656C696E 
 3136              	.LASF76:
 3137 0061 64696666 		.ascii	"difference\000"
 3137      6572656E 
 3137      636500
 3138              	.LASF7:
 3139 006c 6C6F6E67 		.ascii	"long long unsigned int\000"
 3139      206C6F6E 
 3139      6720756E 
 3139      7369676E 
 3139      65642069 
 3140              	.LASF71:
 3141 0083 4353445F 		.ascii	"CSD_UpdateSensorBaseline\000"
 3141      55706461 
 3141      74655365 
 3141      6E736F72 
 3141      42617365 
 3142              	.LASF44:
 3143 009c 70747232 		.ascii	"ptr2SnsFlash\000"
 3143      536E7346 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 81


 3143      6C617368 
 3143      00
 3144              	.LASF41:
 3145 00a9 64696666 		.ascii	"diff\000"
 3145      00
 3146              	.LASF24:
 3147 00ae 4353445F 		.ascii	"CSD_WD_PROXIMITY_E\000"
 3147      57445F50 
 3147      524F5849 
 3147      4D495459 
 3147      5F4500
 3148              	.LASF89:
 3149 00c1 4353445F 		.ascii	"CSD_RunIIRInternal\000"
 3149      52756E49 
 3149      4952496E 
 3149      7465726E 
 3149      616C00
 3150              	.LASF6:
 3151 00d4 6C6F6E67 		.ascii	"long long int\000"
 3151      206C6F6E 
 3151      6720696E 
 3151      7400
 3152              	.LASF0:
 3153 00e2 7369676E 		.ascii	"signed char\000"
 3153      65642063 
 3153      68617200 
 3154              	.LASF23:
 3155 00ee 4353445F 		.ascii	"CSD_WD_TOUCHPAD_E\000"
 3155      57445F54 
 3155      4F554348 
 3155      5041445F 
 3155      4500
 3156              	.LASF4:
 3157 0100 6C6F6E67 		.ascii	"long int\000"
 3157      20696E74 
 3157      00
 3158              	.LASF46:
 3159 0109 70747232 		.ascii	"ptr2SnsRam\000"
 3159      536E7352 
 3159      616D00
 3160              	.LASF94:
 3161 0114 696E7075 		.ascii	"input\000"
 3161      7400
 3162              	.LASF9:
 3163 011a 75696E74 		.ascii	"uint8\000"
 3163      3800
 3164              	.LASF43:
 3165 0120 4353445F 		.ascii	"CSD_RAM_SNS_STRUCT\000"
 3165      52414D5F 
 3165      534E535F 
 3165      53545255 
 3165      435400
 3166              	.LASF13:
 3167 0133 646F7562 		.ascii	"double\000"
 3167      6C6500
 3168              	.LASF19:
 3169 013a 4353445F 		.ascii	"CSD_WD_BUTTON_E\000"
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 82


 3169      57445F42 
 3169      5554544F 
 3169      4E5F4500 
 3170              	.LASF96:
 3171 014a 73686966 		.ascii	"shift\000"
 3171      7400
 3172              	.LASF63:
 3173 0150 73656E73 		.ascii	"sensorId\000"
 3173      6F724964 
 3173      00
 3174              	.LASF11:
 3175 0159 75696E74 		.ascii	"uint32\000"
 3175      333200
 3176              	.LASF17:
 3177 0160 4353445F 		.ascii	"CSD_THRESHOLD_TYPE\000"
 3177      54485245 
 3177      53484F4C 
 3177      445F5459 
 3177      504500
 3178              	.LASF59:
 3179 0173 4353445F 		.ascii	"CSD_REGULAR_FLTR_STRUCT\000"
 3179      52454755 
 3179      4C41525F 
 3179      464C5452 
 3179      5F535452 
 3180              	.LASF39:
 3181 018b 62736C6E 		.ascii	"bslnExt\000"
 3181      45787400 
 3182              	.LASF64:
 3183 0193 73656E73 		.ascii	"sensorsNumber\000"
 3183      6F72734E 
 3183      756D6265 
 3183      7200
 3184              	.LASF90:
 3185 01a1 74656D70 		.ascii	"temp\000"
 3185      00
 3186              	.LASF56:
 3187 01a6 69697248 		.ascii	"iirHistory\000"
 3187      6973746F 
 3187      727900
 3188              	.LASF38:
 3189 01b1 62736C6E 		.ascii	"bsln\000"
 3189      00
 3190              	.LASF8:
 3191 01b6 756E7369 		.ascii	"unsigned int\000"
 3191      676E6564 
 3191      20696E74 
 3191      00
 3192              	.LASF100:
 3193 01c3 433A5C55 		.ascii	"C:\\Users\\Christopher Kuzma\\Downloads\\Cypress Th"
 3193      73657273 
 3193      5C436872 
 3193      6973746F 
 3193      70686572 
 3194 01f2 696E675C 		.ascii	"ing\\EnvironmentSensing.cydsn\\EnvironmentSensing.c"
 3194      456E7669 
 3194      726F6E6D 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 83


 3194      656E7453 
 3194      656E7369 
 3195 0223 7964736E 		.ascii	"ydsn\000"
 3195      00
 3196              	.LASF18:
 3197 0228 4353445F 		.ascii	"CSD_LOW_BSLN_RST_TYPE\000"
 3197      4C4F575F 
 3197      42534C4E 
 3197      5F525354 
 3197      5F545950 
 3198              	.LASF98:
 3199 023e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3199      4320342E 
 3199      392E3320 
 3199      32303135 
 3199      30333033 
 3200 0271 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 3200      20726576 
 3200      6973696F 
 3200      6E203232 
 3200      31323230 
 3201 02a4 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 3201      30202D66 
 3201      66756E63 
 3201      74696F6E 
 3201      2D736563 
 3202              	.LASF93:
 3203 02d0 4353445F 		.ascii	"CSD_FtIIR1stOrder\000"
 3203      46744949 
 3203      52317374 
 3203      4F726465 
 3203      7200
 3204              	.LASF32:
 3205 02e2 6C6F7742 		.ascii	"lowBslnRst\000"
 3205      736C6E52 
 3205      737400
 3206              	.LASF57:
 3207 02ed 4353445F 		.ascii	"CSD_REGULAR_FLTR_CHANNEL_STRUCT\000"
 3207      52454755 
 3207      4C41525F 
 3207      464C5452 
 3207      5F434841 
 3208              	.LASF3:
 3209 030d 73686F72 		.ascii	"short unsigned int\000"
 3209      7420756E 
 3209      7369676E 
 3209      65642069 
 3209      6E7400
 3210              	.LASF61:
 3211 0320 4353445F 		.ascii	"CSD_PTR_FILTER_VARIANT\000"
 3211      5054525F 
 3211      46494C54 
 3211      45525F56 
 3211      41524941 
 3212              	.LASF73:
 3213 0337 4353445F 		.ascii	"CSD_FtUpdateBaseline\000"
 3213      46745570 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 84


 3213      64617465 
 3213      42617365 
 3213      6C696E65 
 3214              	.LASF70:
 3215 034c 4353445F 		.ascii	"CSD_UpdateWidgetBaseline\000"
 3215      55706461 
 3215      74655769 
 3215      64676574 
 3215      42617365 
 3216              	.LASF83:
 3217 0365 4353445F 		.ascii	"CSD_FtInitializeBaseline\000"
 3217      4674496E 
 3217      69746961 
 3217      6C697A65 
 3217      42617365 
 3218              	.LASF45:
 3219 037e 70747232 		.ascii	"ptr2WdgtRam\000"
 3219      57646774 
 3219      52616D00 
 3220              	.LASF74:
 3221 038a 77645479 		.ascii	"wdType\000"
 3221      706500
 3222              	.LASF68:
 3223 0391 62736C6E 		.ascii	"bslnStatus\000"
 3223      53746174 
 3223      757300
 3224              	.LASF37:
 3225 039c 4353445F 		.ascii	"CSD_RAM_WD_BASE_STRUCT\000"
 3225      52414D5F 
 3225      57445F42 
 3225      4153455F 
 3225      53545255 
 3226              	.LASF62:
 3227 03b3 77696467 		.ascii	"widgetId\000"
 3227      65744964 
 3227      00
 3228              	.LASF97:
 3229 03bc 6F757470 		.ascii	"output\000"
 3229      757400
 3230              	.LASF34:
 3231 03c3 69646163 		.ascii	"idacMod\000"
 3231      4D6F6400 
 3232              	.LASF52:
 3233 03cb 6E756D43 		.ascii	"numCols\000"
 3233      6F6C7300 
 3234              	.LASF16:
 3235 03d3 73697A65 		.ascii	"sizetype\000"
 3235      74797065 
 3235      00
 3236              	.LASF65:
 3237 03dc 70747257 		.ascii	"ptrWidget\000"
 3237      69646765 
 3237      7400
 3238              	.LASF91:
 3239 03e6 4353445F 		.ascii	"CSD_FtRunEnabledFilters\000"
 3239      46745275 
 3239      6E456E61 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 85


 3239      626C6564 
 3239      46696C74 
 3240              	.LASF49:
 3241 03fe 73746174 		.ascii	"staticConfig\000"
 3241      6963436F 
 3241      6E666967 
 3241      00
 3242              	.LASF29:
 3243 040b 6E4E6F69 		.ascii	"nNoiseTh\000"
 3243      73655468 
 3243      00
 3244              	.LASF51:
 3245 0414 77646774 		.ascii	"wdgtType\000"
 3245      54797065 
 3245      00
 3246              	.LASF25:
 3247 041d 4353445F 		.ascii	"CSD_WD_TYPE_ENUM\000"
 3247      57445F54 
 3247      5950455F 
 3247      454E554D 
 3247      00
 3248              	.LASF92:
 3249 042e 4353445F 		.ascii	"CSD_FtRunEnabledFiltersInternal\000"
 3249      46745275 
 3249      6E456E61 
 3249      626C6564 
 3249      46696C74 
 3250              	.LASF81:
 3251 044e 4353445F 		.ascii	"CSD_InitializeWidgetBaseline\000"
 3251      496E6974 
 3251      69616C69 
 3251      7A655769 
 3251      64676574 
 3252              	.LASF87:
 3253 046b 4353445F 		.ascii	"CSD_InitializeIIRInternal\000"
 3253      496E6974 
 3253      69616C69 
 3253      7A654949 
 3253      52496E74 
 3254              	.LASF12:
 3255 0485 666C6F61 		.ascii	"float\000"
 3255      7400
 3256              	.LASF79:
 3257 048b 4353445F 		.ascii	"CSD_FtInitialize\000"
 3257      4674496E 
 3257      69746961 
 3257      6C697A65 
 3257      00
 3258              	.LASF33:
 3259 049c 62736C6E 		.ascii	"bslnCoeff\000"
 3259      436F6566 
 3259      6600
 3260              	.LASF78:
 3261 04a6 68697374 		.ascii	"history\000"
 3261      6F727900 
 3262              	.LASF88:
 3263 04ae 70747253 		.ascii	"ptrSensorObj\000"
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 86


 3263      656E736F 
 3263      724F626A 
 3263      00
 3264              	.LASF58:
 3265 04bb 72656775 		.ascii	"regularChannel\000"
 3265      6C617243 
 3265      68616E6E 
 3265      656C00
 3266              	.LASF30:
 3267 04ca 68797374 		.ascii	"hysteresis\000"
 3267      65726573 
 3267      697300
 3268              	.LASF1:
 3269 04d5 756E7369 		.ascii	"unsigned char\000"
 3269      676E6564 
 3269      20636861 
 3269      7200
 3270              	.LASF2:
 3271 04e3 73686F72 		.ascii	"short int\000"
 3271      7420696E 
 3271      7400
 3272              	.LASF101:
 3273 04ed 4353445F 		.ascii	"CSD_dsFlash\000"
 3273      6473466C 
 3273      61736800 
 3274              	.LASF47:
 3275 04f9 70747232 		.ascii	"ptr2FltrHistory\000"
 3275      466C7472 
 3275      48697374 
 3275      6F727900 
 3276              	.LASF22:
 3277 0509 4353445F 		.ascii	"CSD_WD_MATRIX_BUTTON_E\000"
 3277      57445F4D 
 3277      41545249 
 3277      585F4255 
 3277      54544F4E 
 3278              	.LASF77:
 3279 0520 6368616E 		.ascii	"channel\000"
 3279      6E656C00 
 3280              	.LASF53:
 3281 0528 4353445F 		.ascii	"CSD_FLASH_WD_STRUCT\000"
 3281      464C4153 
 3281      485F5744 
 3281      5F535452 
 3281      55435400 
 3282              	.LASF26:
 3283 053c 7265736F 		.ascii	"resolution\000"
 3283      6C757469 
 3283      6F6E00
 3284              	.LASF86:
 3285 0547 4353445F 		.ascii	"CSD_RunIIR\000"
 3285      52756E49 
 3285      495200
 3286              	.LASF5:
 3287 0552 6C6F6E67 		.ascii	"long unsigned int\000"
 3287      20756E73 
 3287      69676E65 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 87


 3287      6420696E 
 3287      7400
 3288              	.LASF14:
 3289 0564 63686172 		.ascii	"char\000"
 3289      00
 3290              	.LASF35:
 3291 0569 736E7343 		.ascii	"snsClk\000"
 3291      6C6B00
 3292              	.LASF31:
 3293 0570 6F6E4465 		.ascii	"onDebounce\000"
 3293      626F756E 
 3293      636500
 3294              	.LASF20:
 3295 057b 4353445F 		.ascii	"CSD_WD_LINEAR_SLIDER_E\000"
 3295      57445F4C 
 3295      494E4541 
 3295      525F534C 
 3295      49444552 
 3296              	.LASF40:
 3297 0592 69646163 		.ascii	"idacComp\000"
 3297      436F6D70 
 3297      00
 3298              	.LASF42:
 3299 059b 6E656742 		.ascii	"negBslnRstCnt\000"
 3299      736C6E52 
 3299      7374436E 
 3299      7400
 3300              	.LASF50:
 3301 05a9 746F7461 		.ascii	"totalNumSns\000"
 3301      6C4E756D 
 3301      536E7300 
 3302              	.LASF48:
 3303 05b5 70747232 		.ascii	"ptr2DebounceArr\000"
 3303      4465626F 
 3303      756E6365 
 3303      41727200 
 3304              	.LASF84:
 3305 05c5 4353445F 		.ascii	"CSD_FtInitializeBaselineChannel\000"
 3305      4674496E 
 3305      69746961 
 3305      6C697A65 
 3305      42617365 
 3306              	.LASF55:
 3307 05e5 4353445F 		.ascii	"CSD_FLASH_STRUCT\000"
 3307      464C4153 
 3307      485F5354 
 3307      52554354 
 3307      00
 3308              	.LASF54:
 3309 05f6 77646774 		.ascii	"wdgtArray\000"
 3309      41727261 
 3309      7900
 3310              	.LASF75:
 3311 0600 7369676E 		.ascii	"sign\000"
 3311      00
 3312              	.LASF36:
 3313 0605 736E7343 		.ascii	"snsClkSource\000"
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccghn5Jm.s 			page 88


 3313      6C6B536F 
 3313      75726365 
 3313      00
 3314              	.LASF15:
 3315 0612 63797374 		.ascii	"cystatus\000"
 3315      61747573 
 3315      00
 3316              	.LASF67:
 3317 061b 70747246 		.ascii	"ptrFilterHistObj\000"
 3317      696C7465 
 3317      72486973 
 3317      744F626A 
 3317      00
 3318              	.LASF66:
 3319 062c 70747253 		.ascii	"ptrSensor\000"
 3319      656E736F 
 3319      7200
 3320              	.LASF95:
 3321 0636 70726576 		.ascii	"prevOutput\000"
 3321      4F757470 
 3321      757400
 3322              	.LASF27:
 3323 0641 66696E67 		.ascii	"fingerTh\000"
 3323      65725468 
 3323      00
 3324              	.LASF82:
 3325 064a 4353445F 		.ascii	"CSD_InitializeSensorBaseline\000"
 3325      496E6974 
 3325      69616C69 
 3325      7A655365 
 3325      6E736F72 
 3326              	.LASF21:
 3327 0667 4353445F 		.ascii	"CSD_WD_RADIAL_SLIDER_E\000"
 3327      57445F52 
 3327      41444941 
 3327      4C5F534C 
 3327      49444552 
 3328              	.LASF60:
 3329 067e 70747252 		.ascii	"ptrRegular\000"
 3329      6567756C 
 3329      617200
 3330              	.LASF28:
 3331 0689 6E6F6973 		.ascii	"noiseTh\000"
 3331      65546800 
 3332              	.LASF80:
 3333 0691 4353445F 		.ascii	"CSD_InitializeAllBaselines\000"
 3333      496E6974 
 3333      69616C69 
 3333      7A65416C 
 3333      6C426173 
 3334              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
