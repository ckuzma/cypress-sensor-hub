ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	cydelayFreqHz
  18              		.data
  19              		.align	2
  20              		.type	cydelayFreqHz, %object
  21              		.size	cydelayFreqHz, 4
  22              	cydelayFreqHz:
  23 0000 006CDC02 		.word	48000000
  24              		.global	cydelayFreqKhz
  25              		.align	2
  26              		.type	cydelayFreqKhz, %object
  27              		.size	cydelayFreqKhz, 4
  28              	cydelayFreqKhz:
  29 0004 80BB0000 		.word	48000
  30              		.global	cydelayFreqMhz
  31              		.type	cydelayFreqMhz, %object
  32              		.size	cydelayFreqMhz, 1
  33              	cydelayFreqMhz:
  34 0008 30       		.byte	48
  35              		.global	cydelay32kMs
  36 0009 000000   		.align	2
  37              		.type	cydelay32kMs, %object
  38              		.size	cydelay32kMs, 4
  39              	cydelay32kMs:
  40 000c 0000C05D 		.word	1572864000
  41              		.bss
  42              		.align	2
  43              	CySysTickCallbacks:
  44 0000 00000000 		.space	20
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	CySysTickInitVar
  46              		.align	2
  47              		.type	CySysTickInitVar, %object
  48              		.size	CySysTickInitVar, 4
  49              	CySysTickInitVar:
  50 0014 00000000 		.space	4
  51              		.global	cyImoFreqMhz2DpllOffset
  52              		.section	.rodata
  53              		.align	2
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 2


  54              		.type	cyImoFreqMhz2DpllOffset, %object
  55              		.size	cyImoFreqMhz2DpllOffset, 23
  56              	cyImoFreqMhz2DpllOffset:
  57 0000 EE       		.byte	-18
  58 0001 DB       		.byte	-37
  59 0002 C9       		.byte	-55
  60 0003 B9       		.byte	-71
  61 0004 AA       		.byte	-86
  62 0005 9B       		.byte	-101
  63 0006 8E       		.byte	-114
  64 0007 82       		.byte	-126
  65 0008 76       		.byte	118
  66 0009 6B       		.byte	107
  67 000a 60       		.byte	96
  68 000b 56       		.byte	86
  69 000c 4D       		.byte	77
  70 000d 44       		.byte	68
  71 000e 3B       		.byte	59
  72 000f 33       		.byte	51
  73 0010 2C       		.byte	44
  74 0011 24       		.byte	36
  75 0012 1D       		.byte	29
  76 0013 17       		.byte	23
  77 0014 10       		.byte	16
  78 0015 0A       		.byte	10
  79 0016 04       		.byte	4
  80 0017 00       		.section	.text.CySysClkImoStart,"ax",%progbits
  81              		.align	2
  82              		.global	CySysClkImoStart
  83              		.code	16
  84              		.thumb_func
  85              		.type	CySysClkImoStart, %function
  86              	CySysClkImoStart:
  87              	.LFB1:
  88              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.40
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 3


  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  37:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  38:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  40:Generated_Source\PSoC4/CyLib.c **** 
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  43:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  44:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  45:Generated_Source\PSoC4/CyLib.c **** *
  46:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  47:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  48:Generated_Source\PSoC4/CyLib.c **** *
  49:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  50:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  51:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  52:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  53:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  54:Generated_Source\PSoC4/CyLib.c **** 
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  57:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  58:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  59:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  60:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  61:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  71:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLib.c **** 
  73:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  74:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  75:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  76:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  77:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 4


  80:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  82:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  85:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  86:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  87:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  88:Generated_Source\PSoC4/CyLib.c **** 
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  91:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  92:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  95:Generated_Source\PSoC4/CyLib.c **** *
  96:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
  97:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
  98:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
  99:Generated_Source\PSoC4/CyLib.c **** *
 100:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 101:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 104:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 105:Generated_Source\PSoC4/CyLib.c **** {
  89              		.loc 1 105 0
  90              		.cfi_startproc
  91 0000 80B5     		push	{r7, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 7, -8
  94              		.cfi_offset 14, -4
  95 0002 00AF     		add	r7, sp, #0
  96              		.cfi_def_cfa_register 7
 106:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  97              		.loc 1 106 0
  98 0004 044B     		ldr	r3, .L2
  99 0006 044A     		ldr	r2, .L2
 100 0008 1268     		ldr	r2, [r2]
 101 000a 8021     		mov	r1, #128
 102 000c 0906     		lsl	r1, r1, #24
 103 000e 0A43     		orr	r2, r1
 104 0010 1A60     		str	r2, [r3]
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 109:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 110:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 111:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 112:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 113:Generated_Source\PSoC4/CyLib.c **** 
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 116:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 117:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 118:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 119:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 120:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 5


 121:Generated_Source\PSoC4/CyLib.c **** }
 105              		.loc 1 121 0
 106 0012 BD46     		mov	sp, r7
 107              		@ sp needed
 108 0014 80BD     		pop	{r7, pc}
 109              	.L3:
 110 0016 C046     		.align	2
 111              	.L2:
 112 0018 30000340 		.word	1073938480
 113              		.cfi_endproc
 114              	.LFE1:
 115              		.size	CySysClkImoStart, .-CySysClkImoStart
 116              		.section	.text.CySysClkImoStop,"ax",%progbits
 117              		.align	2
 118              		.global	CySysClkImoStop
 119              		.code	16
 120              		.thumb_func
 121              		.type	CySysClkImoStop, %function
 122              	CySysClkImoStop:
 123              	.LFB2:
 122:Generated_Source\PSoC4/CyLib.c **** 
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 125:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 126:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 127:Generated_Source\PSoC4/CyLib.c **** *
 128:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 129:Generated_Source\PSoC4/CyLib.c **** *
 130:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 131:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 136:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 137:Generated_Source\PSoC4/CyLib.c **** {
 124              		.loc 1 137 0
 125              		.cfi_startproc
 126 0000 80B5     		push	{r7, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 7, -8
 129              		.cfi_offset 14, -4
 130 0002 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 138:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 139:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 132              		.loc 1 139 0
 133 0004 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 140:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 141:Generated_Source\PSoC4/CyLib.c **** 
 142:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 143:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 144:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 134              		.loc 1 146 0
 135 0008 034B     		ldr	r3, .L5
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 6


 136 000a 034A     		ldr	r2, .L5
 137 000c 1268     		ldr	r2, [r2]
 138 000e 5200     		lsl	r2, r2, #1
 139 0010 5208     		lsr	r2, r2, #1
 140 0012 1A60     		str	r2, [r3]
 147:Generated_Source\PSoC4/CyLib.c **** }
 141              		.loc 1 147 0
 142 0014 BD46     		mov	sp, r7
 143              		@ sp needed
 144 0016 80BD     		pop	{r7, pc}
 145              	.L6:
 146              		.align	2
 147              	.L5:
 148 0018 30000340 		.word	1073938480
 149              		.cfi_endproc
 150              	.LFE2:
 151              		.size	CySysClkImoStop, .-CySysClkImoStop
 152              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 153              		.align	2
 154              		.global	CySysClkImoEnableWcoLock
 155              		.code	16
 156              		.thumb_func
 157              		.type	CySysClkImoEnableWcoLock, %function
 158              	CySysClkImoEnableWcoLock:
 159              	.LFB3:
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 150:Generated_Source\PSoC4/CyLib.c **** 
 151:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 152:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 153:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 154:Generated_Source\PSoC4/CyLib.c ****     *
 155:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 156:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 157:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 160:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 161:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 162:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 163:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 164:Generated_Source\PSoC4/CyLib.c ****     *
 165:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 166:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 169:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 172:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 173:Generated_Source\PSoC4/CyLib.c ****     {
 160              		.loc 1 173 0
 161              		.cfi_startproc
 162 0000 90B5     		push	{r4, r7, lr}
 163              		.cfi_def_cfa_offset 12
 164              		.cfi_offset 4, -12
 165              		.cfi_offset 7, -8
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 7


 166              		.cfi_offset 14, -4
 167 0002 87B0     		sub	sp, sp, #28
 168              		.cfi_def_cfa_offset 40
 169 0004 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
 174:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 175:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 176:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 177:Generated_Source\PSoC4/CyLib.c **** 
 178:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 179:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 180:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 171              		.loc 1 181 0
 172 0006 0023     		mov	r3, #0
 173 0008 3B61     		str	r3, [r7, #16]
 182:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 183:Generated_Source\PSoC4/CyLib.c **** 
 184:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 174              		.loc 1 184 0
 175 000a FFF7FEFF 		bl	CySysClkWcoEnabled
 176 000e 031E     		sub	r3, r0, #0
 177 0010 69D0     		beq	.L7
 185:Generated_Source\PSoC4/CyLib.c ****         {
 186:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 178              		.loc 1 186 0
 179 0012 0F23     		mov	r3, #15
 180 0014 FC18     		add	r4, r7, r3
 181 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 182 001a 031C     		mov	r3, r0
 183 001c 2370     		strb	r3, [r4]
 187:Generated_Source\PSoC4/CyLib.c **** 
 188:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 189:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 190:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 191:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 192:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 193:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 194:Generated_Source\PSoC4/CyLib.c **** 
 195:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 196:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 197:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 198:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 199:Generated_Source\PSoC4/CyLib.c ****                 {
 200:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 201:Generated_Source\PSoC4/CyLib.c ****                     {
 202:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 203:Generated_Source\PSoC4/CyLib.c ****                         break;
 204:Generated_Source\PSoC4/CyLib.c ****                     }
 205:Generated_Source\PSoC4/CyLib.c ****                 }
 206:Generated_Source\PSoC4/CyLib.c ****             #else
 207:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 208:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 209:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 184              		.loc 1 209 0
 185 001e 334B     		ldr	r3, .L12
 186 0020 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 8


 187 0022 0722     		mov	r2, #7
 188 0024 1340     		and	r3, r2
 189 0026 9B00     		lsl	r3, r3, #2
 210:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 190              		.loc 1 210 0
 191 0028 1833     		add	r3, r3, #24
 192 002a 1A1C     		mov	r2, r3
 211:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 193              		.loc 1 211 0
 194 002c 304B     		ldr	r3, .L12+4
 195 002e 1B68     		ldr	r3, [r3]
 196 0030 9B08     		lsr	r3, r3, #2
 210:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 197              		.loc 1 210 0
 198 0032 191C     		mov	r1, r3
 199 0034 0323     		mov	r3, #3
 200 0036 0B40     		and	r3, r1
 209:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 201              		.loc 1 209 0
 202 0038 DA40     		lsr	r2, r2, r3
 203 003a 131C     		mov	r3, r2
 204 003c BB60     		str	r3, [r7, #8]
 212:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 213:Generated_Source\PSoC4/CyLib.c ****                 #else
 214:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 215:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 216:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 217:Generated_Source\PSoC4/CyLib.c **** 
 218:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 221:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 222:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 223:Generated_Source\PSoC4/CyLib.c ****                 {
 224:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 225:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226:Generated_Source\PSoC4/CyLib.c ****                 }
 227:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 228:Generated_Source\PSoC4/CyLib.c **** 
 229:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 205              		.loc 1 229 0
 206 003e 2D4B     		ldr	r3, .L12+8
 207 0040 1B68     		ldr	r3, [r3]
 208 0042 2D4A     		ldr	r2, .L12+12
 209 0044 1340     		and	r3, r2
 210 0046 7B61     		str	r3, [r7, #20]
 230:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 231:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 233:Generated_Source\PSoC4/CyLib.c **** 
 234:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 235:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 211              		.loc 1 235 0
 212 0048 BB68     		ldr	r3, [r7, #8]
 213 004a 2C4A     		ldr	r2, .L12+16
 214 004c 5343     		mul	r3, r2
 215 004e 8022     		mov	r2, #128
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 9


 216 0050 D201     		lsl	r2, r2, #7
 217 0052 9446     		mov	ip, r2
 218 0054 6344     		add	r3, r3, ip
 219 0056 DB0B     		lsr	r3, r3, #15
 220 0058 013B     		sub	r3, r3, #1
 221 005a 5B05     		lsl	r3, r3, #21
 222 005c 5B0D     		lsr	r3, r3, #21
 223 005e 7A69     		ldr	r2, [r7, #20]
 224 0060 1343     		orr	r3, r2
 225 0062 7B61     		str	r3, [r7, #20]
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 226              		.loc 1 238 0
 227 0064 7B69     		ldr	r3, [r7, #20]
 228 0066 A022     		mov	r2, #160
 229 0068 5203     		lsl	r2, r2, #13
 230 006a 1343     		orr	r3, r2
 231 006c 7B61     		str	r3, [r7, #20]
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 241:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 232              		.loc 1 241 0
 233 006e BB68     		ldr	r3, [r7, #8]
 234 0070 192B     		cmp	r3, #25
 235 0072 05D8     		bhi	.L9
 242:Generated_Source\PSoC4/CyLib.c ****             {
 243:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 236              		.loc 1 243 0
 237 0074 7B69     		ldr	r3, [r7, #20]
 238 0076 FF22     		mov	r2, #255
 239 0078 9205     		lsl	r2, r2, #22
 240 007a 1343     		orr	r3, r2
 241 007c 7B61     		str	r3, [r7, #20]
 242 007e 16E0     		b	.L10
 243              	.L9:
 244:Generated_Source\PSoC4/CyLib.c ****             }
 245:Generated_Source\PSoC4/CyLib.c ****             else
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 244              		.loc 1 247 0
 245 0080 BB68     		ldr	r3, [r7, #8]
 246 0082 1F4A     		ldr	r2, .L12+20
 247 0084 9446     		mov	ip, r2
 248 0086 6344     		add	r3, r3, ip
 249 0088 1B78     		ldrb	r3, [r3]
 250 008a DBB2     		uxtb	r3, r3
 251 008c 191C     		mov	r1, r3
 248:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252              		.loc 1 248 0
 253 008e BB68     		ldr	r3, [r7, #8]
 254 0090 1A3B     		sub	r3, r3, #26
 255 0092 1C4A     		ldr	r2, .L12+24
 256 0094 D35C     		ldrb	r3, [r2, r3]
 247:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 257              		.loc 1 247 0
 258 0096 CB18     		add	r3, r1, r3
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 10


 259 0098 3B61     		str	r3, [r7, #16]
 249:Generated_Source\PSoC4/CyLib.c **** 
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 260              		.loc 1 250 0
 261 009a 3B69     		ldr	r3, [r7, #16]
 262 009c FF2B     		cmp	r3, #255
 263 009e 00D9     		bls	.L11
 264 00a0 FF23     		mov	r3, #255
 265              	.L11:
 266 00a2 3B61     		str	r3, [r7, #16]
 251:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 267              		.loc 1 253 0
 268 00a4 3B69     		ldr	r3, [r7, #16]
 269 00a6 9B05     		lsl	r3, r3, #22
 270 00a8 7A69     		ldr	r2, [r7, #20]
 271 00aa 1343     		orr	r3, r2
 272 00ac 7B61     		str	r3, [r7, #20]
 273              	.L10:
 254:Generated_Source\PSoC4/CyLib.c ****             }
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 274              		.loc 1 256 0
 275 00ae 114B     		ldr	r3, .L12+8
 276 00b0 7A69     		ldr	r2, [r7, #20]
 277 00b2 1A60     		str	r2, [r3]
 257:Generated_Source\PSoC4/CyLib.c **** 
 258:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 278              		.loc 1 258 0
 279 00b4 144B     		ldr	r3, .L12+28
 280 00b6 1B68     		ldr	r3, [r3]
 281 00b8 7B60     		str	r3, [r7, #4]
 259:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 282              		.loc 1 259 0
 283 00ba 3020     		mov	r0, #48
 284 00bc FFF7FEFF 		bl	CySysFlashSetWaitCycles
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 285              		.loc 1 260 0
 286 00c0 124B     		ldr	r3, .L12+32
 287 00c2 124A     		ldr	r2, .L12+32
 288 00c4 1268     		ldr	r2, [r2]
 289 00c6 8021     		mov	r1, #128
 290 00c8 C905     		lsl	r1, r1, #23
 291 00ca 0A43     		orr	r2, r1
 292 00cc 1A60     		str	r2, [r3]
 261:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 293              		.loc 1 261 0
 294 00ce 1420     		mov	r0, #20
 295 00d0 FFF7FEFF 		bl	CyDelay
 262:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 296              		.loc 1 262 0
 297 00d4 0C4B     		ldr	r3, .L12+28
 298 00d6 7A68     		ldr	r2, [r7, #4]
 299 00d8 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/CyLib.c **** 
 264:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 11


 300              		.loc 1 264 0
 301 00da 0F23     		mov	r3, #15
 302 00dc FB18     		add	r3, r7, r3
 303 00de 1B78     		ldrb	r3, [r3]
 304 00e0 181C     		mov	r0, r3
 305 00e2 FFF7FEFF 		bl	CyExitCriticalSection
 306              	.L7:
 265:Generated_Source\PSoC4/CyLib.c ****         }
 266:Generated_Source\PSoC4/CyLib.c ****     }
 307              		.loc 1 266 0
 308 00e6 BD46     		mov	sp, r7
 309 00e8 07B0     		add	sp, sp, #28
 310              		@ sp needed
 311 00ea 90BD     		pop	{r4, r7, pc}
 312              	.L13:
 313              		.align	2
 314              	.L12:
 315 00ec 080F0340 		.word	1073942280
 316 00f0 28000340 		.word	1073938472
 317 00f4 08000640 		.word	1074135048
 318 00f8 00F800C0 		.word	-1073678336
 319 00fc 40420F00 		.word	1000000
 320 0100 CDF1FF0F 		.word	268431821
 321 0104 00000000 		.word	cyImoFreqMhz2DpllOffset
 322 0108 30001040 		.word	1074790448
 323 010c 00000640 		.word	1074135040
 324              		.cfi_endproc
 325              	.LFE3:
 326              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 327              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
 328              		.align	2
 329              		.global	CySysClkImoDisableWcoLock
 330              		.code	16
 331              		.thumb_func
 332              		.type	CySysClkImoDisableWcoLock, %function
 333              	CySysClkImoDisableWcoLock:
 334              	.LFB4:
 267:Generated_Source\PSoC4/CyLib.c **** 
 268:Generated_Source\PSoC4/CyLib.c **** 
 269:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 270:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 271:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 272:Generated_Source\PSoC4/CyLib.c ****     *
 273:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 274:Generated_Source\PSoC4/CyLib.c ****     *
 275:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 276:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 279:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 282:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 283:Generated_Source\PSoC4/CyLib.c ****     {
 335              		.loc 1 283 0
 336              		.cfi_startproc
 337 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 12


 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 7, -8
 340              		.cfi_offset 14, -4
 341 0002 00AF     		add	r7, sp, #0
 342              		.cfi_def_cfa_register 7
 284:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 343              		.loc 1 284 0
 344 0004 034B     		ldr	r3, .L15
 345 0006 034A     		ldr	r2, .L15
 346 0008 1268     		ldr	r2, [r2]
 347 000a 0349     		ldr	r1, .L15+4
 348 000c 0A40     		and	r2, r1
 349 000e 1A60     		str	r2, [r3]
 285:Generated_Source\PSoC4/CyLib.c ****     }
 350              		.loc 1 285 0
 351 0010 BD46     		mov	sp, r7
 352              		@ sp needed
 353 0012 80BD     		pop	{r7, pc}
 354              	.L16:
 355              		.align	2
 356              	.L15:
 357 0014 00000640 		.word	1074135040
 358 0018 FFFFFFBF 		.word	-1073741825
 359              		.cfi_endproc
 360              	.LFE4:
 361              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 362              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 363              		.align	2
 364              		.global	CySysClkImoGetWcoLock
 365              		.code	16
 366              		.thumb_func
 367              		.type	CySysClkImoGetWcoLock, %function
 368              	CySysClkImoGetWcoLock:
 369              	.LFB5:
 286:Generated_Source\PSoC4/CyLib.c **** 
 287:Generated_Source\PSoC4/CyLib.c **** 
 288:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 289:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 290:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 291:Generated_Source\PSoC4/CyLib.c ****     *
 292:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 293:Generated_Source\PSoC4/CyLib.c ****     *
 294:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 295:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 298:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 301:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 302:Generated_Source\PSoC4/CyLib.c ****     {
 370              		.loc 1 302 0
 371              		.cfi_startproc
 372 0000 80B5     		push	{r7, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 13


 376 0002 00AF     		add	r7, sp, #0
 377              		.cfi_def_cfa_register 7
 303:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 378              		.loc 1 303 0
 379 0004 054B     		ldr	r3, .L21
 380 0006 1A68     		ldr	r2, [r3]
 381 0008 8023     		mov	r3, #128
 382 000a DB05     		lsl	r3, r3, #23
 383 000c 1340     		and	r3, r2
 304:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 384              		.loc 1 304 0
 385 000e 01D0     		beq	.L18
 386              		.loc 1 304 0 is_stmt 0 discriminator 1
 387 0010 0123     		mov	r3, #1
 388 0012 00E0     		b	.L19
 389              	.L18:
 390              		.loc 1 304 0 discriminator 2
 391 0014 0023     		mov	r3, #0
 392              	.L19:
 305:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 306:Generated_Source\PSoC4/CyLib.c ****     }
 393              		.loc 1 306 0 is_stmt 1
 394 0016 181C     		mov	r0, r3
 395 0018 BD46     		mov	sp, r7
 396              		@ sp needed
 397 001a 80BD     		pop	{r7, pc}
 398              	.L22:
 399              		.align	2
 400              	.L21:
 401 001c 00000640 		.word	1074135040
 402              		.cfi_endproc
 403              	.LFE5:
 404              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 405              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 406              		.align	2
 407              		.global	CySysClkWriteHfclkDirect
 408              		.code	16
 409              		.thumb_func
 410              		.type	CySysClkWriteHfclkDirect, %function
 411              	CySysClkWriteHfclkDirect:
 412              	.LFB6:
 307:Generated_Source\PSoC4/CyLib.c **** 
 308:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 309:Generated_Source\PSoC4/CyLib.c **** 
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 314:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 315:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 316:Generated_Source\PSoC4/CyLib.c ****     *
 317:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 318:Generated_Source\PSoC4/CyLib.c ****     *
 319:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 320:Generated_Source\PSoC4/CyLib.c ****     *
 321:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 322:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 14


 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 325:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 328:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 329:Generated_Source\PSoC4/CyLib.c ****     {
 330:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 331:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 332:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 333:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 334:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 335:Generated_Source\PSoC4/CyLib.c **** 
 336:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 337:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 338:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 339:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 340:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 341:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 342:Generated_Source\PSoC4/CyLib.c **** 
 343:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 344:Generated_Source\PSoC4/CyLib.c ****     }
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c **** 
 347:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 348:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 349:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 350:Generated_Source\PSoC4/CyLib.c ****     *
 351:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 352:Generated_Source\PSoC4/CyLib.c ****     *
 353:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 354:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 357:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 361:Generated_Source\PSoC4/CyLib.c ****     {
 362:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 363:Generated_Source\PSoC4/CyLib.c **** 
 364:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 365:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 366:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 367:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 368:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 369:Generated_Source\PSoC4/CyLib.c ****     }
 370:Generated_Source\PSoC4/CyLib.c **** 
 371:Generated_Source\PSoC4/CyLib.c **** 
 372:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 373:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 374:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 375:Generated_Source\PSoC4/CyLib.c ****     *
 376:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 377:Generated_Source\PSoC4/CyLib.c ****     *
 378:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 379:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 15


 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 382:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 385:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 386:Generated_Source\PSoC4/CyLib.c ****     {
 387:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 388:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 389:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 390:Generated_Source\PSoC4/CyLib.c ****     }
 391:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 392:Generated_Source\PSoC4/CyLib.c **** 
 393:Generated_Source\PSoC4/CyLib.c **** 
 394:Generated_Source\PSoC4/CyLib.c **** 
 395:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 396:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 397:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 398:Generated_Source\PSoC4/CyLib.c **** *
 399:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 400:Generated_Source\PSoC4/CyLib.c **** *
 401:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 402:Generated_Source\PSoC4/CyLib.c **** *
 403:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 404:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 405:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 406:Generated_Source\PSoC4/CyLib.c **** *
 407:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 408:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 409:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 410:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 412:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 413:Generated_Source\PSoC4/CyLib.c **** *
 414:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 415:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 418:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 419:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 420:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 421:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 424:Generated_Source\PSoC4/CyLib.c **** *
 425:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 426:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 427:Generated_Source\PSoC4/CyLib.c **** {
 413              		.loc 1 427 0
 414              		.cfi_startproc
 415 0000 90B5     		push	{r4, r7, lr}
 416              		.cfi_def_cfa_offset 12
 417              		.cfi_offset 4, -12
 418              		.cfi_offset 7, -8
 419              		.cfi_offset 14, -4
 420 0002 85B0     		sub	sp, sp, #20
 421              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 16


 422 0004 00AF     		add	r7, sp, #0
 423              		.cfi_def_cfa_register 7
 424 0006 7860     		str	r0, [r7, #4]
 428:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 429:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 430:Generated_Source\PSoC4/CyLib.c **** 
 431:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 425              		.loc 1 431 0
 426 0008 0F23     		mov	r3, #15
 427 000a FC18     		add	r4, r7, r3
 428 000c FFF7FEFF 		bl	CyEnterCriticalSection
 429 0010 031C     		mov	r3, r0
 430 0012 2370     		strb	r3, [r4]
 432:Generated_Source\PSoC4/CyLib.c **** 
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 431              		.loc 1 434 0
 432 0014 0B4B     		ldr	r3, .L24
 433 0016 1B68     		ldr	r3, [r3]
 434 0018 0322     		mov	r2, #3
 435 001a 9343     		bic	r3, r2
 436 001c BB60     		str	r3, [r7, #8]
 435:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 438:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 439:Generated_Source\PSoC4/CyLib.c ****     {
 440:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 441:Generated_Source\PSoC4/CyLib.c ****     }
 442:Generated_Source\PSoC4/CyLib.c ****     else
 443:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 444:Generated_Source\PSoC4/CyLib.c ****     {
 445:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 437              		.loc 1 445 0
 438 001e 7B68     		ldr	r3, [r7, #4]
 439 0020 0322     		mov	r2, #3
 440 0022 1340     		and	r3, r2
 441 0024 BA68     		ldr	r2, [r7, #8]
 442 0026 1343     		orr	r3, r2
 443 0028 BB60     		str	r3, [r7, #8]
 446:Generated_Source\PSoC4/CyLib.c ****     }
 447:Generated_Source\PSoC4/CyLib.c **** 
 448:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 444              		.loc 1 448 0
 445 002a 064B     		ldr	r3, .L24
 446 002c BA68     		ldr	r2, [r7, #8]
 447 002e 1A60     		str	r2, [r3]
 449:Generated_Source\PSoC4/CyLib.c **** 
 450:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 448              		.loc 1 450 0
 449 0030 0F23     		mov	r3, #15
 450 0032 FB18     		add	r3, r7, r3
 451 0034 1B78     		ldrb	r3, [r3]
 452 0036 181C     		mov	r0, r3
 453 0038 FFF7FEFF 		bl	CyExitCriticalSection
 451:Generated_Source\PSoC4/CyLib.c **** }
 454              		.loc 1 451 0
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 17


 455 003c BD46     		mov	sp, r7
 456 003e 05B0     		add	sp, sp, #20
 457              		@ sp needed
 458 0040 90BD     		pop	{r4, r7, pc}
 459              	.L25:
 460 0042 C046     		.align	2
 461              	.L24:
 462 0044 28000340 		.word	1073938472
 463              		.cfi_endproc
 464              	.LFE6:
 465              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 466              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 467              		.align	2
 468              		.global	CySysClkGetSysclkSource
 469              		.code	16
 470              		.thumb_func
 471              		.type	CySysClkGetSysclkSource, %function
 472              	CySysClkGetSysclkSource:
 473              	.LFB7:
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c **** 
 454:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 455:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 456:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 457:Generated_Source\PSoC4/CyLib.c **** *
 458:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 459:Generated_Source\PSoC4/CyLib.c **** *
 460:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 461:Generated_Source\PSoC4/CyLib.c **** *
 462:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 463:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 464:Generated_Source\PSoC4/CyLib.c **** {
 474              		.loc 1 464 0
 475              		.cfi_startproc
 476 0000 90B5     		push	{r4, r7, lr}
 477              		.cfi_def_cfa_offset 12
 478              		.cfi_offset 4, -12
 479              		.cfi_offset 7, -8
 480              		.cfi_offset 14, -4
 481 0002 83B0     		sub	sp, sp, #12
 482              		.cfi_def_cfa_offset 24
 483 0004 00AF     		add	r7, sp, #0
 484              		.cfi_def_cfa_register 7
 465:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 466:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 467:Generated_Source\PSoC4/CyLib.c **** 
 468:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 485              		.loc 1 468 0
 486 0006 FC1D     		add	r4, r7, #7
 487 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 488 000c 031C     		mov	r3, r0
 489 000e 2370     		strb	r3, [r4]
 469:Generated_Source\PSoC4/CyLib.c **** 
 470:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 471:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 472:Generated_Source\PSoC4/CyLib.c ****     {
 473:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 18


 474:Generated_Source\PSoC4/CyLib.c ****     }
 475:Generated_Source\PSoC4/CyLib.c ****     else
 476:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 477:Generated_Source\PSoC4/CyLib.c ****     {
 478:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 490              		.loc 1 478 0
 491 0010 074B     		ldr	r3, .L28
 492 0012 1B68     		ldr	r3, [r3]
 493 0014 0322     		mov	r2, #3
 494 0016 1340     		and	r3, r2
 495 0018 3B60     		str	r3, [r7]
 479:Generated_Source\PSoC4/CyLib.c ****     }
 480:Generated_Source\PSoC4/CyLib.c **** 
 481:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 496              		.loc 1 481 0
 497 001a FB1D     		add	r3, r7, #7
 498 001c 1B78     		ldrb	r3, [r3]
 499 001e 181C     		mov	r0, r3
 500 0020 FFF7FEFF 		bl	CyExitCriticalSection
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 501              		.loc 1 483 0
 502 0024 3B68     		ldr	r3, [r7]
 484:Generated_Source\PSoC4/CyLib.c **** }
 503              		.loc 1 484 0
 504 0026 181C     		mov	r0, r3
 505 0028 BD46     		mov	sp, r7
 506 002a 03B0     		add	sp, sp, #12
 507              		@ sp needed
 508 002c 90BD     		pop	{r4, r7, pc}
 509              	.L29:
 510 002e C046     		.align	2
 511              	.L28:
 512 0030 28000340 		.word	1073938472
 513              		.cfi_endproc
 514              	.LFE7:
 515              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 516              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 517              		.align	2
 518              		.global	CySysClkWriteSysclkDiv
 519              		.code	16
 520              		.thumb_func
 521              		.type	CySysClkWriteSysclkDiv, %function
 522              	CySysClkWriteSysclkDiv:
 523              	.LFB8:
 485:Generated_Source\PSoC4/CyLib.c **** 
 486:Generated_Source\PSoC4/CyLib.c **** 
 487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CyLib.c **** *
 491:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 492:Generated_Source\PSoC4/CyLib.c **** *
 493:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 494:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 495:Generated_Source\PSoC4/CyLib.c **** *
 496:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 19


 497:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 498:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 499:Generated_Source\PSoC4/CyLib.c **** *
 500:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 501:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 502:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 503:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 504:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 505:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 508:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 509:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 510:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 511:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 512:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 513:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 514:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 515:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 516:Generated_Source\PSoC4/CyLib.c **** *
 517:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 518:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 519:Generated_Source\PSoC4/CyLib.c **** {
 524              		.loc 1 519 0
 525              		.cfi_startproc
 526 0000 90B5     		push	{r4, r7, lr}
 527              		.cfi_def_cfa_offset 12
 528              		.cfi_offset 4, -12
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531 0002 85B0     		sub	sp, sp, #20
 532              		.cfi_def_cfa_offset 32
 533 0004 00AF     		add	r7, sp, #0
 534              		.cfi_def_cfa_register 7
 535 0006 7860     		str	r0, [r7, #4]
 520:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 536              		.loc 1 522 0
 537 0008 0F23     		mov	r3, #15
 538 000a FC18     		add	r4, r7, r3
 539 000c FFF7FEFF 		bl	CyEnterCriticalSection
 540 0010 031C     		mov	r3, r0
 541 0012 2370     		strb	r3, [r4]
 523:Generated_Source\PSoC4/CyLib.c **** 
 524:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 542              		.loc 1 524 0
 543 0014 094B     		ldr	r3, .L31
 544 0016 7A68     		ldr	r2, [r7, #4]
 545 0018 9201     		lsl	r2, r2, #6
 546 001a FF21     		mov	r1, #255
 547 001c 1140     		and	r1, r2
 525:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 526:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 548              		.loc 1 526 0
 549 001e 074A     		ldr	r2, .L31
 550 0020 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 20


 551 0022 C020     		mov	r0, #192
 552 0024 8243     		bic	r2, r0
 525:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 553              		.loc 1 525 0
 554 0026 0A43     		orr	r2, r1
 524:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 555              		.loc 1 524 0
 556 0028 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 528:Generated_Source\PSoC4/CyLib.c **** 
 529:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 557              		.loc 1 529 0
 558 002a 0F23     		mov	r3, #15
 559 002c FB18     		add	r3, r7, r3
 560 002e 1B78     		ldrb	r3, [r3]
 561 0030 181C     		mov	r0, r3
 562 0032 FFF7FEFF 		bl	CyExitCriticalSection
 530:Generated_Source\PSoC4/CyLib.c **** }
 563              		.loc 1 530 0
 564 0036 BD46     		mov	sp, r7
 565 0038 05B0     		add	sp, sp, #20
 566              		@ sp needed
 567 003a 90BD     		pop	{r4, r7, pc}
 568              	.L32:
 569              		.align	2
 570              	.L31:
 571 003c 28000340 		.word	1073938472
 572              		.cfi_endproc
 573              	.LFE8:
 574              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 575              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 576              		.align	2
 577              		.global	CySysClkWriteImoFreq
 578              		.code	16
 579              		.thumb_func
 580              		.type	CySysClkWriteImoFreq, %function
 581              	CySysClkWriteImoFreq:
 582              	.LFB9:
 531:Generated_Source\PSoC4/CyLib.c **** 
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 535:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 536:Generated_Source\PSoC4/CyLib.c **** *
 537:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 538:Generated_Source\PSoC4/CyLib.c **** *
 539:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 540:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 541:Generated_Source\PSoC4/CyLib.c **** *
 542:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 543:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 544:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 545:Generated_Source\PSoC4/CyLib.c **** *
 546:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 547:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 548:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 549:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 21


 550:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 551:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 552:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 553:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 554:Generated_Source\PSoC4/CyLib.c **** *
 555:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 556:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 557:Generated_Source\PSoC4/CyLib.c **** *
 558:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 559:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 560:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 561:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 562:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 563:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 564:Generated_Source\PSoC4/CyLib.c **** *
 565:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 566:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 567:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 568:Generated_Source\PSoC4/CyLib.c **** *
 569:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 570:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 571:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 572:Generated_Source\PSoC4/CyLib.c **** * 4.
 573:Generated_Source\PSoC4/CyLib.c **** *
 574:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 575:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 576:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 577:Generated_Source\PSoC4/CyLib.c ****     {
 578:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 579:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 580:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 581:Generated_Source\PSoC4/CyLib.c ****         #else
 582:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 583:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 584:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 585:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 586:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 587:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 588:Generated_Source\PSoC4/CyLib.c **** 
 589:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 590:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 591:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 592:Generated_Source\PSoC4/CyLib.c **** 
 593:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 594:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 595:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 596:Generated_Source\PSoC4/CyLib.c **** 
 597:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 598:Generated_Source\PSoC4/CyLib.c **** 
 599:Generated_Source\PSoC4/CyLib.c **** 
 600:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 601:Generated_Source\PSoC4/CyLib.c **** 
 602:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 603:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 604:Generated_Source\PSoC4/CyLib.c ****             {
 605:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 606:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 22


 607:Generated_Source\PSoC4/CyLib.c ****             }
 608:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 609:Generated_Source\PSoC4/CyLib.c **** 
 610:Generated_Source\PSoC4/CyLib.c **** 
 611:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 612:Generated_Source\PSoC4/CyLib.c **** 
 613:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 614:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 615:Generated_Source\PSoC4/CyLib.c ****                 {
 616:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 617:Generated_Source\PSoC4/CyLib.c **** 
 618:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 619:Generated_Source\PSoC4/CyLib.c ****                 {
 620:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 621:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 622:Generated_Source\PSoC4/CyLib.c ****                 }
 623:Generated_Source\PSoC4/CyLib.c **** 
 624:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 625:Generated_Source\PSoC4/CyLib.c ****                 }
 626:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 627:Generated_Source\PSoC4/CyLib.c **** 
 628:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 629:Generated_Source\PSoC4/CyLib.c **** 
 630:Generated_Source\PSoC4/CyLib.c **** 
 631:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 632:Generated_Source\PSoC4/CyLib.c **** 
 633:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 634:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 635:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 636:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 637:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 640:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 641:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 642:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 645:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 646:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 647:Generated_Source\PSoC4/CyLib.c **** 
 648:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 649:Generated_Source\PSoC4/CyLib.c **** 
 650:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 651:Generated_Source\PSoC4/CyLib.c ****         {
 652:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 653:Generated_Source\PSoC4/CyLib.c ****             {
 654:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 655:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 656:Generated_Source\PSoC4/CyLib.c ****             }
 657:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 658:Generated_Source\PSoC4/CyLib.c ****             {
 659:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 660:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 661:Generated_Source\PSoC4/CyLib.c ****             }
 662:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 663:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 23


 664:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 665:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 666:Generated_Source\PSoC4/CyLib.c ****             }
 667:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 668:Generated_Source\PSoC4/CyLib.c ****             {
 669:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 670:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 671:Generated_Source\PSoC4/CyLib.c ****             }
 672:Generated_Source\PSoC4/CyLib.c ****             else
 673:Generated_Source\PSoC4/CyLib.c ****             {
 674:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 675:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 676:Generated_Source\PSoC4/CyLib.c ****             }
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 679:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 680:Generated_Source\PSoC4/CyLib.c **** 
 681:Generated_Source\PSoC4/CyLib.c **** 
 682:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 683:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 684:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 685:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 686:Generated_Source\PSoC4/CyLib.c ****             *
 687:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 688:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 689:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 690:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 691:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 692:Generated_Source\PSoC4/CyLib.c ****             {
 693:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 694:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 695:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 698:Generated_Source\PSoC4/CyLib.c **** 
 699:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 700:Generated_Source\PSoC4/CyLib.c ****             }
 701:Generated_Source\PSoC4/CyLib.c ****             else
 702:Generated_Source\PSoC4/CyLib.c ****             {
 703:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 704:Generated_Source\PSoC4/CyLib.c ****             }
 705:Generated_Source\PSoC4/CyLib.c **** 
 706:Generated_Source\PSoC4/CyLib.c **** 
 707:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 708:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 709:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 710:Generated_Source\PSoC4/CyLib.c ****             *
 711:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 712:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 713:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 714:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 715:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 716:Generated_Source\PSoC4/CyLib.c ****             {
 717:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 718:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 719:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 720:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 24


 721:Generated_Source\PSoC4/CyLib.c **** 
 722:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 725:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 726:Generated_Source\PSoC4/CyLib.c ****                 {
 727:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 728:Generated_Source\PSoC4/CyLib.c ****                 }
 729:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 730:Generated_Source\PSoC4/CyLib.c ****                 {
 731:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 732:Generated_Source\PSoC4/CyLib.c ****                 }
 733:Generated_Source\PSoC4/CyLib.c ****                 else
 734:Generated_Source\PSoC4/CyLib.c ****                 {
 735:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 736:Generated_Source\PSoC4/CyLib.c ****                 }
 737:Generated_Source\PSoC4/CyLib.c ****             #else
 738:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 739:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 740:Generated_Source\PSoC4/CyLib.c **** 
 741:Generated_Source\PSoC4/CyLib.c **** 
 742:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 743:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 744:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 745:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 746:Generated_Source\PSoC4/CyLib.c **** 
 747:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 748:Generated_Source\PSoC4/CyLib.c ****             {
 749:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 750:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 751:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 752:Generated_Source\PSoC4/CyLib.c ****             }
 753:Generated_Source\PSoC4/CyLib.c ****         }
 754:Generated_Source\PSoC4/CyLib.c ****         else
 755:Generated_Source\PSoC4/CyLib.c ****         {
 756:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 757:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 758:Generated_Source\PSoC4/CyLib.c ****         }
 759:Generated_Source\PSoC4/CyLib.c **** 
 760:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 761:Generated_Source\PSoC4/CyLib.c **** 
 762:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 763:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 764:Generated_Source\PSoC4/CyLib.c ****             {
 765:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 766:Generated_Source\PSoC4/CyLib.c ****             }
 767:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 770:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 771:Generated_Source\PSoC4/CyLib.c ****             {
 772:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 773:Generated_Source\PSoC4/CyLib.c ****             }
 774:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 775:Generated_Source\PSoC4/CyLib.c **** 
 776:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 777:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 25


 778:Generated_Source\PSoC4/CyLib.c **** 
 779:Generated_Source\PSoC4/CyLib.c **** #else
 780:Generated_Source\PSoC4/CyLib.c **** 
 781:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 782:Generated_Source\PSoC4/CyLib.c ****     {
 583              		.loc 1 782 0
 584              		.cfi_startproc
 585 0000 90B5     		push	{r4, r7, lr}
 586              		.cfi_def_cfa_offset 12
 587              		.cfi_offset 4, -12
 588              		.cfi_offset 7, -8
 589              		.cfi_offset 14, -4
 590 0002 85B0     		sub	sp, sp, #20
 591              		.cfi_def_cfa_offset 32
 592 0004 00AF     		add	r7, sp, #0
 593              		.cfi_def_cfa_register 7
 594 0006 7860     		str	r0, [r7, #4]
 783:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 784:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 785:Generated_Source\PSoC4/CyLib.c **** 
 786:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 787:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 595              		.loc 1 787 0
 596 0008 0023     		mov	r3, #0
 597 000a FB60     		str	r3, [r7, #12]
 788:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 789:Generated_Source\PSoC4/CyLib.c ****         
 790:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 791:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 792:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 795:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 796:Generated_Source\PSoC4/CyLib.c ****         #else
 797:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 598              		.loc 1 797 0
 599 000c 7B68     		ldr	r3, [r7, #4]
 600 000e 182B     		cmp	r3, #24
 601 0010 11D0     		beq	.L34
 602              		.loc 1 797 0 is_stmt 0 discriminator 1
 603 0012 7B68     		ldr	r3, [r7, #4]
 604 0014 1C2B     		cmp	r3, #28
 605 0016 0ED0     		beq	.L34
 606              		.loc 1 797 0 discriminator 2
 607 0018 7B68     		ldr	r3, [r7, #4]
 608 001a 202B     		cmp	r3, #32
 609 001c 0BD0     		beq	.L34
 610              		.loc 1 797 0 discriminator 3
 611 001e 7B68     		ldr	r3, [r7, #4]
 612 0020 242B     		cmp	r3, #36
 613 0022 08D0     		beq	.L34
 798:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 614              		.loc 1 798 0 is_stmt 1
 615 0024 7B68     		ldr	r3, [r7, #4]
 616 0026 282B     		cmp	r3, #40
 617 0028 05D0     		beq	.L34
 618              		.loc 1 798 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 26


 619 002a 7B68     		ldr	r3, [r7, #4]
 620 002c 2C2B     		cmp	r3, #44
 621 002e 02D0     		beq	.L34
 622              		.loc 1 798 0 discriminator 2
 623 0030 7B68     		ldr	r3, [r7, #4]
 624 0032 302B     		cmp	r3, #48
 625 0034 65D1     		bne	.L35
 626              	.L34:
 799:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 800:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 801:Generated_Source\PSoC4/CyLib.c ****         {
 802:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 627              		.loc 1 802 0 is_stmt 1
 628 0036 0B23     		mov	r3, #11
 629 0038 FC18     		add	r4, r7, r3
 630 003a FFF7FEFF 		bl	CyEnterCriticalSection
 631 003e 031C     		mov	r3, r0
 632 0040 2370     		strb	r3, [r4]
 803:Generated_Source\PSoC4/CyLib.c **** 
 804:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 805:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 633              		.loc 1 805 0
 634 0042 FFF7FEFF 		bl	CySysClkImoGetWcoLock
 635 0046 031E     		sub	r3, r0, #0
 636 0048 03D0     		beq	.L36
 806:Generated_Source\PSoC4/CyLib.c ****                 {
 807:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 637              		.loc 1 807 0
 638 004a 0123     		mov	r3, #1
 639 004c FB60     		str	r3, [r7, #12]
 808:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 640              		.loc 1 808 0
 641 004e FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 642              	.L36:
 809:Generated_Source\PSoC4/CyLib.c ****                 }
 810:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 811:Generated_Source\PSoC4/CyLib.c **** 
 812:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 816:Generated_Source\PSoC4/CyLib.c ****                     {
 817:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 818:Generated_Source\PSoC4/CyLib.c **** 
 819:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 820:Generated_Source\PSoC4/CyLib.c ****                     {
 821:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 822:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 823:Generated_Source\PSoC4/CyLib.c ****                     }
 824:Generated_Source\PSoC4/CyLib.c **** 
 825:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 826:Generated_Source\PSoC4/CyLib.c ****                     }
 827:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 830:Generated_Source\PSoC4/CyLib.c **** 
 831:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 27


 832:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 833:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 643              		.loc 1 833 0
 644 0052 2F4B     		ldr	r3, .L40
 645 0054 2E4A     		ldr	r2, .L40
 646 0056 1268     		ldr	r2, [r2]
 647 0058 0721     		mov	r1, #7
 648 005a 8A43     		bic	r2, r1
 649 005c 1A60     		str	r2, [r3]
 834:Generated_Source\PSoC4/CyLib.c **** 
 835:Generated_Source\PSoC4/CyLib.c **** 
 836:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 837:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 839:Generated_Source\PSoC4/CyLib.c ****                 {
 840:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 841:Generated_Source\PSoC4/CyLib.c ****                 }
 842:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 843:Generated_Source\PSoC4/CyLib.c ****                 {
 844:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 845:Generated_Source\PSoC4/CyLib.c ****                 }
 846:Generated_Source\PSoC4/CyLib.c ****                 else
 847:Generated_Source\PSoC4/CyLib.c ****                 {
 848:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 849:Generated_Source\PSoC4/CyLib.c ****                 }
 850:Generated_Source\PSoC4/CyLib.c ****             #else
 851:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 650              		.loc 1 851 0
 651 005e 7B68     		ldr	r3, [r7, #4]
 652 0060 2C4A     		ldr	r2, .L40+4
 653 0062 9A18     		add	r2, r3, r2
 654 0064 0A23     		mov	r3, #10
 655 0066 FB18     		add	r3, r7, r3
 656 0068 1278     		ldrb	r2, [r2]
 657 006a 1A70     		strb	r2, [r3]
 852:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 853:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 658              		.loc 1 853 0
 659 006c 2A4B     		ldr	r3, .L40+8
 660 006e 0A22     		mov	r2, #10
 661 0070 BA18     		add	r2, r7, r2
 662 0072 1278     		ldrb	r2, [r2]
 663 0074 1A60     		str	r2, [r3]
 854:Generated_Source\PSoC4/CyLib.c **** 
 855:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 856:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 664              		.loc 1 856 0
 665 0076 294B     		ldr	r3, .L40+12
 666 0078 284A     		ldr	r2, .L40+12
 667 007a 1268     		ldr	r2, [r2]
 668 007c 0721     		mov	r1, #7
 669 007e 8A43     		bic	r2, r1
 670 0080 1A60     		str	r2, [r3]
 857:Generated_Source\PSoC4/CyLib.c **** 
 858:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 859:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 671              		.loc 1 859 0
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 28


 672 0082 274B     		ldr	r3, .L40+16
 673 0084 264A     		ldr	r2, .L40+16
 674 0086 1268     		ldr	r2, [r2]
 675 0088 7F21     		mov	r1, #127
 676 008a 8A43     		bic	r2, r1
 677 008c 111C     		mov	r1, r2
 860:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 678              		.loc 1 860 0
 679 008e 7A68     		ldr	r2, [r7, #4]
 680 0090 2448     		ldr	r0, .L40+20
 681 0092 8446     		mov	ip, r0
 682 0094 6244     		add	r2, r2, ip
 683 0096 1278     		ldrb	r2, [r2]
 684 0098 D2B2     		uxtb	r2, r2
 685 009a 101C     		mov	r0, r2
 686 009c 7F22     		mov	r2, #127
 687 009e 0240     		and	r2, r0
 859:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 688              		.loc 1 859 0
 689 00a0 0A43     		orr	r2, r1
 690 00a2 1A60     		str	r2, [r3]
 861:Generated_Source\PSoC4/CyLib.c **** 
 862:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 691              		.loc 1 862 0
 692 00a4 3220     		mov	r0, #50
 693 00a6 FFF7FEFF 		bl	CyDelayCycles
 863:Generated_Source\PSoC4/CyLib.c **** 
 864:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 694              		.loc 1 864 0
 695 00aa 7B68     		ldr	r3, [r7, #4]
 696 00ac 182B     		cmp	r3, #24
 697 00ae 1CD9     		bls	.L37
 865:Generated_Source\PSoC4/CyLib.c ****             {
 866:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 867:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 698              		.loc 1 867 0
 699 00b0 174B     		ldr	r3, .L40
 700 00b2 174A     		ldr	r2, .L40
 701 00b4 1268     		ldr	r2, [r2]
 702 00b6 0721     		mov	r1, #7
 703 00b8 8A43     		bic	r2, r1
 704 00ba 111C     		mov	r1, r2
 868:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 705              		.loc 1 868 0
 706 00bc 7A68     		ldr	r2, [r7, #4]
 707 00be 1C3A     		sub	r2, r2, #28
 708 00c0 9208     		lsr	r2, r2, #2
 709 00c2 0720     		mov	r0, #7
 710 00c4 0240     		and	r2, r0
 867:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 711              		.loc 1 867 0
 712 00c6 0A43     		orr	r2, r1
 713 00c8 1A60     		str	r2, [r3]
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 714              		.loc 1 870 0
 715 00ca 3220     		mov	r0, #50
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 29


 716 00cc FFF7FEFF 		bl	CyDelayCycles
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 873:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 874:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 717              		.loc 1 874 0
 718 00d0 0F4B     		ldr	r3, .L40
 719 00d2 0F4A     		ldr	r2, .L40
 720 00d4 1268     		ldr	r2, [r2]
 721 00d6 0721     		mov	r1, #7
 722 00d8 8A43     		bic	r2, r1
 723 00da 111C     		mov	r1, r2
 875:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 724              		.loc 1 875 0
 725 00dc 7A68     		ldr	r2, [r7, #4]
 726 00de 183A     		sub	r2, r2, #24
 727 00e0 9208     		lsr	r2, r2, #2
 728 00e2 0720     		mov	r0, #7
 729 00e4 0240     		and	r2, r0
 874:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 730              		.loc 1 874 0
 731 00e6 0A43     		orr	r2, r1
 732 00e8 1A60     		str	r2, [r3]
 733              	.L37:
 876:Generated_Source\PSoC4/CyLib.c ****             }
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 879:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 734              		.loc 1 879 0
 735 00ea FB68     		ldr	r3, [r7, #12]
 736 00ec 012B     		cmp	r3, #1
 737 00ee 01D1     		bne	.L38
 880:Generated_Source\PSoC4/CyLib.c ****                 {
 881:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 738              		.loc 1 881 0
 739 00f0 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 740              	.L38:
 882:Generated_Source\PSoC4/CyLib.c ****                 }
 883:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 884:Generated_Source\PSoC4/CyLib.c ****         
 885:Generated_Source\PSoC4/CyLib.c ****         
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 892:Generated_Source\PSoC4/CyLib.c **** 
 893:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 741              		.loc 1 893 0
 742 00f4 0B23     		mov	r3, #11
 743 00f6 FB18     		add	r3, r7, r3
 744 00f8 1B78     		ldrb	r3, [r3]
 745 00fa 181C     		mov	r0, r3
 746 00fc FFF7FEFF 		bl	CyExitCriticalSection
 747 0100 02E0     		b	.L33
 748              	.L35:
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 30


 894:Generated_Source\PSoC4/CyLib.c ****         }
 895:Generated_Source\PSoC4/CyLib.c ****         else
 896:Generated_Source\PSoC4/CyLib.c ****         {
 897:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 898:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 749              		.loc 1 898 0 discriminator 1
 750 0102 0020     		mov	r0, #0
 751 0104 FFF7FEFF 		bl	CyHalt
 752              	.L33:
 899:Generated_Source\PSoC4/CyLib.c ****         }
 900:Generated_Source\PSoC4/CyLib.c ****     }
 753              		.loc 1 900 0
 754 0108 BD46     		mov	sp, r7
 755 010a 05B0     		add	sp, sp, #20
 756              		@ sp needed
 757 010c 90BD     		pop	{r4, r7, pc}
 758              	.L41:
 759 010e C046     		.align	2
 760              	.L40:
 761 0110 080F0340 		.word	1073942280
 762 0114 CDF1FF0F 		.word	268431821
 763 0118 0C0F0340 		.word	1073942284
 764 011c 100F0340 		.word	1073942288
 765 0120 180F0340 		.word	1073942296
 766 0124 B4F1FF0F 		.word	268431796
 767              		.cfi_endproc
 768              	.LFE9:
 769              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 770              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 771              		.align	2
 772              		.global	CySysClkWriteHfclkDiv
 773              		.code	16
 774              		.thumb_func
 775              		.type	CySysClkWriteHfclkDiv, %function
 776              	CySysClkWriteHfclkDiv:
 777              	.LFB10:
 901:Generated_Source\PSoC4/CyLib.c **** 
 902:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c **** 
 905:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 909:Generated_Source\PSoC4/CyLib.c ****     *
 910:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 911:Generated_Source\PSoC4/CyLib.c ****     *
 912:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 913:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 914:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 915:Generated_Source\PSoC4/CyLib.c ****     *
 916:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 917:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 918:Generated_Source\PSoC4/CyLib.c ****     *
 919:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 920:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 921:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 31


 922:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 923:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 924:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 925:Generated_Source\PSoC4/CyLib.c ****     *
 926:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 927:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 928:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 929:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 930:Generated_Source\PSoC4/CyLib.c ****     *
 931:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 932:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 933:Generated_Source\PSoC4/CyLib.c ****     {
 778              		.loc 1 933 0
 779              		.cfi_startproc
 780 0000 90B5     		push	{r4, r7, lr}
 781              		.cfi_def_cfa_offset 12
 782              		.cfi_offset 4, -12
 783              		.cfi_offset 7, -8
 784              		.cfi_offset 14, -4
 785 0002 85B0     		sub	sp, sp, #20
 786              		.cfi_def_cfa_offset 32
 787 0004 00AF     		add	r7, sp, #0
 788              		.cfi_def_cfa_register 7
 789 0006 7860     		str	r0, [r7, #4]
 934:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 935:Generated_Source\PSoC4/CyLib.c **** 
 936:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 790              		.loc 1 936 0
 791 0008 0F23     		mov	r3, #15
 792 000a FC18     		add	r4, r7, r3
 793 000c FFF7FEFF 		bl	CyEnterCriticalSection
 794 0010 031C     		mov	r3, r0
 795 0012 2370     		strb	r3, [r4]
 937:Generated_Source\PSoC4/CyLib.c **** 
 938:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 796              		.loc 1 938 0
 797 0014 0A4B     		ldr	r3, .L43
 798 0016 0A4A     		ldr	r2, .L43
 799 0018 1268     		ldr	r2, [r2]
 800 001a 0C21     		mov	r1, #12
 801 001c 8A43     		bic	r2, r1
 802 001e 111C     		mov	r1, r2
 939:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 940:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 803              		.loc 1 940 0
 804 0020 7A68     		ldr	r2, [r7, #4]
 805 0022 0320     		mov	r0, #3
 806 0024 0240     		and	r2, r0
 807 0026 9200     		lsl	r2, r2, #2
 939:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 808              		.loc 1 939 0
 809 0028 0A43     		orr	r2, r1
 938:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 810              		.loc 1 938 0
 811 002a 1A60     		str	r2, [r3]
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 32


 812              		.loc 1 942 0
 813 002c 0F23     		mov	r3, #15
 814 002e FB18     		add	r3, r7, r3
 815 0030 1B78     		ldrb	r3, [r3]
 816 0032 181C     		mov	r0, r3
 817 0034 FFF7FEFF 		bl	CyExitCriticalSection
 943:Generated_Source\PSoC4/CyLib.c ****     }
 818              		.loc 1 943 0
 819 0038 BD46     		mov	sp, r7
 820 003a 05B0     		add	sp, sp, #20
 821              		@ sp needed
 822 003c 90BD     		pop	{r4, r7, pc}
 823              	.L44:
 824 003e C046     		.align	2
 825              	.L43:
 826 0040 28000340 		.word	1073938472
 827              		.cfi_endproc
 828              	.LFE10:
 829              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 830              		.section	.text.CySysGetResetReason,"ax",%progbits
 831              		.align	2
 832              		.global	CySysGetResetReason
 833              		.code	16
 834              		.thumb_func
 835              		.type	CySysGetResetReason, %function
 836              	CySysGetResetReason:
 837              	.LFB11:
 944:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 945:Generated_Source\PSoC4/CyLib.c **** 
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 948:Generated_Source\PSoC4/CyLib.c **** 
 949:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 950:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 951:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 952:Generated_Source\PSoC4/CyLib.c ****     *
 953:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 954:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
 955:Generated_Source\PSoC4/CyLib.c ****     *
 956:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
 957:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
 958:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
 959:Generated_Source\PSoC4/CyLib.c ****     * called.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
 962:Generated_Source\PSoC4/CyLib.c ****     *
 963:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
 966:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
 969:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
 970:Generated_Source\PSoC4/CyLib.c ****     *
 971:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
 972:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
 973:Generated_Source\PSoC4/CyLib.c ****     * is returned.
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 33


 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
 976:Generated_Source\PSoC4/CyLib.c ****     *
 977:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 978:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 979:Generated_Source\PSoC4/CyLib.c ****     {
 980:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 981:Generated_Source\PSoC4/CyLib.c **** 
 982:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 983:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
 984:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 985:Generated_Source\PSoC4/CyLib.c **** 
 986:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
 987:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 988:Generated_Source\PSoC4/CyLib.c **** 
 989:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 990:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 991:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 992:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 993:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 994:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 995:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 998:Generated_Source\PSoC4/CyLib.c ****         {
 999:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1000:Generated_Source\PSoC4/CyLib.c **** 
1001:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1002:Generated_Source\PSoC4/CyLib.c ****             {
1003:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1006:Generated_Source\PSoC4/CyLib.c ****                 {
1007:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1008:Generated_Source\PSoC4/CyLib.c ****                     break;
1009:Generated_Source\PSoC4/CyLib.c ****                 }
1010:Generated_Source\PSoC4/CyLib.c ****             }
1011:Generated_Source\PSoC4/CyLib.c **** 
1012:Generated_Source\PSoC4/CyLib.c ****         }
1013:Generated_Source\PSoC4/CyLib.c **** 
1014:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1015:Generated_Source\PSoC4/CyLib.c ****     }
1016:Generated_Source\PSoC4/CyLib.c **** 
1017:Generated_Source\PSoC4/CyLib.c **** 
1018:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1019:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1020:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1021:Generated_Source\PSoC4/CyLib.c ****     *
1022:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1025:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1026:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1027:Generated_Source\PSoC4/CyLib.c ****     *
1028:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1029:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1030:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 34


1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1037:Generated_Source\PSoC4/CyLib.c ****         #else
1038:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1039:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1040:Generated_Source\PSoC4/CyLib.c ****     }
1041:Generated_Source\PSoC4/CyLib.c **** 
1042:Generated_Source\PSoC4/CyLib.c **** 
1043:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1044:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1045:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1046:Generated_Source\PSoC4/CyLib.c ****     *
1047:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1048:Generated_Source\PSoC4/CyLib.c ****     *
1049:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1050:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1051:Generated_Source\PSoC4/CyLib.c ****     *
1052:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1053:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1054:Generated_Source\PSoC4/CyLib.c ****     *
1055:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1056:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1057:Generated_Source\PSoC4/CyLib.c ****     *
1058:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1059:Generated_Source\PSoC4/CyLib.c ****     *
1060:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1061:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1062:Generated_Source\PSoC4/CyLib.c ****     {
1063:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1064:Generated_Source\PSoC4/CyLib.c **** 
1065:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1066:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1067:Generated_Source\PSoC4/CyLib.c ****         #else
1068:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1069:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1070:Generated_Source\PSoC4/CyLib.c **** 
1071:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1072:Generated_Source\PSoC4/CyLib.c ****     }
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1075:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1076:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1077:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1078:Generated_Source\PSoC4/CyLib.c ****         *
1079:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1080:Generated_Source\PSoC4/CyLib.c ****         *
1081:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1082:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1083:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1084:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1085:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1086:Generated_Source\PSoC4/CyLib.c ****         *
1087:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 35


1088:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1089:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1090:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1091:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1092:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1093:Generated_Source\PSoC4/CyLib.c ****         *
1094:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1095:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1096:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1097:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1098:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1099:Generated_Source\PSoC4/CyLib.c ****         *
1100:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1101:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1102:Generated_Source\PSoC4/CyLib.c ****         {
1103:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1104:Generated_Source\PSoC4/CyLib.c **** 
1105:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1106:Generated_Source\PSoC4/CyLib.c ****             {
1107:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1110:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1111:Generated_Source\PSoC4/CyLib.c **** 
1112:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1113:Generated_Source\PSoC4/CyLib.c ****             }
1114:Generated_Source\PSoC4/CyLib.c ****             else
1115:Generated_Source\PSoC4/CyLib.c ****             {
1116:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1117:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1118:Generated_Source\PSoC4/CyLib.c ****             }
1119:Generated_Source\PSoC4/CyLib.c ****         }
1120:Generated_Source\PSoC4/CyLib.c **** 
1121:Generated_Source\PSoC4/CyLib.c ****     #else
1122:Generated_Source\PSoC4/CyLib.c **** 
1123:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1124:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1125:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1126:Generated_Source\PSoC4/CyLib.c ****         *
1127:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1128:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1129:Generated_Source\PSoC4/CyLib.c ****         *
1130:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1131:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1132:Generated_Source\PSoC4/CyLib.c ****         *
1133:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1134:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1135:Generated_Source\PSoC4/CyLib.c ****         *
1136:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1137:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1138:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1139:Generated_Source\PSoC4/CyLib.c ****         *
1140:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1141:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1142:Generated_Source\PSoC4/CyLib.c ****         *
1143:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1144:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 36


1145:Generated_Source\PSoC4/CyLib.c ****         *
1146:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1147:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1148:Generated_Source\PSoC4/CyLib.c ****         *
1149:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1150:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1151:Generated_Source\PSoC4/CyLib.c ****         *
1152:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1153:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1154:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1155:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1156:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1157:Generated_Source\PSoC4/CyLib.c ****         *
1158:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1159:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1160:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1161:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1162:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1163:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1164:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1165:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1166:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1167:Generated_Source\PSoC4/CyLib.c ****         *
1168:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1169:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1170:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1171:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1172:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1173:Generated_Source\PSoC4/CyLib.c ****         *
1174:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1175:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1176:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1177:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1178:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1179:Generated_Source\PSoC4/CyLib.c ****         *
1180:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1181:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1182:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1183:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1184:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1185:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1186:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1187:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1188:Generated_Source\PSoC4/CyLib.c ****         *
1189:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1190:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1191:Generated_Source\PSoC4/CyLib.c ****         {
1192:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1193:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1194:Generated_Source\PSoC4/CyLib.c **** 
1195:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1196:Generated_Source\PSoC4/CyLib.c **** 
1197:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1198:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1199:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1200:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1201:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 37


1202:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1203:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1204:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1205:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1206:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1207:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1208:Generated_Source\PSoC4/CyLib.c **** 
1209:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1210:Generated_Source\PSoC4/CyLib.c **** 
1211:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1212:Generated_Source\PSoC4/CyLib.c ****         }
1213:Generated_Source\PSoC4/CyLib.c **** 
1214:Generated_Source\PSoC4/CyLib.c **** 
1215:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1216:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1217:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1218:Generated_Source\PSoC4/CyLib.c ****         *
1219:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1220:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1221:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1222:Generated_Source\PSoC4/CyLib.c ****         *
1223:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1224:Generated_Source\PSoC4/CyLib.c ****         *
1225:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1226:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1227:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1228:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1229:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1230:Generated_Source\PSoC4/CyLib.c ****         *
1231:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1232:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1233:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1234:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1235:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1236:Generated_Source\PSoC4/CyLib.c ****         *
1237:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1238:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1239:Generated_Source\PSoC4/CyLib.c ****         *
1240:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1241:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1242:Generated_Source\PSoC4/CyLib.c ****         {
1243:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1244:Generated_Source\PSoC4/CyLib.c **** 
1245:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1246:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1247:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1248:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1249:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1250:Generated_Source\PSoC4/CyLib.c **** 
1251:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1252:Generated_Source\PSoC4/CyLib.c **** 
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1255:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1256:Generated_Source\PSoC4/CyLib.c ****             {
1257:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1258:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 38


1259:Generated_Source\PSoC4/CyLib.c ****             else
1260:Generated_Source\PSoC4/CyLib.c ****             {
1261:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1262:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1263:Generated_Source\PSoC4/CyLib.c **** 
1264:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1265:Generated_Source\PSoC4/CyLib.c ****                 {
1266:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1267:Generated_Source\PSoC4/CyLib.c ****                 }
1268:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1269:Generated_Source\PSoC4/CyLib.c ****                 {
1270:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1271:Generated_Source\PSoC4/CyLib.c ****                 }
1272:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1273:Generated_Source\PSoC4/CyLib.c ****                 {
1274:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1275:Generated_Source\PSoC4/CyLib.c ****                 }
1276:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1277:Generated_Source\PSoC4/CyLib.c ****                 {
1278:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1279:Generated_Source\PSoC4/CyLib.c ****                 }
1280:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1281:Generated_Source\PSoC4/CyLib.c ****                 {
1282:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1283:Generated_Source\PSoC4/CyLib.c ****                 }
1284:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1285:Generated_Source\PSoC4/CyLib.c ****                 {
1286:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1287:Generated_Source\PSoC4/CyLib.c ****                 }
1288:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1289:Generated_Source\PSoC4/CyLib.c ****                 {
1290:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1291:Generated_Source\PSoC4/CyLib.c ****                 }
1292:Generated_Source\PSoC4/CyLib.c ****                 else
1293:Generated_Source\PSoC4/CyLib.c ****                 {
1294:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1295:Generated_Source\PSoC4/CyLib.c ****                 }
1296:Generated_Source\PSoC4/CyLib.c **** 
1297:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1298:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1299:Generated_Source\PSoC4/CyLib.c **** 
1300:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1301:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1302:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1303:Generated_Source\PSoC4/CyLib.c ****                 {
1304:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1305:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1306:Generated_Source\PSoC4/CyLib.c ****                 }
1307:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1308:Generated_Source\PSoC4/CyLib.c ****                 {
1309:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1310:Generated_Source\PSoC4/CyLib.c ****                 }
1311:Generated_Source\PSoC4/CyLib.c ****                 else
1312:Generated_Source\PSoC4/CyLib.c ****                 {
1313:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1314:Generated_Source\PSoC4/CyLib.c ****                 }
1315:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 39


1316:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1317:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1318:Generated_Source\PSoC4/CyLib.c ****                 {
1319:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1320:Generated_Source\PSoC4/CyLib.c ****                 }
1321:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1322:Generated_Source\PSoC4/CyLib.c ****                 {
1323:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1324:Generated_Source\PSoC4/CyLib.c ****                 }
1325:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1326:Generated_Source\PSoC4/CyLib.c ****                 {
1327:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1328:Generated_Source\PSoC4/CyLib.c ****                 }
1329:Generated_Source\PSoC4/CyLib.c ****                 else
1330:Generated_Source\PSoC4/CyLib.c ****                 {
1331:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1332:Generated_Source\PSoC4/CyLib.c ****                 }
1333:Generated_Source\PSoC4/CyLib.c **** 
1334:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1335:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1336:Generated_Source\PSoC4/CyLib.c **** 
1337:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1338:Generated_Source\PSoC4/CyLib.c **** 
1339:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1340:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1341:Generated_Source\PSoC4/CyLib.c ****                 {
1342:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1343:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1344:Generated_Source\PSoC4/CyLib.c ****                 }
1345:Generated_Source\PSoC4/CyLib.c ****                 else
1346:Generated_Source\PSoC4/CyLib.c ****                 {
1347:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1348:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1349:Generated_Source\PSoC4/CyLib.c ****                     */
1350:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1351:Generated_Source\PSoC4/CyLib.c ****                 }
1352:Generated_Source\PSoC4/CyLib.c ****             }
1353:Generated_Source\PSoC4/CyLib.c **** 
1354:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1355:Generated_Source\PSoC4/CyLib.c ****         }
1356:Generated_Source\PSoC4/CyLib.c **** 
1357:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1358:Generated_Source\PSoC4/CyLib.c **** 
1359:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1360:Generated_Source\PSoC4/CyLib.c **** 
1361:Generated_Source\PSoC4/CyLib.c **** 
1362:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1363:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1364:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1365:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1366:Generated_Source\PSoC4/CyLib.c ****     *
1367:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1368:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1369:Generated_Source\PSoC4/CyLib.c ****     *
1370:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1371:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1372:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 40


1373:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1374:Generated_Source\PSoC4/CyLib.c ****     *
1375:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1376:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1377:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1378:Generated_Source\PSoC4/CyLib.c ****     *
1379:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1380:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1381:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1382:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1383:Generated_Source\PSoC4/CyLib.c ****     *
1384:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1385:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1386:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1387:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1388:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1389:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1390:Generated_Source\PSoC4/CyLib.c ****     *
1391:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1392:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1393:Generated_Source\PSoC4/CyLib.c ****     {
1394:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1395:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1396:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1397:Generated_Source\PSoC4/CyLib.c **** 
1398:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1399:Generated_Source\PSoC4/CyLib.c ****         {
1400:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1403:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1404:Generated_Source\PSoC4/CyLib.c **** 
1405:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1406:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1407:Generated_Source\PSoC4/CyLib.c **** 
1408:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1409:Generated_Source\PSoC4/CyLib.c **** 
1410:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1411:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1412:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1413:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1414:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1415:Generated_Source\PSoC4/CyLib.c **** 
1416:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1417:Generated_Source\PSoC4/CyLib.c ****             {
1418:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1419:Generated_Source\PSoC4/CyLib.c **** 
1420:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1421:Generated_Source\PSoC4/CyLib.c ****                 {
1422:Generated_Source\PSoC4/CyLib.c **** 
1423:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1424:Generated_Source\PSoC4/CyLib.c ****                     {
1425:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1426:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1427:Generated_Source\PSoC4/CyLib.c ****                         break;
1428:Generated_Source\PSoC4/CyLib.c ****                     }
1429:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 41


1430:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1431:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****             }
1434:Generated_Source\PSoC4/CyLib.c ****         }
1435:Generated_Source\PSoC4/CyLib.c ****         else
1436:Generated_Source\PSoC4/CyLib.c ****         {
1437:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1438:Generated_Source\PSoC4/CyLib.c ****         }
1439:Generated_Source\PSoC4/CyLib.c **** 
1440:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1441:Generated_Source\PSoC4/CyLib.c ****     }
1442:Generated_Source\PSoC4/CyLib.c **** 
1443:Generated_Source\PSoC4/CyLib.c **** 
1444:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1445:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1446:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1447:Generated_Source\PSoC4/CyLib.c ****     *
1448:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1449:Generated_Source\PSoC4/CyLib.c ****     *
1450:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1451:Generated_Source\PSoC4/CyLib.c ****     *
1452:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1453:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1454:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1455:Generated_Source\PSoC4/CyLib.c ****     *
1456:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1457:Generated_Source\PSoC4/CyLib.c ****     *
1458:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1459:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1460:Generated_Source\PSoC4/CyLib.c ****     {
1461:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1462:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1463:Generated_Source\PSoC4/CyLib.c **** 
1464:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1465:Generated_Source\PSoC4/CyLib.c **** 
1466:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1467:Generated_Source\PSoC4/CyLib.c **** 
1468:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1469:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1470:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1471:Generated_Source\PSoC4/CyLib.c ****         {
1472:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1473:Generated_Source\PSoC4/CyLib.c ****         }
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1476:Generated_Source\PSoC4/CyLib.c **** 
1477:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1478:Generated_Source\PSoC4/CyLib.c ****     }
1479:Generated_Source\PSoC4/CyLib.c **** 
1480:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1481:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1482:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1483:Generated_Source\PSoC4/CyLib.c ****     *
1484:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1485:Generated_Source\PSoC4/CyLib.c ****     *
1486:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 42


1487:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1488:Generated_Source\PSoC4/CyLib.c ****     *
1489:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1490:Generated_Source\PSoC4/CyLib.c ****     *
1491:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1492:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1493:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1494:Generated_Source\PSoC4/CyLib.c ****     *
1495:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1496:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1497:Generated_Source\PSoC4/CyLib.c ****     {
1498:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1499:Generated_Source\PSoC4/CyLib.c **** 
1500:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1501:Generated_Source\PSoC4/CyLib.c ****         {
1502:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1503:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1504:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1505:Generated_Source\PSoC4/CyLib.c ****         }
1506:Generated_Source\PSoC4/CyLib.c ****     }
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** 
1509:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1510:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1511:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1512:Generated_Source\PSoC4/CyLib.c ****     *
1513:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1514:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1515:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1516:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1517:Generated_Source\PSoC4/CyLib.c ****     *
1518:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1519:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1520:Generated_Source\PSoC4/CyLib.c ****     *
1521:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1522:Generated_Source\PSoC4/CyLib.c ****     *
1523:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1524:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1525:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1526:Generated_Source\PSoC4/CyLib.c ****     *
1527:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1528:Generated_Source\PSoC4/CyLib.c ****     * divider.
1529:Generated_Source\PSoC4/CyLib.c ****     *
1530:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1531:Generated_Source\PSoC4/CyLib.c ****     *
1532:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1533:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1534:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1535:Generated_Source\PSoC4/CyLib.c ****     *
1536:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1537:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1538:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 43


1544:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1545:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1546:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1547:Generated_Source\PSoC4/CyLib.c **** 
1548:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1549:Generated_Source\PSoC4/CyLib.c **** 
1550:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1551:Generated_Source\PSoC4/CyLib.c **** 
1552:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1553:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1554:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1555:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1556:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1557:Generated_Source\PSoC4/CyLib.c ****         {
1558:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1559:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1560:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1561:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1562:Generated_Source\PSoC4/CyLib.c **** 
1563:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1564:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1565:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1566:Generated_Source\PSoC4/CyLib.c **** 
1567:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1570:Generated_Source\PSoC4/CyLib.c ****         }
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1573:Generated_Source\PSoC4/CyLib.c **** 
1574:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1575:Generated_Source\PSoC4/CyLib.c ****     }
1576:Generated_Source\PSoC4/CyLib.c **** 
1577:Generated_Source\PSoC4/CyLib.c **** 
1578:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1579:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1580:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1581:Generated_Source\PSoC4/CyLib.c ****     *
1582:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1583:Generated_Source\PSoC4/CyLib.c ****     *
1584:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1585:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1586:Generated_Source\PSoC4/CyLib.c ****     *
1587:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1588:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1589:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1590:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1591:Generated_Source\PSoC4/CyLib.c ****     *
1592:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1593:Generated_Source\PSoC4/CyLib.c ****     *
1594:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1595:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1596:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1597:Generated_Source\PSoC4/CyLib.c ****     *
1598:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1599:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1600:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 44


1601:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1602:Generated_Source\PSoC4/CyLib.c ****     *
1603:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1604:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1605:Generated_Source\PSoC4/CyLib.c ****     *
1606:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1607:Generated_Source\PSoC4/CyLib.c ****     *
1608:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1609:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1610:Generated_Source\PSoC4/CyLib.c ****     {
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1612:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1613:Generated_Source\PSoC4/CyLib.c **** 
1614:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1615:Generated_Source\PSoC4/CyLib.c **** 
1616:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1617:Generated_Source\PSoC4/CyLib.c ****         {
1618:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1619:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1621:Generated_Source\PSoC4/CyLib.c ****         }
1622:Generated_Source\PSoC4/CyLib.c **** 
1623:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1624:Generated_Source\PSoC4/CyLib.c ****     }
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c **** 
1627:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1628:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1629:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1630:Generated_Source\PSoC4/CyLib.c ****     *
1631:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1632:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1633:Generated_Source\PSoC4/CyLib.c ****     *
1634:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1635:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1636:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1639:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1640:Generated_Source\PSoC4/CyLib.c ****     *
1641:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1642:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1643:Generated_Source\PSoC4/CyLib.c ****     {
1644:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1645:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1646:Generated_Source\PSoC4/CyLib.c **** 
1647:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1650:Generated_Source\PSoC4/CyLib.c **** 
1651:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1652:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1653:Generated_Source\PSoC4/CyLib.c **** 
1654:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1655:Generated_Source\PSoC4/CyLib.c **** 
1656:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1657:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 45


1658:Generated_Source\PSoC4/CyLib.c **** 
1659:Generated_Source\PSoC4/CyLib.c **** 
1660:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1661:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1662:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1663:Generated_Source\PSoC4/CyLib.c ****     *
1664:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1665:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1668:Generated_Source\PSoC4/CyLib.c ****     *
1669:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1670:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1671:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1672:Generated_Source\PSoC4/CyLib.c ****     *
1673:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1674:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1677:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1678:Generated_Source\PSoC4/CyLib.c ****     {
1679:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1680:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1681:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1682:Generated_Source\PSoC4/CyLib.c **** 
1683:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1684:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1685:Generated_Source\PSoC4/CyLib.c **** 
1686:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1687:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1688:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1689:Generated_Source\PSoC4/CyLib.c ****         {
1690:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1691:Generated_Source\PSoC4/CyLib.c ****         }
1692:Generated_Source\PSoC4/CyLib.c **** 
1693:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1694:Generated_Source\PSoC4/CyLib.c ****     }
1695:Generated_Source\PSoC4/CyLib.c **** 
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1698:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1699:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1700:Generated_Source\PSoC4/CyLib.c ****     *
1701:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1702:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1703:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1704:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1705:Generated_Source\PSoC4/CyLib.c ****     *
1706:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1707:Generated_Source\PSoC4/CyLib.c ****     *
1708:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1709:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1710:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1713:Generated_Source\PSoC4/CyLib.c ****     *
1714:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 46


1715:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1716:Generated_Source\PSoC4/CyLib.c ****     {
1717:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1718:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1719:Generated_Source\PSoC4/CyLib.c **** 
1720:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1721:Generated_Source\PSoC4/CyLib.c **** 
1722:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1723:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1724:Generated_Source\PSoC4/CyLib.c **** 
1725:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1728:Generated_Source\PSoC4/CyLib.c ****     }
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c **** 
1731:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1732:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1733:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1734:Generated_Source\PSoC4/CyLib.c ****     *
1735:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1736:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1737:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1738:Generated_Source\PSoC4/CyLib.c ****     *
1739:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1740:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1741:Generated_Source\PSoC4/CyLib.c ****     *
1742:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1743:Generated_Source\PSoC4/CyLib.c ****     *
1744:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1745:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1746:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1747:Generated_Source\PSoC4/CyLib.c ****     *
1748:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1749:Generated_Source\PSoC4/CyLib.c ****     *
1750:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1753:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1754:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1756:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1757:Generated_Source\PSoC4/CyLib.c ****     *
1758:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1759:Generated_Source\PSoC4/CyLib.c ****     *
1760:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1761:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1762:Generated_Source\PSoC4/CyLib.c ****     *
1763:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1764:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1765:Generated_Source\PSoC4/CyLib.c ****     *
1766:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1767:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1768:Generated_Source\PSoC4/CyLib.c ****     {
1769:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1770:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1771:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 47


1772:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1773:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1776:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1777:Generated_Source\PSoC4/CyLib.c **** 
1778:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1779:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1780:Generated_Source\PSoC4/CyLib.c **** 
1781:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1782:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1783:Generated_Source\PSoC4/CyLib.c **** 
1784:Generated_Source\PSoC4/CyLib.c **** 
1785:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1786:Generated_Source\PSoC4/CyLib.c **** 
1787:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1788:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1789:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1790:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1791:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1792:Generated_Source\PSoC4/CyLib.c ****         {
1793:Generated_Source\PSoC4/CyLib.c **** 
1794:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1795:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1796:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1799:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1800:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1801:Generated_Source\PSoC4/CyLib.c **** 
1802:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1803:Generated_Source\PSoC4/CyLib.c ****             {
1804:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1805:Generated_Source\PSoC4/CyLib.c ****                 {
1806:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1809:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1810:Generated_Source\PSoC4/CyLib.c **** 
1811:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1812:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1813:Generated_Source\PSoC4/CyLib.c **** 
1814:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1815:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1816:Generated_Source\PSoC4/CyLib.c **** 
1817:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1818:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1819:Generated_Source\PSoC4/CyLib.c ****                     {
1820:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1821:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1822:Generated_Source\PSoC4/CyLib.c ****                         break;
1823:Generated_Source\PSoC4/CyLib.c ****                     }
1824:Generated_Source\PSoC4/CyLib.c ****                 }
1825:Generated_Source\PSoC4/CyLib.c **** 
1826:Generated_Source\PSoC4/CyLib.c **** 
1827:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1828:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 48


1829:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1830:Generated_Source\PSoC4/CyLib.c ****                     {
1831:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1832:Generated_Source\PSoC4/CyLib.c ****                     }
1833:Generated_Source\PSoC4/CyLib.c ****                 }
1834:Generated_Source\PSoC4/CyLib.c ****             }
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c ****         }
1837:Generated_Source\PSoC4/CyLib.c **** 
1838:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1839:Generated_Source\PSoC4/CyLib.c ****     }
1840:Generated_Source\PSoC4/CyLib.c **** 
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1843:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1844:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1847:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1850:Generated_Source\PSoC4/CyLib.c ****     *
1851:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1852:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * \param source:
1856:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1857:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
1858:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1859:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
1860:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1861:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1862:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1865:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1866:Generated_Source\PSoC4/CyLib.c ****     {
1867:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1868:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1869:Generated_Source\PSoC4/CyLib.c **** 
1870:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1871:Generated_Source\PSoC4/CyLib.c **** 
1872:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1873:Generated_Source\PSoC4/CyLib.c ****         {
1874:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1875:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1876:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1877:Generated_Source\PSoC4/CyLib.c ****         }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1880:Generated_Source\PSoC4/CyLib.c ****     }
1881:Generated_Source\PSoC4/CyLib.c **** 
1882:Generated_Source\PSoC4/CyLib.c **** 
1883:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1884:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
1885:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 49


1886:Generated_Source\PSoC4/CyLib.c ****     *
1887:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1888:Generated_Source\PSoC4/CyLib.c ****     *
1889:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1890:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1891:Generated_Source\PSoC4/CyLib.c ****     *
1892:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1893:Generated_Source\PSoC4/CyLib.c ****     *
1894:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1895:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1896:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1897:Generated_Source\PSoC4/CyLib.c ****     *
1898:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
1899:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
1900:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1901:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1902:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1903:Generated_Source\PSoC4/CyLib.c ****     *
1904:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
1905:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
1906:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
1907:Generated_Source\PSoC4/CyLib.c ****     *
1908:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1909:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
1910:Generated_Source\PSoC4/CyLib.c ****     {
1911:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1912:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1913:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1914:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1915:Generated_Source\PSoC4/CyLib.c **** 
1916:Generated_Source\PSoC4/CyLib.c **** 
1917:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1918:Generated_Source\PSoC4/CyLib.c **** 
1919:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1922:Generated_Source\PSoC4/CyLib.c ****         {
1923:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1924:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1925:Generated_Source\PSoC4/CyLib.c **** 
1926:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1927:Generated_Source\PSoC4/CyLib.c **** 
1928:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1929:Generated_Source\PSoC4/CyLib.c ****         }
1930:Generated_Source\PSoC4/CyLib.c **** 
1931:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1934:Generated_Source\PSoC4/CyLib.c ****     }
1935:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1936:Generated_Source\PSoC4/CyLib.c **** 
1937:Generated_Source\PSoC4/CyLib.c **** 
1938:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
1939:Generated_Source\PSoC4/CyLib.c **** 
1940:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1941:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
1942:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 50


1943:Generated_Source\PSoC4/CyLib.c ****     *
1944:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1945:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1946:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
1947:Generated_Source\PSoC4/CyLib.c ****     *
1948:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
1949:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
1950:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
1951:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
1952:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
1953:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
1954:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
1955:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
1956:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
1957:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
1958:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
1959:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
1960:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
1961:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
1962:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
1963:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
1964:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
1965:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
1966:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
1967:Generated_Source\PSoC4/CyLib.c ****     *
1968:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
1970:Generated_Source\PSoC4/CyLib.c ****     {
1971:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
1972:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
1973:Generated_Source\PSoC4/CyLib.c **** 
1974:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
1975:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
1976:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
1979:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
1980:Generated_Source\PSoC4/CyLib.c **** 
1981:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
1982:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
1985:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
1988:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
1989:Generated_Source\PSoC4/CyLib.c ****     }
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c **** 
1992:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1993:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
1994:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1995:Generated_Source\PSoC4/CyLib.c ****     *
1996:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1999:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 51


2000:Generated_Source\PSoC4/CyLib.c ****     {
2001:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2002:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2003:Generated_Source\PSoC4/CyLib.c ****     }
2004:Generated_Source\PSoC4/CyLib.c **** 
2005:Generated_Source\PSoC4/CyLib.c **** 
2006:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2008:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLib.c ****     *
2010:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2011:Generated_Source\PSoC4/CyLib.c ****     *
2012:Generated_Source\PSoC4/CyLib.c ****     * \return
2013:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2014:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2015:Generated_Source\PSoC4/CyLib.c ****     *
2016:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2017:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2018:Generated_Source\PSoC4/CyLib.c ****     {
2019:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2020:Generated_Source\PSoC4/CyLib.c ****     }
2021:Generated_Source\PSoC4/CyLib.c **** 
2022:Generated_Source\PSoC4/CyLib.c **** 
2023:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2024:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2025:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2026:Generated_Source\PSoC4/CyLib.c ****     *
2027:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2028:Generated_Source\PSoC4/CyLib.c ****     *
2029:Generated_Source\PSoC4/CyLib.c ****     * \return
2030:Generated_Source\PSoC4/CyLib.c ****     *  None
2031:Generated_Source\PSoC4/CyLib.c ****     *
2032:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2033:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2034:Generated_Source\PSoC4/CyLib.c ****     {
2035:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2036:Generated_Source\PSoC4/CyLib.c ****     }
2037:Generated_Source\PSoC4/CyLib.c **** 
2038:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2039:Generated_Source\PSoC4/CyLib.c **** 
2040:Generated_Source\PSoC4/CyLib.c **** 
2041:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2042:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2043:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2044:Generated_Source\PSoC4/CyLib.c **** *
2045:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2046:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2047:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2048:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2049:Generated_Source\PSoC4/CyLib.c **** *
2050:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2051:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2052:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2053:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2054:Generated_Source\PSoC4/CyLib.c **** *
2055:Generated_Source\PSoC4/CyLib.c **** * \return
2056:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 52


2057:Generated_Source\PSoC4/CyLib.c **** *
2058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2059:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2060:Generated_Source\PSoC4/CyLib.c **** {
 838              		.loc 1 2060 0
 839              		.cfi_startproc
 840 0000 80B5     		push	{r7, lr}
 841              		.cfi_def_cfa_offset 8
 842              		.cfi_offset 7, -8
 843              		.cfi_offset 14, -4
 844 0002 84B0     		sub	sp, sp, #16
 845              		.cfi_def_cfa_offset 24
 846 0004 00AF     		add	r7, sp, #0
 847              		.cfi_def_cfa_register 7
 848 0006 7860     		str	r0, [r7, #4]
2061:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 849              		.loc 1 2063 0
 850 0008 7B68     		ldr	r3, [r7, #4]
 851 000a 1922     		mov	r2, #25
 852 000c 1340     		and	r3, r2
 853 000e 7B60     		str	r3, [r7, #4]
2064:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 854              		.loc 1 2064 0
 855 0010 064B     		ldr	r3, .L47
 856 0012 1B68     		ldr	r3, [r3]
 857 0014 1922     		mov	r2, #25
 858 0016 1340     		and	r3, r2
 859 0018 FB60     		str	r3, [r7, #12]
2065:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2066:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 860              		.loc 1 2066 0
 861 001a 044B     		ldr	r3, .L47
 862 001c 7A68     		ldr	r2, [r7, #4]
 863 001e 1A60     		str	r2, [r3]
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 864              		.loc 1 2068 0
 865 0020 FB68     		ldr	r3, [r7, #12]
2069:Generated_Source\PSoC4/CyLib.c **** }
 866              		.loc 1 2069 0
 867 0022 181C     		mov	r0, r3
 868 0024 BD46     		mov	sp, r7
 869 0026 04B0     		add	sp, sp, #16
 870              		@ sp needed
 871 0028 80BD     		pop	{r7, pc}
 872              	.L48:
 873 002a C046     		.align	2
 874              	.L47:
 875 002c 54000340 		.word	1073938516
 876              		.cfi_endproc
 877              	.LFE11:
 878              		.size	CySysGetResetReason, .-CySysGetResetReason
 879              		.section	.text.CyDisableInts,"ax",%progbits
 880              		.align	2
 881              		.global	CyDisableInts
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 53


 882              		.code	16
 883              		.thumb_func
 884              		.type	CyDisableInts, %function
 885              	CyDisableInts:
 886              	.LFB12:
2070:Generated_Source\PSoC4/CyLib.c **** 
2071:Generated_Source\PSoC4/CyLib.c **** 
2072:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2073:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2074:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2075:Generated_Source\PSoC4/CyLib.c **** *
2076:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2077:Generated_Source\PSoC4/CyLib.c **** *
2078:Generated_Source\PSoC4/CyLib.c **** * \return
2079:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2080:Generated_Source\PSoC4/CyLib.c **** *
2081:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2082:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2083:Generated_Source\PSoC4/CyLib.c **** {
 887              		.loc 1 2083 0
 888              		.cfi_startproc
 889 0000 80B5     		push	{r7, lr}
 890              		.cfi_def_cfa_offset 8
 891              		.cfi_offset 7, -8
 892              		.cfi_offset 14, -4
 893 0002 82B0     		sub	sp, sp, #8
 894              		.cfi_def_cfa_offset 16
 895 0004 00AF     		add	r7, sp, #0
 896              		.cfi_def_cfa_register 7
2084:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2087:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 897              		.loc 1 2087 0
 898 0006 064B     		ldr	r3, .L51
 899 0008 1B68     		ldr	r3, [r3]
 900 000a 7B60     		str	r3, [r7, #4]
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2090:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 901              		.loc 1 2090 0
 902 000c 044B     		ldr	r3, .L51
 903 000e 0122     		mov	r2, #1
 904 0010 5242     		neg	r2, r2
 905 0012 1A60     		str	r2, [r3]
2091:Generated_Source\PSoC4/CyLib.c **** 
2092:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 906              		.loc 1 2092 0
 907 0014 7B68     		ldr	r3, [r7, #4]
2093:Generated_Source\PSoC4/CyLib.c **** }
 908              		.loc 1 2093 0
 909 0016 181C     		mov	r0, r3
 910 0018 BD46     		mov	sp, r7
 911 001a 02B0     		add	sp, sp, #8
 912              		@ sp needed
 913 001c 80BD     		pop	{r7, pc}
 914              	.L52:
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 54


 915 001e C046     		.align	2
 916              	.L51:
 917 0020 80E100E0 		.word	-536813184
 918              		.cfi_endproc
 919              	.LFE12:
 920              		.size	CyDisableInts, .-CyDisableInts
 921              		.section	.text.CyEnableInts,"ax",%progbits
 922              		.align	2
 923              		.global	CyEnableInts
 924              		.code	16
 925              		.thumb_func
 926              		.type	CyEnableInts, %function
 927              	CyEnableInts:
 928              	.LFB13:
2094:Generated_Source\PSoC4/CyLib.c **** 
2095:Generated_Source\PSoC4/CyLib.c **** 
2096:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2097:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2098:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2099:Generated_Source\PSoC4/CyLib.c **** *
2100:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2101:Generated_Source\PSoC4/CyLib.c **** *
2102:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2103:Generated_Source\PSoC4/CyLib.c **** *
2104:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2105:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2106:Generated_Source\PSoC4/CyLib.c **** {
 929              		.loc 1 2106 0
 930              		.cfi_startproc
 931 0000 80B5     		push	{r7, lr}
 932              		.cfi_def_cfa_offset 8
 933              		.cfi_offset 7, -8
 934              		.cfi_offset 14, -4
 935 0002 82B0     		sub	sp, sp, #8
 936              		.cfi_def_cfa_offset 16
 937 0004 00AF     		add	r7, sp, #0
 938              		.cfi_def_cfa_register 7
 939 0006 7860     		str	r0, [r7, #4]
2107:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 940              		.loc 1 2107 0
 941 0008 024B     		ldr	r3, .L54
 942 000a 7A68     		ldr	r2, [r7, #4]
 943 000c 1A60     		str	r2, [r3]
2108:Generated_Source\PSoC4/CyLib.c **** }
 944              		.loc 1 2108 0
 945 000e BD46     		mov	sp, r7
 946 0010 02B0     		add	sp, sp, #8
 947              		@ sp needed
 948 0012 80BD     		pop	{r7, pc}
 949              	.L55:
 950              		.align	2
 951              	.L54:
 952 0014 00E100E0 		.word	-536813312
 953              		.cfi_endproc
 954              	.LFE13:
 955              		.size	CyEnableInts, .-CyEnableInts
 956              		.section	.text.CyIntSetSysVector,"ax",%progbits
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 55


 957              		.align	2
 958              		.global	CyIntSetSysVector
 959              		.code	16
 960              		.thumb_func
 961              		.type	CyIntSetSysVector, %function
 962              	CyIntSetSysVector:
 963              	.LFB14:
2109:Generated_Source\PSoC4/CyLib.c **** 
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2112:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2113:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2114:Generated_Source\PSoC4/CyLib.c **** *
2115:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2116:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2117:Generated_Source\PSoC4/CyLib.c **** *
2118:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2119:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2120:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2121:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2122:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2123:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2124:Generated_Source\PSoC4/CyLib.c **** *
2125:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2126:Generated_Source\PSoC4/CyLib.c **** *
2127:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2128:Generated_Source\PSoC4/CyLib.c **** *
2129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2130:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2131:Generated_Source\PSoC4/CyLib.c **** {
 964              		.loc 1 2131 0
 965              		.cfi_startproc
 966 0000 80B5     		push	{r7, lr}
 967              		.cfi_def_cfa_offset 8
 968              		.cfi_offset 7, -8
 969              		.cfi_offset 14, -4
 970 0002 84B0     		sub	sp, sp, #16
 971              		.cfi_def_cfa_offset 24
 972 0004 00AF     		add	r7, sp, #0
 973              		.cfi_def_cfa_register 7
 974 0006 021C     		mov	r2, r0
 975 0008 3960     		str	r1, [r7]
 976 000a FB1D     		add	r3, r7, #7
 977 000c 1A70     		strb	r2, [r3]
2132:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2133:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 978              		.loc 1 2133 0
 979 000e 8023     		mov	r3, #128
 980 0010 9B05     		lsl	r3, r3, #22
 981 0012 FB60     		str	r3, [r7, #12]
2134:Generated_Source\PSoC4/CyLib.c **** 
2135:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 982              		.loc 1 2135 0
 983 0014 FB1D     		add	r3, r7, #7
 984 0016 1B78     		ldrb	r3, [r3]
 985 0018 0F2B     		cmp	r3, #15
 986 001a 02D9     		bls	.L57
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 56


 987              		.loc 1 2135 0 is_stmt 0 discriminator 1
 988 001c 0020     		mov	r0, #0
 989 001e FFF7FEFF 		bl	CyHalt
 990              	.L57:
2136:Generated_Source\PSoC4/CyLib.c **** 
2137:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2138:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 991              		.loc 1 2138 0 is_stmt 1
 992 0022 FB1D     		add	r3, r7, #7
 993 0024 1B78     		ldrb	r3, [r3]
 994 0026 9B00     		lsl	r3, r3, #2
 995 0028 FA68     		ldr	r2, [r7, #12]
 996 002a D318     		add	r3, r2, r3
 997 002c 1B68     		ldr	r3, [r3]
 998 002e BB60     		str	r3, [r7, #8]
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2141:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 999              		.loc 1 2141 0
 1000 0030 FB1D     		add	r3, r7, #7
 1001 0032 1B78     		ldrb	r3, [r3]
 1002 0034 9B00     		lsl	r3, r3, #2
 1003 0036 FA68     		ldr	r2, [r7, #12]
 1004 0038 D318     		add	r3, r2, r3
 1005 003a 3A68     		ldr	r2, [r7]
 1006 003c 1A60     		str	r2, [r3]
2142:Generated_Source\PSoC4/CyLib.c **** 
2143:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1007              		.loc 1 2143 0
 1008 003e BB68     		ldr	r3, [r7, #8]
2144:Generated_Source\PSoC4/CyLib.c **** }
 1009              		.loc 1 2144 0
 1010 0040 181C     		mov	r0, r3
 1011 0042 BD46     		mov	sp, r7
 1012 0044 04B0     		add	sp, sp, #16
 1013              		@ sp needed
 1014 0046 80BD     		pop	{r7, pc}
 1015              		.cfi_endproc
 1016              	.LFE14:
 1017              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1018              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1019              		.align	2
 1020              		.global	CyIntGetSysVector
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	CyIntGetSysVector, %function
 1024              	CyIntGetSysVector:
 1025              	.LFB15:
2145:Generated_Source\PSoC4/CyLib.c **** 
2146:Generated_Source\PSoC4/CyLib.c **** 
2147:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2148:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2149:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2150:Generated_Source\PSoC4/CyLib.c **** *
2151:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2152:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2153:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 57


2154:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2155:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2156:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2157:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2158:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2159:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2160:Generated_Source\PSoC4/CyLib.c **** *
2161:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2162:Generated_Source\PSoC4/CyLib.c **** *
2163:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2164:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2165:Generated_Source\PSoC4/CyLib.c **** {
 1026              		.loc 1 2165 0
 1027              		.cfi_startproc
 1028 0000 80B5     		push	{r7, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 7, -8
 1031              		.cfi_offset 14, -4
 1032 0002 84B0     		sub	sp, sp, #16
 1033              		.cfi_def_cfa_offset 24
 1034 0004 00AF     		add	r7, sp, #0
 1035              		.cfi_def_cfa_register 7
 1036 0006 021C     		mov	r2, r0
 1037 0008 FB1D     		add	r3, r7, #7
 1038 000a 1A70     		strb	r2, [r3]
2166:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1039              		.loc 1 2166 0
 1040 000c 8023     		mov	r3, #128
 1041 000e 9B05     		lsl	r3, r3, #22
 1042 0010 FB60     		str	r3, [r7, #12]
2167:Generated_Source\PSoC4/CyLib.c **** 
2168:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1043              		.loc 1 2168 0
 1044 0012 FB1D     		add	r3, r7, #7
 1045 0014 1B78     		ldrb	r3, [r3]
 1046 0016 0F2B     		cmp	r3, #15
 1047 0018 02D9     		bls	.L60
 1048              		.loc 1 2168 0 is_stmt 0 discriminator 1
 1049 001a 0020     		mov	r0, #0
 1050 001c FFF7FEFF 		bl	CyHalt
 1051              	.L60:
2169:Generated_Source\PSoC4/CyLib.c **** 
2170:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1052              		.loc 1 2170 0 is_stmt 1
 1053 0020 FB1D     		add	r3, r7, #7
 1054 0022 1B78     		ldrb	r3, [r3]
 1055 0024 9B00     		lsl	r3, r3, #2
 1056 0026 FA68     		ldr	r2, [r7, #12]
 1057 0028 D318     		add	r3, r2, r3
 1058 002a 1B68     		ldr	r3, [r3]
2171:Generated_Source\PSoC4/CyLib.c **** }
 1059              		.loc 1 2171 0
 1060 002c 181C     		mov	r0, r3
 1061 002e BD46     		mov	sp, r7
 1062 0030 04B0     		add	sp, sp, #16
 1063              		@ sp needed
 1064 0032 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 58


 1065              		.cfi_endproc
 1066              	.LFE15:
 1067              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1068              		.section	.text.CyIntSetVector,"ax",%progbits
 1069              		.align	2
 1070              		.global	CyIntSetVector
 1071              		.code	16
 1072              		.thumb_func
 1073              		.type	CyIntSetVector, %function
 1074              	CyIntSetVector:
 1075              	.LFB16:
2172:Generated_Source\PSoC4/CyLib.c **** 
2173:Generated_Source\PSoC4/CyLib.c **** 
2174:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2175:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2176:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2177:Generated_Source\PSoC4/CyLib.c **** *
2178:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2179:Generated_Source\PSoC4/CyLib.c **** *
2180:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2181:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2182:Generated_Source\PSoC4/CyLib.c **** *
2183:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2184:Generated_Source\PSoC4/CyLib.c **** *
2185:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2186:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2187:Generated_Source\PSoC4/CyLib.c **** {
 1076              		.loc 1 2187 0
 1077              		.cfi_startproc
 1078 0000 80B5     		push	{r7, lr}
 1079              		.cfi_def_cfa_offset 8
 1080              		.cfi_offset 7, -8
 1081              		.cfi_offset 14, -4
 1082 0002 84B0     		sub	sp, sp, #16
 1083              		.cfi_def_cfa_offset 24
 1084 0004 00AF     		add	r7, sp, #0
 1085              		.cfi_def_cfa_register 7
 1086 0006 021C     		mov	r2, r0
 1087 0008 3960     		str	r1, [r7]
 1088 000a FB1D     		add	r3, r7, #7
 1089 000c 1A70     		strb	r2, [r3]
2188:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2189:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1090              		.loc 1 2189 0
 1091 000e 8023     		mov	r3, #128
 1092 0010 9B05     		lsl	r3, r3, #22
 1093 0012 FB60     		str	r3, [r7, #12]
2190:Generated_Source\PSoC4/CyLib.c **** 
2191:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1094              		.loc 1 2191 0
 1095 0014 FB1D     		add	r3, r7, #7
 1096 0016 1B78     		ldrb	r3, [r3]
 1097 0018 182B     		cmp	r3, #24
 1098 001a 02D9     		bls	.L63
 1099              		.loc 1 2191 0 is_stmt 0 discriminator 1
 1100 001c 0020     		mov	r0, #0
 1101 001e FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 59


 1102              	.L63:
2192:Generated_Source\PSoC4/CyLib.c **** 
2193:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2194:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1103              		.loc 1 2194 0 is_stmt 1
 1104 0022 FB1D     		add	r3, r7, #7
 1105 0024 1B78     		ldrb	r3, [r3]
 1106 0026 1033     		add	r3, r3, #16
 1107 0028 9B00     		lsl	r3, r3, #2
 1108 002a FA68     		ldr	r2, [r7, #12]
 1109 002c D318     		add	r3, r2, r3
 1110 002e 1B68     		ldr	r3, [r3]
 1111 0030 BB60     		str	r3, [r7, #8]
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2197:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1112              		.loc 1 2197 0
 1113 0032 FB1D     		add	r3, r7, #7
 1114 0034 1B78     		ldrb	r3, [r3]
 1115 0036 1033     		add	r3, r3, #16
 1116 0038 9B00     		lsl	r3, r3, #2
 1117 003a FA68     		ldr	r2, [r7, #12]
 1118 003c D318     		add	r3, r2, r3
 1119 003e 3A68     		ldr	r2, [r7]
 1120 0040 1A60     		str	r2, [r3]
2198:Generated_Source\PSoC4/CyLib.c **** 
2199:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1121              		.loc 1 2199 0
 1122 0042 BB68     		ldr	r3, [r7, #8]
2200:Generated_Source\PSoC4/CyLib.c **** }
 1123              		.loc 1 2200 0
 1124 0044 181C     		mov	r0, r3
 1125 0046 BD46     		mov	sp, r7
 1126 0048 04B0     		add	sp, sp, #16
 1127              		@ sp needed
 1128 004a 80BD     		pop	{r7, pc}
 1129              		.cfi_endproc
 1130              	.LFE16:
 1131              		.size	CyIntSetVector, .-CyIntSetVector
 1132              		.section	.text.CyIntGetVector,"ax",%progbits
 1133              		.align	2
 1134              		.global	CyIntGetVector
 1135              		.code	16
 1136              		.thumb_func
 1137              		.type	CyIntGetVector, %function
 1138              	CyIntGetVector:
 1139              	.LFB17:
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c **** 
2203:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2204:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2205:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2208:Generated_Source\PSoC4/CyLib.c **** *
2209:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2210:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 60


2211:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2212:Generated_Source\PSoC4/CyLib.c **** *
2213:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2214:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2215:Generated_Source\PSoC4/CyLib.c **** {
 1140              		.loc 1 2215 0
 1141              		.cfi_startproc
 1142 0000 80B5     		push	{r7, lr}
 1143              		.cfi_def_cfa_offset 8
 1144              		.cfi_offset 7, -8
 1145              		.cfi_offset 14, -4
 1146 0002 84B0     		sub	sp, sp, #16
 1147              		.cfi_def_cfa_offset 24
 1148 0004 00AF     		add	r7, sp, #0
 1149              		.cfi_def_cfa_register 7
 1150 0006 021C     		mov	r2, r0
 1151 0008 FB1D     		add	r3, r7, #7
 1152 000a 1A70     		strb	r2, [r3]
2216:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1153              		.loc 1 2216 0
 1154 000c 8023     		mov	r3, #128
 1155 000e 9B05     		lsl	r3, r3, #22
 1156 0010 FB60     		str	r3, [r7, #12]
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1157              		.loc 1 2218 0
 1158 0012 FB1D     		add	r3, r7, #7
 1159 0014 1B78     		ldrb	r3, [r3]
 1160 0016 182B     		cmp	r3, #24
 1161 0018 02D9     		bls	.L66
 1162              		.loc 1 2218 0 is_stmt 0 discriminator 1
 1163 001a 0020     		mov	r0, #0
 1164 001c FFF7FEFF 		bl	CyHalt
 1165              	.L66:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1166              		.loc 1 2220 0 is_stmt 1
 1167 0020 FB1D     		add	r3, r7, #7
 1168 0022 1B78     		ldrb	r3, [r3]
 1169 0024 1033     		add	r3, r3, #16
 1170 0026 9B00     		lsl	r3, r3, #2
 1171 0028 FA68     		ldr	r2, [r7, #12]
 1172 002a D318     		add	r3, r2, r3
 1173 002c 1B68     		ldr	r3, [r3]
2221:Generated_Source\PSoC4/CyLib.c **** }
 1174              		.loc 1 2221 0
 1175 002e 181C     		mov	r0, r3
 1176 0030 BD46     		mov	sp, r7
 1177 0032 04B0     		add	sp, sp, #16
 1178              		@ sp needed
 1179 0034 80BD     		pop	{r7, pc}
 1180              		.cfi_endproc
 1181              	.LFE17:
 1182              		.size	CyIntGetVector, .-CyIntGetVector
 1183              		.section	.text.CyIntSetPriority,"ax",%progbits
 1184              		.align	2
 1185              		.global	CyIntSetPriority
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 61


 1186              		.code	16
 1187              		.thumb_func
 1188              		.type	CyIntSetPriority, %function
 1189              	CyIntSetPriority:
 1190              	.LFB18:
2222:Generated_Source\PSoC4/CyLib.c **** 
2223:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2224:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2225:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2228:Generated_Source\PSoC4/CyLib.c **** *
2229:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2230:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2231:Generated_Source\PSoC4/CyLib.c **** *
2232:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2233:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2234:Generated_Source\PSoC4/CyLib.c **** {
 1191              		.loc 1 2234 0
 1192              		.cfi_startproc
 1193 0000 90B5     		push	{r4, r7, lr}
 1194              		.cfi_def_cfa_offset 12
 1195              		.cfi_offset 4, -12
 1196              		.cfi_offset 7, -8
 1197              		.cfi_offset 14, -4
 1198 0002 87B0     		sub	sp, sp, #28
 1199              		.cfi_def_cfa_offset 40
 1200 0004 00AF     		add	r7, sp, #0
 1201              		.cfi_def_cfa_register 7
 1202 0006 021C     		mov	r2, r0
 1203 0008 FB1D     		add	r3, r7, #7
 1204 000a 1A70     		strb	r2, [r3]
 1205 000c BB1D     		add	r3, r7, #6
 1206 000e 0A1C     		add	r2, r1, #0
 1207 0010 1A70     		strb	r2, [r3]
2235:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2236:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2237:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2238:Generated_Source\PSoC4/CyLib.c **** 
2239:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1208              		.loc 1 2239 0
 1209 0012 BB1D     		add	r3, r7, #6
 1210 0014 1B78     		ldrb	r3, [r3]
 1211 0016 032B     		cmp	r3, #3
 1212 0018 02D9     		bls	.L69
 1213              		.loc 1 2239 0 is_stmt 0 discriminator 1
 1214 001a 0020     		mov	r0, #0
 1215 001c FFF7FEFF 		bl	CyHalt
 1216              	.L69:
2240:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1217              		.loc 1 2240 0 is_stmt 1
 1218 0020 FB1D     		add	r3, r7, #7
 1219 0022 1B78     		ldrb	r3, [r3]
 1220 0024 182B     		cmp	r3, #24
 1221 0026 02D9     		bls	.L70
 1222              		.loc 1 2240 0 is_stmt 0 discriminator 1
 1223 0028 0020     		mov	r0, #0
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 62


 1224 002a FFF7FEFF 		bl	CyHalt
 1225              	.L70:
2241:Generated_Source\PSoC4/CyLib.c **** 
2242:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1226              		.loc 1 2242 0 is_stmt 1
 1227 002e FB1D     		add	r3, r7, #7
 1228 0030 1B78     		ldrb	r3, [r3]
 1229 0032 0322     		mov	r2, #3
 1230 0034 1340     		and	r3, r2
 1231 0036 DB00     		lsl	r3, r3, #3
 1232 0038 0633     		add	r3, r3, #6
 1233 003a 7B61     		str	r3, [r7, #20]
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1234              		.loc 1 2244 0
 1235 003c 1323     		mov	r3, #19
 1236 003e FC18     		add	r4, r7, r3
 1237 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1238 0044 031C     		mov	r3, r0
 1239 0046 2370     		strb	r3, [r4]
2245:Generated_Source\PSoC4/CyLib.c **** 
2246:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1240              		.loc 1 2246 0
 1241 0048 FB1D     		add	r3, r7, #7
 1242 004a 1B78     		ldrb	r3, [r3]
 1243 004c 9B08     		lsr	r3, r3, #2
 1244 004e DBB2     		uxtb	r3, r3
 1245 0050 9B00     		lsl	r3, r3, #2
 1246 0052 144A     		ldr	r2, .L71
 1247 0054 9446     		mov	ip, r2
 1248 0056 6344     		add	r3, r3, ip
 1249 0058 1B68     		ldr	r3, [r3]
 1250 005a FB60     		str	r3, [r7, #12]
2247:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1251              		.loc 1 2247 0
 1252 005c 7B69     		ldr	r3, [r7, #20]
 1253 005e 0322     		mov	r2, #3
 1254 0060 9A40     		lsl	r2, r2, r3
 1255 0062 131C     		mov	r3, r2
 1256 0064 DA43     		mvn	r2, r3
 1257 0066 FB68     		ldr	r3, [r7, #12]
 1258 0068 1340     		and	r3, r2
 1259 006a FB60     		str	r3, [r7, #12]
2248:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1260              		.loc 1 2248 0
 1261 006c BB1D     		add	r3, r7, #6
 1262 006e 1A78     		ldrb	r2, [r3]
 1263 0070 7B69     		ldr	r3, [r7, #20]
 1264 0072 9A40     		lsl	r2, r2, r3
 1265 0074 131C     		mov	r3, r2
 1266 0076 FA68     		ldr	r2, [r7, #12]
 1267 0078 1343     		orr	r3, r2
 1268 007a FB60     		str	r3, [r7, #12]
2249:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1269              		.loc 1 2249 0
 1270 007c FB1D     		add	r3, r7, #7
 1271 007e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 63


 1272 0080 9B08     		lsr	r3, r3, #2
 1273 0082 DBB2     		uxtb	r3, r3
 1274 0084 9B00     		lsl	r3, r3, #2
 1275 0086 074A     		ldr	r2, .L71
 1276 0088 9446     		mov	ip, r2
 1277 008a 6344     		add	r3, r3, ip
 1278 008c FA68     		ldr	r2, [r7, #12]
 1279 008e 1A60     		str	r2, [r3]
2250:Generated_Source\PSoC4/CyLib.c **** 
2251:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1280              		.loc 1 2251 0
 1281 0090 1323     		mov	r3, #19
 1282 0092 FB18     		add	r3, r7, r3
 1283 0094 1B78     		ldrb	r3, [r3]
 1284 0096 181C     		mov	r0, r3
 1285 0098 FFF7FEFF 		bl	CyExitCriticalSection
2252:Generated_Source\PSoC4/CyLib.c **** }
 1286              		.loc 1 2252 0
 1287 009c BD46     		mov	sp, r7
 1288 009e 07B0     		add	sp, sp, #28
 1289              		@ sp needed
 1290 00a0 90BD     		pop	{r4, r7, pc}
 1291              	.L72:
 1292 00a2 C046     		.align	2
 1293              	.L71:
 1294 00a4 00E400E0 		.word	-536812544
 1295              		.cfi_endproc
 1296              	.LFE18:
 1297              		.size	CyIntSetPriority, .-CyIntSetPriority
 1298              		.section	.text.CyIntGetPriority,"ax",%progbits
 1299              		.align	2
 1300              		.global	CyIntGetPriority
 1301              		.code	16
 1302              		.thumb_func
 1303              		.type	CyIntGetPriority, %function
 1304              	CyIntGetPriority:
 1305              	.LFB19:
2253:Generated_Source\PSoC4/CyLib.c **** 
2254:Generated_Source\PSoC4/CyLib.c **** 
2255:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2256:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2257:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2258:Generated_Source\PSoC4/CyLib.c **** *
2259:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2260:Generated_Source\PSoC4/CyLib.c **** *
2261:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2262:Generated_Source\PSoC4/CyLib.c **** *
2263:Generated_Source\PSoC4/CyLib.c **** * \return
2264:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2265:Generated_Source\PSoC4/CyLib.c **** *
2266:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2267:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2268:Generated_Source\PSoC4/CyLib.c **** {
 1306              		.loc 1 2268 0
 1307              		.cfi_startproc
 1308 0000 80B5     		push	{r7, lr}
 1309              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 64


 1310              		.cfi_offset 7, -8
 1311              		.cfi_offset 14, -4
 1312 0002 84B0     		sub	sp, sp, #16
 1313              		.cfi_def_cfa_offset 24
 1314 0004 00AF     		add	r7, sp, #0
 1315              		.cfi_def_cfa_register 7
 1316 0006 021C     		mov	r2, r0
 1317 0008 FB1D     		add	r3, r7, #7
 1318 000a 1A70     		strb	r2, [r3]
2269:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2270:Generated_Source\PSoC4/CyLib.c **** 
2271:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1319              		.loc 1 2271 0
 1320 000c FB1D     		add	r3, r7, #7
 1321 000e 1B78     		ldrb	r3, [r3]
 1322 0010 182B     		cmp	r3, #24
 1323 0012 02D9     		bls	.L74
 1324              		.loc 1 2271 0 is_stmt 0 discriminator 1
 1325 0014 0020     		mov	r0, #0
 1326 0016 FFF7FEFF 		bl	CyHalt
 1327              	.L74:
2272:Generated_Source\PSoC4/CyLib.c **** 
2273:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1328              		.loc 1 2273 0 is_stmt 1
 1329 001a FB1D     		add	r3, r7, #7
 1330 001c 1B78     		ldrb	r3, [r3]
 1331 001e 9B08     		lsr	r3, r3, #2
 1332 0020 DBB2     		uxtb	r3, r3
 1333 0022 9B00     		lsl	r3, r3, #2
 1334 0024 0C4A     		ldr	r2, .L76
 1335 0026 9446     		mov	ip, r2
 1336 0028 6344     		add	r3, r3, ip
 1337 002a 1B68     		ldr	r3, [r3]
 1338 002c FA1D     		add	r2, r7, #7
 1339 002e 1278     		ldrb	r2, [r2]
 1340 0030 0321     		mov	r1, #3
 1341 0032 0A40     		and	r2, r1
 1342 0034 D200     		lsl	r2, r2, #3
 1343 0036 0632     		add	r2, r2, #6
 1344 0038 D340     		lsr	r3, r3, r2
 1345 003a 1A1C     		mov	r2, r3
 1346 003c 0F23     		mov	r3, #15
 1347 003e FB18     		add	r3, r7, r3
 1348 0040 1A70     		strb	r2, [r3]
2274:Generated_Source\PSoC4/CyLib.c **** 
2275:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1349              		.loc 1 2275 0
 1350 0042 0F23     		mov	r3, #15
 1351 0044 FB18     		add	r3, r7, r3
 1352 0046 1B78     		ldrb	r3, [r3]
 1353 0048 0322     		mov	r2, #3
 1354 004a 1340     		and	r3, r2
 1355 004c DBB2     		uxtb	r3, r3
2276:Generated_Source\PSoC4/CyLib.c **** }
 1356              		.loc 1 2276 0
 1357 004e 181C     		mov	r0, r3
 1358 0050 BD46     		mov	sp, r7
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 65


 1359 0052 04B0     		add	sp, sp, #16
 1360              		@ sp needed
 1361 0054 80BD     		pop	{r7, pc}
 1362              	.L77:
 1363 0056 C046     		.align	2
 1364              	.L76:
 1365 0058 00E400E0 		.word	-536812544
 1366              		.cfi_endproc
 1367              	.LFE19:
 1368              		.size	CyIntGetPriority, .-CyIntGetPriority
 1369              		.section	.text.CyIntEnable,"ax",%progbits
 1370              		.align	2
 1371              		.global	CyIntEnable
 1372              		.code	16
 1373              		.thumb_func
 1374              		.type	CyIntEnable, %function
 1375              	CyIntEnable:
 1376              	.LFB20:
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2280:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2281:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2282:Generated_Source\PSoC4/CyLib.c **** *
2283:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2284:Generated_Source\PSoC4/CyLib.c **** *
2285:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2286:Generated_Source\PSoC4/CyLib.c **** *
2287:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2288:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2289:Generated_Source\PSoC4/CyLib.c **** {
 1377              		.loc 1 2289 0
 1378              		.cfi_startproc
 1379 0000 80B5     		push	{r7, lr}
 1380              		.cfi_def_cfa_offset 8
 1381              		.cfi_offset 7, -8
 1382              		.cfi_offset 14, -4
 1383 0002 82B0     		sub	sp, sp, #8
 1384              		.cfi_def_cfa_offset 16
 1385 0004 00AF     		add	r7, sp, #0
 1386              		.cfi_def_cfa_register 7
 1387 0006 021C     		mov	r2, r0
 1388 0008 FB1D     		add	r3, r7, #7
 1389 000a 1A70     		strb	r2, [r3]
2290:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1390              		.loc 1 2290 0
 1391 000c 054B     		ldr	r3, .L79
 1392 000e FA1D     		add	r2, r7, #7
 1393 0010 1278     		ldrb	r2, [r2]
 1394 0012 1F21     		mov	r1, #31
 1395 0014 0A40     		and	r2, r1
 1396 0016 0121     		mov	r1, #1
 1397 0018 9140     		lsl	r1, r1, r2
 1398 001a 0A1C     		mov	r2, r1
 1399 001c 1A60     		str	r2, [r3]
2291:Generated_Source\PSoC4/CyLib.c **** }
 1400              		.loc 1 2291 0
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 66


 1401 001e BD46     		mov	sp, r7
 1402 0020 02B0     		add	sp, sp, #8
 1403              		@ sp needed
 1404 0022 80BD     		pop	{r7, pc}
 1405              	.L80:
 1406              		.align	2
 1407              	.L79:
 1408 0024 00E100E0 		.word	-536813312
 1409              		.cfi_endproc
 1410              	.LFE20:
 1411              		.size	CyIntEnable, .-CyIntEnable
 1412              		.section	.text.CyIntGetState,"ax",%progbits
 1413              		.align	2
 1414              		.global	CyIntGetState
 1415              		.code	16
 1416              		.thumb_func
 1417              		.type	CyIntGetState, %function
 1418              	CyIntGetState:
 1419              	.LFB21:
2292:Generated_Source\PSoC4/CyLib.c **** 
2293:Generated_Source\PSoC4/CyLib.c **** 
2294:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2295:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2296:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2297:Generated_Source\PSoC4/CyLib.c **** *
2298:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2301:Generated_Source\PSoC4/CyLib.c **** *
2302:Generated_Source\PSoC4/CyLib.c **** * \return
2303:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2304:Generated_Source\PSoC4/CyLib.c **** *
2305:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2306:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2307:Generated_Source\PSoC4/CyLib.c **** {
 1420              		.loc 1 2307 0
 1421              		.cfi_startproc
 1422 0000 80B5     		push	{r7, lr}
 1423              		.cfi_def_cfa_offset 8
 1424              		.cfi_offset 7, -8
 1425              		.cfi_offset 14, -4
 1426 0002 82B0     		sub	sp, sp, #8
 1427              		.cfi_def_cfa_offset 16
 1428 0004 00AF     		add	r7, sp, #0
 1429              		.cfi_def_cfa_register 7
 1430 0006 021C     		mov	r2, r0
 1431 0008 FB1D     		add	r3, r7, #7
 1432 000a 1A70     		strb	r2, [r3]
2308:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2309:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1433              		.loc 1 2309 0
 1434 000c 074B     		ldr	r3, .L83
 1435 000e 1A68     		ldr	r2, [r3]
 1436 0010 FB1D     		add	r3, r7, #7
 1437 0012 1B78     		ldrb	r3, [r3]
 1438 0014 1F21     		mov	r1, #31
 1439 0016 0B40     		and	r3, r1
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 67


 1440 0018 DA40     		lsr	r2, r2, r3
 1441 001a 131C     		mov	r3, r2
 1442 001c DBB2     		uxtb	r3, r3
 1443 001e 0122     		mov	r2, #1
 1444 0020 1340     		and	r3, r2
 1445 0022 DBB2     		uxtb	r3, r3
2310:Generated_Source\PSoC4/CyLib.c **** }
 1446              		.loc 1 2310 0
 1447 0024 181C     		mov	r0, r3
 1448 0026 BD46     		mov	sp, r7
 1449 0028 02B0     		add	sp, sp, #8
 1450              		@ sp needed
 1451 002a 80BD     		pop	{r7, pc}
 1452              	.L84:
 1453              		.align	2
 1454              	.L83:
 1455 002c 00E100E0 		.word	-536813312
 1456              		.cfi_endproc
 1457              	.LFE21:
 1458              		.size	CyIntGetState, .-CyIntGetState
 1459              		.section	.text.CyIntDisable,"ax",%progbits
 1460              		.align	2
 1461              		.global	CyIntDisable
 1462              		.code	16
 1463              		.thumb_func
 1464              		.type	CyIntDisable, %function
 1465              	CyIntDisable:
 1466              	.LFB22:
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2314:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2315:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2316:Generated_Source\PSoC4/CyLib.c **** *
2317:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2318:Generated_Source\PSoC4/CyLib.c **** *
2319:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2320:Generated_Source\PSoC4/CyLib.c **** *
2321:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2322:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2323:Generated_Source\PSoC4/CyLib.c **** {
 1467              		.loc 1 2323 0
 1468              		.cfi_startproc
 1469 0000 80B5     		push	{r7, lr}
 1470              		.cfi_def_cfa_offset 8
 1471              		.cfi_offset 7, -8
 1472              		.cfi_offset 14, -4
 1473 0002 82B0     		sub	sp, sp, #8
 1474              		.cfi_def_cfa_offset 16
 1475 0004 00AF     		add	r7, sp, #0
 1476              		.cfi_def_cfa_register 7
 1477 0006 021C     		mov	r2, r0
 1478 0008 FB1D     		add	r3, r7, #7
 1479 000a 1A70     		strb	r2, [r3]
2324:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1480              		.loc 1 2324 0
 1481 000c 054B     		ldr	r3, .L86
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 68


 1482 000e FA1D     		add	r2, r7, #7
 1483 0010 1278     		ldrb	r2, [r2]
 1484 0012 1F21     		mov	r1, #31
 1485 0014 0A40     		and	r2, r1
 1486 0016 0121     		mov	r1, #1
 1487 0018 9140     		lsl	r1, r1, r2
 1488 001a 0A1C     		mov	r2, r1
 1489 001c 1A60     		str	r2, [r3]
2325:Generated_Source\PSoC4/CyLib.c **** }
 1490              		.loc 1 2325 0
 1491 001e BD46     		mov	sp, r7
 1492 0020 02B0     		add	sp, sp, #8
 1493              		@ sp needed
 1494 0022 80BD     		pop	{r7, pc}
 1495              	.L87:
 1496              		.align	2
 1497              	.L86:
 1498 0024 80E100E0 		.word	-536813184
 1499              		.cfi_endproc
 1500              	.LFE22:
 1501              		.size	CyIntDisable, .-CyIntDisable
 1502              		.section	.text.CyIntSetPending,"ax",%progbits
 1503              		.align	2
 1504              		.global	CyIntSetPending
 1505              		.code	16
 1506              		.thumb_func
 1507              		.type	CyIntSetPending, %function
 1508              	CyIntSetPending:
 1509              	.LFB23:
2326:Generated_Source\PSoC4/CyLib.c **** 
2327:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2328:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2329:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2330:Generated_Source\PSoC4/CyLib.c **** *
2331:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2332:Generated_Source\PSoC4/CyLib.c **** *
2333:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2334:Generated_Source\PSoC4/CyLib.c **** *
2335:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2336:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2337:Generated_Source\PSoC4/CyLib.c **** {
 1510              		.loc 1 2337 0
 1511              		.cfi_startproc
 1512 0000 80B5     		push	{r7, lr}
 1513              		.cfi_def_cfa_offset 8
 1514              		.cfi_offset 7, -8
 1515              		.cfi_offset 14, -4
 1516 0002 82B0     		sub	sp, sp, #8
 1517              		.cfi_def_cfa_offset 16
 1518 0004 00AF     		add	r7, sp, #0
 1519              		.cfi_def_cfa_register 7
 1520 0006 021C     		mov	r2, r0
 1521 0008 FB1D     		add	r3, r7, #7
 1522 000a 1A70     		strb	r2, [r3]
2338:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1523              		.loc 1 2338 0
 1524 000c 054B     		ldr	r3, .L89
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 69


 1525 000e FA1D     		add	r2, r7, #7
 1526 0010 1278     		ldrb	r2, [r2]
 1527 0012 1F21     		mov	r1, #31
 1528 0014 0A40     		and	r2, r1
 1529 0016 0121     		mov	r1, #1
 1530 0018 9140     		lsl	r1, r1, r2
 1531 001a 0A1C     		mov	r2, r1
 1532 001c 1A60     		str	r2, [r3]
2339:Generated_Source\PSoC4/CyLib.c **** }
 1533              		.loc 1 2339 0
 1534 001e BD46     		mov	sp, r7
 1535 0020 02B0     		add	sp, sp, #8
 1536              		@ sp needed
 1537 0022 80BD     		pop	{r7, pc}
 1538              	.L90:
 1539              		.align	2
 1540              	.L89:
 1541 0024 00E200E0 		.word	-536813056
 1542              		.cfi_endproc
 1543              	.LFE23:
 1544              		.size	CyIntSetPending, .-CyIntSetPending
 1545              		.section	.text.CyIntClearPending,"ax",%progbits
 1546              		.align	2
 1547              		.global	CyIntClearPending
 1548              		.code	16
 1549              		.thumb_func
 1550              		.type	CyIntClearPending, %function
 1551              	CyIntClearPending:
 1552              	.LFB24:
2340:Generated_Source\PSoC4/CyLib.c **** 
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2343:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2344:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2345:Generated_Source\PSoC4/CyLib.c **** *
2346:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2347:Generated_Source\PSoC4/CyLib.c **** *
2348:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2349:Generated_Source\PSoC4/CyLib.c **** *
2350:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2351:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2352:Generated_Source\PSoC4/CyLib.c **** {
 1553              		.loc 1 2352 0
 1554              		.cfi_startproc
 1555 0000 80B5     		push	{r7, lr}
 1556              		.cfi_def_cfa_offset 8
 1557              		.cfi_offset 7, -8
 1558              		.cfi_offset 14, -4
 1559 0002 82B0     		sub	sp, sp, #8
 1560              		.cfi_def_cfa_offset 16
 1561 0004 00AF     		add	r7, sp, #0
 1562              		.cfi_def_cfa_register 7
 1563 0006 021C     		mov	r2, r0
 1564 0008 FB1D     		add	r3, r7, #7
 1565 000a 1A70     		strb	r2, [r3]
2353:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1566              		.loc 1 2353 0
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 70


 1567 000c 054B     		ldr	r3, .L92
 1568 000e FA1D     		add	r2, r7, #7
 1569 0010 1278     		ldrb	r2, [r2]
 1570 0012 1F21     		mov	r1, #31
 1571 0014 0A40     		and	r2, r1
 1572 0016 0121     		mov	r1, #1
 1573 0018 9140     		lsl	r1, r1, r2
 1574 001a 0A1C     		mov	r2, r1
 1575 001c 1A60     		str	r2, [r3]
2354:Generated_Source\PSoC4/CyLib.c **** }
 1576              		.loc 1 2354 0
 1577 001e BD46     		mov	sp, r7
 1578 0020 02B0     		add	sp, sp, #8
 1579              		@ sp needed
 1580 0022 80BD     		pop	{r7, pc}
 1581              	.L93:
 1582              		.align	2
 1583              	.L92:
 1584 0024 80E200E0 		.word	-536812928
 1585              		.cfi_endproc
 1586              	.LFE24:
 1587              		.size	CyIntClearPending, .-CyIntClearPending
 1588              		.section	.text.CyHalt,"ax",%progbits
 1589              		.align	2
 1590              		.global	CyHalt
 1591              		.code	16
 1592              		.thumb_func
 1593              		.type	CyHalt, %function
 1594              	CyHalt:
 1595              	.LFB25:
2355:Generated_Source\PSoC4/CyLib.c **** 
2356:Generated_Source\PSoC4/CyLib.c **** 
2357:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2358:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2359:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2360:Generated_Source\PSoC4/CyLib.c **** *
2361:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2362:Generated_Source\PSoC4/CyLib.c **** *
2363:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2364:Generated_Source\PSoC4/CyLib.c **** *
2365:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2366:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2367:Generated_Source\PSoC4/CyLib.c **** {
 1596              		.loc 1 2367 0
 1597              		.cfi_startproc
 1598 0000 80B5     		push	{r7, lr}
 1599              		.cfi_def_cfa_offset 8
 1600              		.cfi_offset 7, -8
 1601              		.cfi_offset 14, -4
 1602 0002 82B0     		sub	sp, sp, #8
 1603              		.cfi_def_cfa_offset 16
 1604 0004 00AF     		add	r7, sp, #0
 1605              		.cfi_def_cfa_register 7
 1606 0006 021C     		mov	r2, r0
 1607 0008 FB1D     		add	r3, r7, #7
 1608 000a 1A70     		strb	r2, [r3]
2368:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 71


2369:Generated_Source\PSoC4/CyLib.c ****     {
2370:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2371:Generated_Source\PSoC4/CyLib.c ****     }
2372:Generated_Source\PSoC4/CyLib.c **** 
2373:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2374:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2375:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2376:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1609              		.loc 1 2376 0
 1610              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 1611 000c 01BE     		    bkpt    1
 1612              	@ 0 "" 2
2377:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2378:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2379:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2380:Generated_Source\PSoC4/CyLib.c **** }
 1613              		.loc 1 2380 0
 1614              		.code	16
 1615 000e BD46     		mov	sp, r7
 1616 0010 02B0     		add	sp, sp, #8
 1617              		@ sp needed
 1618 0012 80BD     		pop	{r7, pc}
 1619              		.cfi_endproc
 1620              	.LFE25:
 1621              		.size	CyHalt, .-CyHalt
 1622              		.section	.text.CySoftwareReset,"ax",%progbits
 1623              		.align	2
 1624              		.global	CySoftwareReset
 1625              		.code	16
 1626              		.thumb_func
 1627              		.type	CySoftwareReset, %function
 1628              	CySoftwareReset:
 1629              	.LFB26:
2381:Generated_Source\PSoC4/CyLib.c **** 
2382:Generated_Source\PSoC4/CyLib.c **** 
2383:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2384:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2385:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2386:Generated_Source\PSoC4/CyLib.c **** *
2387:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2388:Generated_Source\PSoC4/CyLib.c **** *
2389:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2390:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2391:Generated_Source\PSoC4/CyLib.c **** {
 1630              		.loc 1 2391 0
 1631              		.cfi_startproc
 1632 0000 80B5     		push	{r7, lr}
 1633              		.cfi_def_cfa_offset 8
 1634              		.cfi_offset 7, -8
 1635              		.cfi_offset 14, -4
 1636 0002 00AF     		add	r7, sp, #0
 1637              		.cfi_def_cfa_register 7
2392:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2393:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2394:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2395:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2396:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 72


 1638              		.loc 1 2396 0
 1639 0004 044B     		ldr	r3, .L96
 1640 0006 044A     		ldr	r2, .L96
 1641 0008 1268     		ldr	r2, [r2]
 1642 000a 1204     		lsl	r2, r2, #16
 1643 000c 120C     		lsr	r2, r2, #16
2397:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1644              		.loc 1 2397 0
 1645 000e 0349     		ldr	r1, .L96+4
 1646 0010 0A43     		orr	r2, r1
2396:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1647              		.loc 1 2396 0
 1648 0012 1A60     		str	r2, [r3]
2398:Generated_Source\PSoC4/CyLib.c **** }
 1649              		.loc 1 2398 0
 1650 0014 BD46     		mov	sp, r7
 1651              		@ sp needed
 1652 0016 80BD     		pop	{r7, pc}
 1653              	.L97:
 1654              		.align	2
 1655              	.L96:
 1656 0018 0CED00E0 		.word	-536810228
 1657 001c 0400FA05 		.word	100270084
 1658              		.cfi_endproc
 1659              	.LFE26:
 1660              		.size	CySoftwareReset, .-CySoftwareReset
 1661              		.section	.text.CyDelay,"ax",%progbits
 1662              		.align	2
 1663              		.global	CyDelay
 1664              		.code	16
 1665              		.thumb_func
 1666              		.type	CyDelay, %function
 1667              	CyDelay:
 1668              	.LFB27:
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c **** 
2401:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2402:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2403:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2404:Generated_Source\PSoC4/CyLib.c **** *
2405:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2406:Generated_Source\PSoC4/CyLib.c **** *
2407:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2408:Generated_Source\PSoC4/CyLib.c **** *
2409:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2411:Generated_Source\PSoC4/CyLib.c **** {
 1669              		.loc 1 2411 0
 1670              		.cfi_startproc
 1671 0000 80B5     		push	{r7, lr}
 1672              		.cfi_def_cfa_offset 8
 1673              		.cfi_offset 7, -8
 1674              		.cfi_offset 14, -4
 1675 0002 82B0     		sub	sp, sp, #8
 1676              		.cfi_def_cfa_offset 16
 1677 0004 00AF     		add	r7, sp, #0
 1678              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 73


 1679 0006 7860     		str	r0, [r7, #4]
2412:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1680              		.loc 1 2412 0
 1681 0008 09E0     		b	.L99
 1682              	.L100:
2413:Generated_Source\PSoC4/CyLib.c ****     {
2414:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2415:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2416:Generated_Source\PSoC4/CyLib.c ****          */
2417:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1683              		.loc 1 2417 0
 1684 000a 0C4B     		ldr	r3, .L101
 1685 000c 1B68     		ldr	r3, [r3]
 1686 000e 181C     		mov	r0, r3
 1687 0010 FFF7FEFF 		bl	CyDelayCycles
2418:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1688              		.loc 1 2418 0
 1689 0014 7B68     		ldr	r3, [r7, #4]
 1690 0016 0A4A     		ldr	r2, .L101+4
 1691 0018 9446     		mov	ip, r2
 1692 001a 6344     		add	r3, r3, ip
 1693 001c 7B60     		str	r3, [r7, #4]
 1694              	.L99:
2412:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1695              		.loc 1 2412 0
 1696 001e 7A68     		ldr	r2, [r7, #4]
 1697 0020 8023     		mov	r3, #128
 1698 0022 1B02     		lsl	r3, r3, #8
 1699 0024 9A42     		cmp	r2, r3
 1700 0026 F0D8     		bhi	.L100
2419:Generated_Source\PSoC4/CyLib.c ****     }
2420:Generated_Source\PSoC4/CyLib.c **** 
2421:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1701              		.loc 1 2421 0
 1702 0028 064B     		ldr	r3, .L101+8
 1703 002a 1B68     		ldr	r3, [r3]
 1704 002c 7A68     		ldr	r2, [r7, #4]
 1705 002e 5343     		mul	r3, r2
 1706 0030 181C     		mov	r0, r3
 1707 0032 FFF7FEFF 		bl	CyDelayCycles
2422:Generated_Source\PSoC4/CyLib.c **** }
 1708              		.loc 1 2422 0
 1709 0036 BD46     		mov	sp, r7
 1710 0038 02B0     		add	sp, sp, #8
 1711              		@ sp needed
 1712 003a 80BD     		pop	{r7, pc}
 1713              	.L102:
 1714              		.align	2
 1715              	.L101:
 1716 003c 00000000 		.word	cydelay32kMs
 1717 0040 0080FFFF 		.word	-32768
 1718 0044 00000000 		.word	cydelayFreqKhz
 1719              		.cfi_endproc
 1720              	.LFE27:
 1721              		.size	CyDelay, .-CyDelay
 1722              		.section	.text.CyDelayUs,"ax",%progbits
 1723              		.align	2
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 74


 1724              		.global	CyDelayUs
 1725              		.code	16
 1726              		.thumb_func
 1727              		.type	CyDelayUs, %function
 1728              	CyDelayUs:
 1729              	.LFB28:
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c **** 
2425:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2426:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2427:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2428:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2429:Generated_Source\PSoC4/CyLib.c **** *
2430:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2433:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2434:Generated_Source\PSoC4/CyLib.c **** {
 1730              		.loc 1 2434 0
 1731              		.cfi_startproc
 1732 0000 80B5     		push	{r7, lr}
 1733              		.cfi_def_cfa_offset 8
 1734              		.cfi_offset 7, -8
 1735              		.cfi_offset 14, -4
 1736 0002 82B0     		sub	sp, sp, #8
 1737              		.cfi_def_cfa_offset 16
 1738 0004 00AF     		add	r7, sp, #0
 1739              		.cfi_def_cfa_register 7
 1740 0006 021C     		mov	r2, r0
 1741 0008 BB1D     		add	r3, r7, #6
 1742 000a 1A80     		strh	r2, [r3]
2435:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1743              		.loc 1 2435 0
 1744 000c BB1D     		add	r3, r7, #6
 1745 000e 1B88     		ldrh	r3, [r3]
 1746 0010 044A     		ldr	r2, .L104
 1747 0012 1278     		ldrb	r2, [r2]
 1748 0014 5343     		mul	r3, r2
 1749 0016 181C     		mov	r0, r3
 1750 0018 FFF7FEFF 		bl	CyDelayCycles
2436:Generated_Source\PSoC4/CyLib.c **** }
 1751              		.loc 1 2436 0
 1752 001c BD46     		mov	sp, r7
 1753 001e 02B0     		add	sp, sp, #8
 1754              		@ sp needed
 1755 0020 80BD     		pop	{r7, pc}
 1756              	.L105:
 1757 0022 C046     		.align	2
 1758              	.L104:
 1759 0024 00000000 		.word	cydelayFreqMhz
 1760              		.cfi_endproc
 1761              	.LFE28:
 1762              		.size	CyDelayUs, .-CyDelayUs
 1763              		.global	__aeabi_uidiv
 1764              		.section	.text.CyDelayFreq,"ax",%progbits
 1765              		.align	2
 1766              		.global	CyDelayFreq
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 75


 1767              		.code	16
 1768              		.thumb_func
 1769              		.type	CyDelayFreq, %function
 1770              	CyDelayFreq:
 1771              	.LFB29:
2437:Generated_Source\PSoC4/CyLib.c **** 
2438:Generated_Source\PSoC4/CyLib.c **** 
2439:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2440:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2441:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2442:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2443:Generated_Source\PSoC4/CyLib.c **** *
2444:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2445:Generated_Source\PSoC4/CyLib.c **** *
2446:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2447:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2448:Generated_Source\PSoC4/CyLib.c **** {
 1772              		.loc 1 2448 0
 1773              		.cfi_startproc
 1774 0000 80B5     		push	{r7, lr}
 1775              		.cfi_def_cfa_offset 8
 1776              		.cfi_offset 7, -8
 1777              		.cfi_offset 14, -4
 1778 0002 82B0     		sub	sp, sp, #8
 1779              		.cfi_def_cfa_offset 16
 1780 0004 00AF     		add	r7, sp, #0
 1781              		.cfi_def_cfa_register 7
 1782 0006 7860     		str	r0, [r7, #4]
2449:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1783              		.loc 1 2449 0
 1784 0008 7B68     		ldr	r3, [r7, #4]
 1785 000a 002B     		cmp	r3, #0
 1786 000c 03D0     		beq	.L107
2450:Generated_Source\PSoC4/CyLib.c ****     {
2451:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1787              		.loc 1 2451 0
 1788 000e 154B     		ldr	r3, .L109
 1789 0010 7A68     		ldr	r2, [r7, #4]
 1790 0012 1A60     		str	r2, [r3]
 1791 0014 02E0     		b	.L108
 1792              	.L107:
2452:Generated_Source\PSoC4/CyLib.c ****     }
2453:Generated_Source\PSoC4/CyLib.c ****     else
2454:Generated_Source\PSoC4/CyLib.c ****     {
2455:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1793              		.loc 1 2455 0
 1794 0016 134B     		ldr	r3, .L109
 1795 0018 134A     		ldr	r2, .L109+4
 1796 001a 1A60     		str	r2, [r3]
 1797              	.L108:
2456:Generated_Source\PSoC4/CyLib.c ****     }
2457:Generated_Source\PSoC4/CyLib.c **** 
2458:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1798              		.loc 1 2458 0
 1799 001c 114B     		ldr	r3, .L109
 1800 001e 1B68     		ldr	r3, [r3]
 1801 0020 124A     		ldr	r2, .L109+8
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 76


 1802 0022 9446     		mov	ip, r2
 1803 0024 6344     		add	r3, r3, ip
 1804 0026 181C     		mov	r0, r3
 1805 0028 1149     		ldr	r1, .L109+12
 1806 002a FFF7FEFF 		bl	__aeabi_uidiv
 1807 002e 031C     		mov	r3, r0
 1808 0030 DAB2     		uxtb	r2, r3
 1809 0032 104B     		ldr	r3, .L109+16
 1810 0034 1A70     		strb	r2, [r3]
2459:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1811              		.loc 1 2459 0
 1812 0036 0B4B     		ldr	r3, .L109
 1813 0038 1B68     		ldr	r3, [r3]
 1814 003a 0F4A     		ldr	r2, .L109+20
 1815 003c 9446     		mov	ip, r2
 1816 003e 6344     		add	r3, r3, ip
 1817 0040 181C     		mov	r0, r3
 1818 0042 FA23     		mov	r3, #250
 1819 0044 9900     		lsl	r1, r3, #2
 1820 0046 FFF7FEFF 		bl	__aeabi_uidiv
 1821 004a 031C     		mov	r3, r0
 1822 004c 1A1C     		mov	r2, r3
 1823 004e 0B4B     		ldr	r3, .L109+24
 1824 0050 1A60     		str	r2, [r3]
2460:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1825              		.loc 1 2460 0
 1826 0052 0A4B     		ldr	r3, .L109+24
 1827 0054 1B68     		ldr	r3, [r3]
 1828 0056 DA03     		lsl	r2, r3, #15
 1829 0058 094B     		ldr	r3, .L109+28
 1830 005a 1A60     		str	r2, [r3]
2461:Generated_Source\PSoC4/CyLib.c **** }
 1831              		.loc 1 2461 0
 1832 005c BD46     		mov	sp, r7
 1833 005e 02B0     		add	sp, sp, #8
 1834              		@ sp needed
 1835 0060 80BD     		pop	{r7, pc}
 1836              	.L110:
 1837 0062 C046     		.align	2
 1838              	.L109:
 1839 0064 00000000 		.word	cydelayFreqHz
 1840 0068 006CDC02 		.word	48000000
 1841 006c 3F420F00 		.word	999999
 1842 0070 40420F00 		.word	1000000
 1843 0074 00000000 		.word	cydelayFreqMhz
 1844 0078 E7030000 		.word	999
 1845 007c 00000000 		.word	cydelayFreqKhz
 1846 0080 00000000 		.word	cydelay32kMs
 1847              		.cfi_endproc
 1848              	.LFE29:
 1849              		.size	CyDelayFreq, .-CyDelayFreq
 1850              		.section	.text.CySysTickStart,"ax",%progbits
 1851              		.align	2
 1852              		.global	CySysTickStart
 1853              		.code	16
 1854              		.thumb_func
 1855              		.type	CySysTickStart, %function
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 77


 1856              	CySysTickStart:
 1857              	.LFB30:
2462:Generated_Source\PSoC4/CyLib.c **** 
2463:Generated_Source\PSoC4/CyLib.c **** 
2464:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2465:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2466:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2469:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2470:Generated_Source\PSoC4/CyLib.c **** *
2471:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2472:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2473:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2474:Generated_Source\PSoC4/CyLib.c **** *
2475:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2476:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2477:Generated_Source\PSoC4/CyLib.c **** *
2478:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2479:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2480:Generated_Source\PSoC4/CyLib.c **** {
 1858              		.loc 1 2480 0
 1859              		.cfi_startproc
 1860 0000 80B5     		push	{r7, lr}
 1861              		.cfi_def_cfa_offset 8
 1862              		.cfi_offset 7, -8
 1863              		.cfi_offset 14, -4
 1864 0002 00AF     		add	r7, sp, #0
 1865              		.cfi_def_cfa_register 7
2481:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1866              		.loc 1 2481 0
 1867 0004 064B     		ldr	r3, .L113
 1868 0006 1B68     		ldr	r3, [r3]
 1869 0008 002B     		cmp	r3, #0
 1870 000a 04D1     		bne	.L112
2482:Generated_Source\PSoC4/CyLib.c ****     {
2483:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 1871              		.loc 1 2483 0
 1872 000c FFF7FEFF 		bl	CySysTickInit
2484:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1873              		.loc 1 2484 0
 1874 0010 034B     		ldr	r3, .L113
 1875 0012 0122     		mov	r2, #1
 1876 0014 1A60     		str	r2, [r3]
 1877              	.L112:
2485:Generated_Source\PSoC4/CyLib.c ****     }
2486:Generated_Source\PSoC4/CyLib.c **** 
2487:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 1878              		.loc 1 2487 0
 1879 0016 FFF7FEFF 		bl	CySysTickEnable
2488:Generated_Source\PSoC4/CyLib.c **** }
 1880              		.loc 1 2488 0
 1881 001a BD46     		mov	sp, r7
 1882              		@ sp needed
 1883 001c 80BD     		pop	{r7, pc}
 1884              	.L114:
 1885 001e C046     		.align	2
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 78


 1886              	.L113:
 1887 0020 00000000 		.word	CySysTickInitVar
 1888              		.cfi_endproc
 1889              	.LFE30:
 1890              		.size	CySysTickStart, .-CySysTickStart
 1891              		.section	.text.CySysTickInit,"ax",%progbits
 1892              		.align	2
 1893              		.global	CySysTickInit
 1894              		.code	16
 1895              		.thumb_func
 1896              		.type	CySysTickInit, %function
 1897              	CySysTickInit:
 1898              	.LFB31:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2496:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2497:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2498:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2499:Generated_Source\PSoC4/CyLib.c **** *
2500:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2501:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2502:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2503:Generated_Source\PSoC4/CyLib.c **** *
2504:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2505:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2506:Generated_Source\PSoC4/CyLib.c **** *
2507:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2508:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2509:Generated_Source\PSoC4/CyLib.c **** {
 1899              		.loc 1 2509 0
 1900              		.cfi_startproc
 1901 0000 80B5     		push	{r7, lr}
 1902              		.cfi_def_cfa_offset 8
 1903              		.cfi_offset 7, -8
 1904              		.cfi_offset 14, -4
 1905 0002 82B0     		sub	sp, sp, #8
 1906              		.cfi_def_cfa_offset 16
 1907 0004 00AF     		add	r7, sp, #0
 1908              		.cfi_def_cfa_register 7
2510:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2511:Generated_Source\PSoC4/CyLib.c **** 
2512:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1909              		.loc 1 2512 0
 1910 0006 0023     		mov	r3, #0
 1911 0008 7B60     		str	r3, [r7, #4]
 1912 000a 07E0     		b	.L116
 1913              	.L117:
2513:Generated_Source\PSoC4/CyLib.c ****     {
2514:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1914              		.loc 1 2514 0 discriminator 3
 1915 000c 124B     		ldr	r3, .L118
 1916 000e 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 79


 1917 0010 9200     		lsl	r2, r2, #2
 1918 0012 0021     		mov	r1, #0
 1919 0014 D150     		str	r1, [r2, r3]
2512:Generated_Source\PSoC4/CyLib.c ****     {
 1920              		.loc 1 2512 0 discriminator 3
 1921 0016 7B68     		ldr	r3, [r7, #4]
 1922 0018 0133     		add	r3, r3, #1
 1923 001a 7B60     		str	r3, [r7, #4]
 1924              	.L116:
2512:Generated_Source\PSoC4/CyLib.c ****     {
 1925              		.loc 1 2512 0 is_stmt 0 discriminator 1
 1926 001c 7B68     		ldr	r3, [r7, #4]
 1927 001e 042B     		cmp	r3, #4
 1928 0020 F4D9     		bls	.L117
2515:Generated_Source\PSoC4/CyLib.c ****     }
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 1929              		.loc 1 2517 0 is_stmt 1
 1930 0022 0E4B     		ldr	r3, .L118+4
 1931 0024 0F20     		mov	r0, #15
 1932 0026 191C     		mov	r1, r3
 1933 0028 FFF7FEFF 		bl	CyIntSetSysVector
2518:Generated_Source\PSoC4/CyLib.c **** 
2519:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2520:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 1934              		.loc 1 2520 0
 1935 002c 0120     		mov	r0, #1
 1936 002e FFF7FEFF 		bl	CySysTickSetClockSource
2521:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2522:Generated_Source\PSoC4/CyLib.c **** 
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 1937              		.loc 1 2523 0
 1938 0032 0B4B     		ldr	r3, .L118+8
 1939 0034 1B68     		ldr	r3, [r3]
 1940 0036 181C     		mov	r0, r3
 1941 0038 FA23     		mov	r3, #250
 1942 003a 9900     		lsl	r1, r3, #2
 1943 003c FFF7FEFF 		bl	__aeabi_uidiv
 1944 0040 031C     		mov	r3, r0
 1945 0042 181C     		mov	r0, r3
 1946 0044 FFF7FEFF 		bl	CySysTickSetReload
2524:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1947              		.loc 1 2524 0
 1948 0048 FFF7FEFF 		bl	CySysTickClear
2525:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1949              		.loc 1 2525 0
 1950 004c 0F20     		mov	r0, #15
 1951 004e FFF7FEFF 		bl	CyIntEnable
2526:Generated_Source\PSoC4/CyLib.c **** }
 1952              		.loc 1 2526 0
 1953 0052 BD46     		mov	sp, r7
 1954 0054 02B0     		add	sp, sp, #8
 1955              		@ sp needed
 1956 0056 80BD     		pop	{r7, pc}
 1957              	.L119:
 1958              		.align	2
 1959              	.L118:
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 80


 1960 0058 00000000 		.word	CySysTickCallbacks
 1961 005c 00000000 		.word	CySysTickServiceCallbacks
 1962 0060 00000000 		.word	cydelayFreqHz
 1963              		.cfi_endproc
 1964              	.LFE31:
 1965              		.size	CySysTickInit, .-CySysTickInit
 1966              		.section	.text.CySysTickEnable,"ax",%progbits
 1967              		.align	2
 1968              		.global	CySysTickEnable
 1969              		.code	16
 1970              		.thumb_func
 1971              		.type	CySysTickEnable, %function
 1972              	CySysTickEnable:
 1973              	.LFB32:
2527:Generated_Source\PSoC4/CyLib.c **** 
2528:Generated_Source\PSoC4/CyLib.c **** 
2529:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2530:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2531:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2532:Generated_Source\PSoC4/CyLib.c **** *
2533:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2534:Generated_Source\PSoC4/CyLib.c **** *
2535:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2536:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 1974              		.loc 1 2540 0
 1975              		.cfi_startproc
 1976 0000 80B5     		push	{r7, lr}
 1977              		.cfi_def_cfa_offset 8
 1978              		.cfi_offset 7, -8
 1979              		.cfi_offset 14, -4
 1980 0002 00AF     		add	r7, sp, #0
 1981              		.cfi_def_cfa_register 7
2541:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1982              		.loc 1 2541 0
 1983 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2542:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1984              		.loc 1 2542 0
 1985 0008 034B     		ldr	r3, .L121
 1986 000a 034A     		ldr	r2, .L121
 1987 000c 1268     		ldr	r2, [r2]
 1988 000e 0121     		mov	r1, #1
 1989 0010 0A43     		orr	r2, r1
 1990 0012 1A60     		str	r2, [r3]
2543:Generated_Source\PSoC4/CyLib.c **** }
 1991              		.loc 1 2543 0
 1992 0014 BD46     		mov	sp, r7
 1993              		@ sp needed
 1994 0016 80BD     		pop	{r7, pc}
 1995              	.L122:
 1996              		.align	2
 1997              	.L121:
 1998 0018 10E000E0 		.word	-536813552
 1999              		.cfi_endproc
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 81


 2000              	.LFE32:
 2001              		.size	CySysTickEnable, .-CySysTickEnable
 2002              		.section	.text.CySysTickStop,"ax",%progbits
 2003              		.align	2
 2004              		.global	CySysTickStop
 2005              		.code	16
 2006              		.thumb_func
 2007              		.type	CySysTickStop, %function
 2008              	CySysTickStop:
 2009              	.LFB33:
2544:Generated_Source\PSoC4/CyLib.c **** 
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2547:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2548:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2549:Generated_Source\PSoC4/CyLib.c **** *
2550:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2551:Generated_Source\PSoC4/CyLib.c **** *
2552:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2553:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2554:Generated_Source\PSoC4/CyLib.c **** *
2555:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2556:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2557:Generated_Source\PSoC4/CyLib.c **** {
 2010              		.loc 1 2557 0
 2011              		.cfi_startproc
 2012 0000 80B5     		push	{r7, lr}
 2013              		.cfi_def_cfa_offset 8
 2014              		.cfi_offset 7, -8
 2015              		.cfi_offset 14, -4
 2016 0002 00AF     		add	r7, sp, #0
 2017              		.cfi_def_cfa_register 7
2558:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2018              		.loc 1 2558 0
 2019 0004 034B     		ldr	r3, .L124
 2020 0006 034A     		ldr	r2, .L124
 2021 0008 1268     		ldr	r2, [r2]
 2022 000a 0121     		mov	r1, #1
 2023 000c 8A43     		bic	r2, r1
 2024 000e 1A60     		str	r2, [r3]
2559:Generated_Source\PSoC4/CyLib.c **** }
 2025              		.loc 1 2559 0
 2026 0010 BD46     		mov	sp, r7
 2027              		@ sp needed
 2028 0012 80BD     		pop	{r7, pc}
 2029              	.L125:
 2030              		.align	2
 2031              	.L124:
 2032 0014 10E000E0 		.word	-536813552
 2033              		.cfi_endproc
 2034              	.LFE33:
 2035              		.size	CySysTickStop, .-CySysTickStop
 2036              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2037              		.align	2
 2038              		.global	CySysTickEnableInterrupt
 2039              		.code	16
 2040              		.thumb_func
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 82


 2041              		.type	CySysTickEnableInterrupt, %function
 2042              	CySysTickEnableInterrupt:
 2043              	.LFB34:
2560:Generated_Source\PSoC4/CyLib.c **** 
2561:Generated_Source\PSoC4/CyLib.c **** 
2562:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2563:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2564:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2565:Generated_Source\PSoC4/CyLib.c **** *
2566:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2567:Generated_Source\PSoC4/CyLib.c **** *
2568:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2569:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2570:Generated_Source\PSoC4/CyLib.c **** *
2571:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2572:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2573:Generated_Source\PSoC4/CyLib.c **** {
 2044              		.loc 1 2573 0
 2045              		.cfi_startproc
 2046 0000 80B5     		push	{r7, lr}
 2047              		.cfi_def_cfa_offset 8
 2048              		.cfi_offset 7, -8
 2049              		.cfi_offset 14, -4
 2050 0002 00AF     		add	r7, sp, #0
 2051              		.cfi_def_cfa_register 7
2574:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2052              		.loc 1 2574 0
 2053 0004 034B     		ldr	r3, .L127
 2054 0006 034A     		ldr	r2, .L127
 2055 0008 1268     		ldr	r2, [r2]
 2056 000a 0221     		mov	r1, #2
 2057 000c 0A43     		orr	r2, r1
 2058 000e 1A60     		str	r2, [r3]
2575:Generated_Source\PSoC4/CyLib.c **** }
 2059              		.loc 1 2575 0
 2060 0010 BD46     		mov	sp, r7
 2061              		@ sp needed
 2062 0012 80BD     		pop	{r7, pc}
 2063              	.L128:
 2064              		.align	2
 2065              	.L127:
 2066 0014 10E000E0 		.word	-536813552
 2067              		.cfi_endproc
 2068              	.LFE34:
 2069              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2070              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2071              		.align	2
 2072              		.global	CySysTickDisableInterrupt
 2073              		.code	16
 2074              		.thumb_func
 2075              		.type	CySysTickDisableInterrupt, %function
 2076              	CySysTickDisableInterrupt:
 2077              	.LFB35:
2576:Generated_Source\PSoC4/CyLib.c **** 
2577:Generated_Source\PSoC4/CyLib.c **** 
2578:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2579:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 83


2580:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2581:Generated_Source\PSoC4/CyLib.c **** *
2582:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2583:Generated_Source\PSoC4/CyLib.c **** *
2584:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2585:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2586:Generated_Source\PSoC4/CyLib.c **** *
2587:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2588:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2589:Generated_Source\PSoC4/CyLib.c **** {
 2078              		.loc 1 2589 0
 2079              		.cfi_startproc
 2080 0000 80B5     		push	{r7, lr}
 2081              		.cfi_def_cfa_offset 8
 2082              		.cfi_offset 7, -8
 2083              		.cfi_offset 14, -4
 2084 0002 00AF     		add	r7, sp, #0
 2085              		.cfi_def_cfa_register 7
2590:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2086              		.loc 1 2590 0
 2087 0004 034B     		ldr	r3, .L130
 2088 0006 034A     		ldr	r2, .L130
 2089 0008 1268     		ldr	r2, [r2]
 2090 000a 0221     		mov	r1, #2
 2091 000c 8A43     		bic	r2, r1
 2092 000e 1A60     		str	r2, [r3]
2591:Generated_Source\PSoC4/CyLib.c **** }
 2093              		.loc 1 2591 0
 2094 0010 BD46     		mov	sp, r7
 2095              		@ sp needed
 2096 0012 80BD     		pop	{r7, pc}
 2097              	.L131:
 2098              		.align	2
 2099              	.L130:
 2100 0014 10E000E0 		.word	-536813552
 2101              		.cfi_endproc
 2102              	.LFE35:
 2103              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2104              		.section	.text.CySysTickSetReload,"ax",%progbits
 2105              		.align	2
 2106              		.global	CySysTickSetReload
 2107              		.code	16
 2108              		.thumb_func
 2109              		.type	CySysTickSetReload, %function
 2110              	CySysTickSetReload:
 2111              	.LFB36:
2592:Generated_Source\PSoC4/CyLib.c **** 
2593:Generated_Source\PSoC4/CyLib.c **** 
2594:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2595:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2596:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2597:Generated_Source\PSoC4/CyLib.c **** *
2598:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2599:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2600:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 84


2603:Generated_Source\PSoC4/CyLib.c **** *
2604:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2605:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2606:Generated_Source\PSoC4/CyLib.c **** {
 2112              		.loc 1 2606 0
 2113              		.cfi_startproc
 2114 0000 80B5     		push	{r7, lr}
 2115              		.cfi_def_cfa_offset 8
 2116              		.cfi_offset 7, -8
 2117              		.cfi_offset 14, -4
 2118 0002 82B0     		sub	sp, sp, #8
 2119              		.cfi_def_cfa_offset 16
 2120 0004 00AF     		add	r7, sp, #0
 2121              		.cfi_def_cfa_register 7
 2122 0006 7860     		str	r0, [r7, #4]
2607:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2123              		.loc 1 2607 0
 2124 0008 034B     		ldr	r3, .L133
 2125 000a 7A68     		ldr	r2, [r7, #4]
 2126 000c 1202     		lsl	r2, r2, #8
 2127 000e 120A     		lsr	r2, r2, #8
 2128 0010 1A60     		str	r2, [r3]
2608:Generated_Source\PSoC4/CyLib.c **** }
 2129              		.loc 1 2608 0
 2130 0012 BD46     		mov	sp, r7
 2131 0014 02B0     		add	sp, sp, #8
 2132              		@ sp needed
 2133 0016 80BD     		pop	{r7, pc}
 2134              	.L134:
 2135              		.align	2
 2136              	.L133:
 2137 0018 14E000E0 		.word	-536813548
 2138              		.cfi_endproc
 2139              	.LFE36:
 2140              		.size	CySysTickSetReload, .-CySysTickSetReload
 2141              		.section	.text.CySysTickGetReload,"ax",%progbits
 2142              		.align	2
 2143              		.global	CySysTickGetReload
 2144              		.code	16
 2145              		.thumb_func
 2146              		.type	CySysTickGetReload, %function
 2147              	CySysTickGetReload:
 2148              	.LFB37:
2609:Generated_Source\PSoC4/CyLib.c **** 
2610:Generated_Source\PSoC4/CyLib.c **** 
2611:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2612:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2613:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2614:Generated_Source\PSoC4/CyLib.c **** *
2615:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** * \return
2618:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2621:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2622:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 85


 2149              		.loc 1 2622 0
 2150              		.cfi_startproc
 2151 0000 80B5     		push	{r7, lr}
 2152              		.cfi_def_cfa_offset 8
 2153              		.cfi_offset 7, -8
 2154              		.cfi_offset 14, -4
 2155 0002 00AF     		add	r7, sp, #0
 2156              		.cfi_def_cfa_register 7
2623:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2157              		.loc 1 2623 0
 2158 0004 034B     		ldr	r3, .L137
 2159 0006 1B68     		ldr	r3, [r3]
 2160 0008 1B02     		lsl	r3, r3, #8
 2161 000a 1B0A     		lsr	r3, r3, #8
2624:Generated_Source\PSoC4/CyLib.c **** }
 2162              		.loc 1 2624 0
 2163 000c 181C     		mov	r0, r3
 2164 000e BD46     		mov	sp, r7
 2165              		@ sp needed
 2166 0010 80BD     		pop	{r7, pc}
 2167              	.L138:
 2168 0012 C046     		.align	2
 2169              	.L137:
 2170 0014 14E000E0 		.word	-536813548
 2171              		.cfi_endproc
 2172              	.LFE37:
 2173              		.size	CySysTickGetReload, .-CySysTickGetReload
 2174              		.section	.text.CySysTickGetValue,"ax",%progbits
 2175              		.align	2
 2176              		.global	CySysTickGetValue
 2177              		.code	16
 2178              		.thumb_func
 2179              		.type	CySysTickGetValue, %function
 2180              	CySysTickGetValue:
 2181              	.LFB38:
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c **** 
2627:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2628:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2629:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2630:Generated_Source\PSoC4/CyLib.c **** *
2631:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2632:Generated_Source\PSoC4/CyLib.c **** *
2633:Generated_Source\PSoC4/CyLib.c **** * \return
2634:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2635:Generated_Source\PSoC4/CyLib.c **** *
2636:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2637:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2638:Generated_Source\PSoC4/CyLib.c **** {
 2182              		.loc 1 2638 0
 2183              		.cfi_startproc
 2184 0000 80B5     		push	{r7, lr}
 2185              		.cfi_def_cfa_offset 8
 2186              		.cfi_offset 7, -8
 2187              		.cfi_offset 14, -4
 2188 0002 00AF     		add	r7, sp, #0
 2189              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 86


2639:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2190              		.loc 1 2639 0
 2191 0004 034B     		ldr	r3, .L141
 2192 0006 1B68     		ldr	r3, [r3]
 2193 0008 1B02     		lsl	r3, r3, #8
 2194 000a 1B0A     		lsr	r3, r3, #8
2640:Generated_Source\PSoC4/CyLib.c **** }
 2195              		.loc 1 2640 0
 2196 000c 181C     		mov	r0, r3
 2197 000e BD46     		mov	sp, r7
 2198              		@ sp needed
 2199 0010 80BD     		pop	{r7, pc}
 2200              	.L142:
 2201 0012 C046     		.align	2
 2202              	.L141:
 2203 0014 18E000E0 		.word	-536813544
 2204              		.cfi_endproc
 2205              	.LFE38:
 2206              		.size	CySysTickGetValue, .-CySysTickGetValue
 2207              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2208              		.align	2
 2209              		.global	CySysTickSetClockSource
 2210              		.code	16
 2211              		.thumb_func
 2212              		.type	CySysTickSetClockSource, %function
 2213              	CySysTickSetClockSource:
 2214              	.LFB39:
2641:Generated_Source\PSoC4/CyLib.c **** 
2642:Generated_Source\PSoC4/CyLib.c **** 
2643:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2644:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2645:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2646:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2647:Generated_Source\PSoC4/CyLib.c ****     *
2648:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2649:Generated_Source\PSoC4/CyLib.c ****     *
2650:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2651:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2652:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2653:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2654:Generated_Source\PSoC4/CyLib.c ****     *
2655:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2656:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2657:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2658:Generated_Source\PSoC4/CyLib.c ****     *
2659:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2660:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2661:Generated_Source\PSoC4/CyLib.c ****     *
2662:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2663:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2664:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2665:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2666:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2667:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2668:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2669:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2670:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 87


 2215              		.loc 1 2670 0
 2216              		.cfi_startproc
 2217 0000 80B5     		push	{r7, lr}
 2218              		.cfi_def_cfa_offset 8
 2219              		.cfi_offset 7, -8
 2220              		.cfi_offset 14, -4
 2221 0002 82B0     		sub	sp, sp, #8
 2222              		.cfi_def_cfa_offset 16
 2223 0004 00AF     		add	r7, sp, #0
 2224              		.cfi_def_cfa_register 7
 2225 0006 7860     		str	r0, [r7, #4]
2671:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2226              		.loc 1 2671 0
 2227 0008 7B68     		ldr	r3, [r7, #4]
 2228 000a 012B     		cmp	r3, #1
 2229 000c 06D1     		bne	.L144
2672:Generated_Source\PSoC4/CyLib.c ****         {
2673:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 2230              		.loc 1 2673 0
 2231 000e 084B     		ldr	r3, .L146
 2232 0010 074A     		ldr	r2, .L146
 2233 0012 1268     		ldr	r2, [r2]
 2234 0014 0421     		mov	r1, #4
 2235 0016 0A43     		orr	r2, r1
 2236 0018 1A60     		str	r2, [r3]
 2237 001a 05E0     		b	.L143
 2238              	.L144:
2674:Generated_Source\PSoC4/CyLib.c ****         }
2675:Generated_Source\PSoC4/CyLib.c ****         else
2676:Generated_Source\PSoC4/CyLib.c ****         {
2677:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 2239              		.loc 1 2677 0
 2240 001c 044B     		ldr	r3, .L146
 2241 001e 044A     		ldr	r2, .L146
 2242 0020 1268     		ldr	r2, [r2]
 2243 0022 0421     		mov	r1, #4
 2244 0024 8A43     		bic	r2, r1
 2245 0026 1A60     		str	r2, [r3]
 2246              	.L143:
2678:Generated_Source\PSoC4/CyLib.c ****         }
2679:Generated_Source\PSoC4/CyLib.c ****     }
 2247              		.loc 1 2679 0
 2248 0028 BD46     		mov	sp, r7
 2249 002a 02B0     		add	sp, sp, #8
 2250              		@ sp needed
 2251 002c 80BD     		pop	{r7, pc}
 2252              	.L147:
 2253 002e C046     		.align	2
 2254              	.L146:
 2255 0030 10E000E0 		.word	-536813552
 2256              		.cfi_endproc
 2257              	.LFE39:
 2258              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2259              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2260              		.align	2
 2261              		.global	CySysTickGetCountFlag
 2262              		.code	16
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 88


 2263              		.thumb_func
 2264              		.type	CySysTickGetCountFlag, %function
 2265              	CySysTickGetCountFlag:
 2266              	.LFB40:
2680:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2681:Generated_Source\PSoC4/CyLib.c **** 
2682:Generated_Source\PSoC4/CyLib.c **** 
2683:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2684:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2685:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2688:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2689:Generated_Source\PSoC4/CyLib.c **** *
2690:Generated_Source\PSoC4/CyLib.c **** * \return
2691:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2692:Generated_Source\PSoC4/CyLib.c **** *
2693:Generated_Source\PSoC4/CyLib.c **** *
2694:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2695:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2696:Generated_Source\PSoC4/CyLib.c **** *
2697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2699:Generated_Source\PSoC4/CyLib.c **** {
 2267              		.loc 1 2699 0
 2268              		.cfi_startproc
 2269 0000 80B5     		push	{r7, lr}
 2270              		.cfi_def_cfa_offset 8
 2271              		.cfi_offset 7, -8
 2272              		.cfi_offset 14, -4
 2273 0002 00AF     		add	r7, sp, #0
 2274              		.cfi_def_cfa_register 7
2700:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2275              		.loc 1 2700 0
 2276 0004 034B     		ldr	r3, .L150
 2277 0006 1B68     		ldr	r3, [r3]
 2278 0008 1B0C     		lsr	r3, r3, #16
 2279 000a 0122     		mov	r2, #1
 2280 000c 1340     		and	r3, r2
2701:Generated_Source\PSoC4/CyLib.c **** }
 2281              		.loc 1 2701 0
 2282 000e 181C     		mov	r0, r3
 2283 0010 BD46     		mov	sp, r7
 2284              		@ sp needed
 2285 0012 80BD     		pop	{r7, pc}
 2286              	.L151:
 2287              		.align	2
 2288              	.L150:
 2289 0014 10E000E0 		.word	-536813552
 2290              		.cfi_endproc
 2291              	.LFE40:
 2292              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2293              		.section	.text.CySysTickClear,"ax",%progbits
 2294              		.align	2
 2295              		.global	CySysTickClear
 2296              		.code	16
 2297              		.thumb_func
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 89


 2298              		.type	CySysTickClear, %function
 2299              	CySysTickClear:
 2300              	.LFB41:
2702:Generated_Source\PSoC4/CyLib.c **** 
2703:Generated_Source\PSoC4/CyLib.c **** 
2704:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2705:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2706:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2707:Generated_Source\PSoC4/CyLib.c **** *
2708:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2709:Generated_Source\PSoC4/CyLib.c **** *
2710:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2711:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2712:Generated_Source\PSoC4/CyLib.c **** {
 2301              		.loc 1 2712 0
 2302              		.cfi_startproc
 2303 0000 80B5     		push	{r7, lr}
 2304              		.cfi_def_cfa_offset 8
 2305              		.cfi_offset 7, -8
 2306              		.cfi_offset 14, -4
 2307 0002 00AF     		add	r7, sp, #0
 2308              		.cfi_def_cfa_register 7
2713:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2309              		.loc 1 2713 0
 2310 0004 024B     		ldr	r3, .L153
 2311 0006 0022     		mov	r2, #0
 2312 0008 1A60     		str	r2, [r3]
2714:Generated_Source\PSoC4/CyLib.c **** }
 2313              		.loc 1 2714 0
 2314 000a BD46     		mov	sp, r7
 2315              		@ sp needed
 2316 000c 80BD     		pop	{r7, pc}
 2317              	.L154:
 2318 000e C046     		.align	2
 2319              	.L153:
 2320 0010 18E000E0 		.word	-536813544
 2321              		.cfi_endproc
 2322              	.LFE41:
 2323              		.size	CySysTickClear, .-CySysTickClear
 2324              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2325              		.align	2
 2326              		.global	CySysTickSetCallback
 2327              		.code	16
 2328              		.thumb_func
 2329              		.type	CySysTickSetCallback, %function
 2330              	CySysTickSetCallback:
 2331              	.LFB42:
2715:Generated_Source\PSoC4/CyLib.c **** 
2716:Generated_Source\PSoC4/CyLib.c **** 
2717:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2718:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2719:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2720:Generated_Source\PSoC4/CyLib.c **** *
2721:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2722:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2723:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2724:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 90


2725:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2726:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2727:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2728:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2729:Generated_Source\PSoC4/CyLib.c **** *  functions.
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2732:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2733:Generated_Source\PSoC4/CyLib.c **** *
2734:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2735:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2736:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2737:Generated_Source\PSoC4/CyLib.c **** *
2738:Generated_Source\PSoC4/CyLib.c **** * \return
2739:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2740:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2741:Generated_Source\PSoC4/CyLib.c **** *
2742:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2743:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2744:Generated_Source\PSoC4/CyLib.c **** *
2745:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2746:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2747:Generated_Source\PSoC4/CyLib.c **** {
 2332              		.loc 1 2747 0
 2333              		.cfi_startproc
 2334 0000 80B5     		push	{r7, lr}
 2335              		.cfi_def_cfa_offset 8
 2336              		.cfi_offset 7, -8
 2337              		.cfi_offset 14, -4
 2338 0002 84B0     		sub	sp, sp, #16
 2339              		.cfi_def_cfa_offset 24
 2340 0004 00AF     		add	r7, sp, #0
 2341              		.cfi_def_cfa_register 7
 2342 0006 7860     		str	r0, [r7, #4]
 2343 0008 3960     		str	r1, [r7]
2748:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2749:Generated_Source\PSoC4/CyLib.c **** 
2750:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2344              		.loc 1 2750 0
 2345 000a 074B     		ldr	r3, .L157
 2346 000c 7A68     		ldr	r2, [r7, #4]
 2347 000e 9200     		lsl	r2, r2, #2
 2348 0010 D358     		ldr	r3, [r2, r3]
 2349 0012 FB60     		str	r3, [r7, #12]
2751:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2350              		.loc 1 2751 0
 2351 0014 044B     		ldr	r3, .L157
 2352 0016 7A68     		ldr	r2, [r7, #4]
 2353 0018 9200     		lsl	r2, r2, #2
 2354 001a 3968     		ldr	r1, [r7]
 2355 001c D150     		str	r1, [r2, r3]
2752:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2356              		.loc 1 2752 0
 2357 001e FB68     		ldr	r3, [r7, #12]
2753:Generated_Source\PSoC4/CyLib.c **** }
 2358              		.loc 1 2753 0
 2359 0020 181C     		mov	r0, r3
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 91


 2360 0022 BD46     		mov	sp, r7
 2361 0024 04B0     		add	sp, sp, #16
 2362              		@ sp needed
 2363 0026 80BD     		pop	{r7, pc}
 2364              	.L158:
 2365              		.align	2
 2366              	.L157:
 2367 0028 00000000 		.word	CySysTickCallbacks
 2368              		.cfi_endproc
 2369              	.LFE42:
 2370              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2371              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2372              		.align	2
 2373              		.global	CySysTickGetCallback
 2374              		.code	16
 2375              		.thumb_func
 2376              		.type	CySysTickGetCallback, %function
 2377              	CySysTickGetCallback:
 2378              	.LFB43:
2754:Generated_Source\PSoC4/CyLib.c **** 
2755:Generated_Source\PSoC4/CyLib.c **** 
2756:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2757:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2758:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2759:Generated_Source\PSoC4/CyLib.c **** *
2760:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2761:Generated_Source\PSoC4/CyLib.c **** *
2762:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2763:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2767:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2771:Generated_Source\PSoC4/CyLib.c **** {
 2379              		.loc 1 2771 0
 2380              		.cfi_startproc
 2381 0000 80B5     		push	{r7, lr}
 2382              		.cfi_def_cfa_offset 8
 2383              		.cfi_offset 7, -8
 2384              		.cfi_offset 14, -4
 2385 0002 82B0     		sub	sp, sp, #8
 2386              		.cfi_def_cfa_offset 16
 2387 0004 00AF     		add	r7, sp, #0
 2388              		.cfi_def_cfa_register 7
 2389 0006 7860     		str	r0, [r7, #4]
2772:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2390              		.loc 1 2772 0
 2391 0008 034B     		ldr	r3, .L161
 2392 000a 7A68     		ldr	r2, [r7, #4]
 2393 000c 9200     		lsl	r2, r2, #2
 2394 000e D358     		ldr	r3, [r2, r3]
2773:Generated_Source\PSoC4/CyLib.c **** }
 2395              		.loc 1 2773 0
 2396 0010 181C     		mov	r0, r3
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 92


 2397 0012 BD46     		mov	sp, r7
 2398 0014 02B0     		add	sp, sp, #8
 2399              		@ sp needed
 2400 0016 80BD     		pop	{r7, pc}
 2401              	.L162:
 2402              		.align	2
 2403              	.L161:
 2404 0018 00000000 		.word	CySysTickCallbacks
 2405              		.cfi_endproc
 2406              	.LFE43:
 2407              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2408              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2409              		.align	2
 2410              		.code	16
 2411              		.thumb_func
 2412              		.type	CySysTickServiceCallbacks, %function
 2413              	CySysTickServiceCallbacks:
 2414              	.LFB44:
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2783:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2784:Generated_Source\PSoC4/CyLib.c **** {
 2415              		.loc 1 2784 0
 2416              		.cfi_startproc
 2417 0000 80B5     		push	{r7, lr}
 2418              		.cfi_def_cfa_offset 8
 2419              		.cfi_offset 7, -8
 2420              		.cfi_offset 14, -4
 2421 0002 82B0     		sub	sp, sp, #8
 2422              		.cfi_def_cfa_offset 16
 2423 0004 00AF     		add	r7, sp, #0
 2424              		.cfi_def_cfa_register 7
2785:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2786:Generated_Source\PSoC4/CyLib.c **** 
2787:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2788:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2425              		.loc 1 2788 0
 2426 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2427 000a 031E     		sub	r3, r0, #0
 2428 000c 012B     		cmp	r3, #1
 2429 000e 13D1     		bne	.L163
2789:Generated_Source\PSoC4/CyLib.c ****     {
2790:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2430              		.loc 1 2790 0
 2431 0010 0023     		mov	r3, #0
 2432 0012 7B60     		str	r3, [r7, #4]
 2433 0014 0DE0     		b	.L165
 2434              	.L167:
2791:Generated_Source\PSoC4/CyLib.c ****         {
2792:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 93


 2435              		.loc 1 2792 0
 2436 0016 0A4B     		ldr	r3, .L168
 2437 0018 7A68     		ldr	r2, [r7, #4]
 2438 001a 9200     		lsl	r2, r2, #2
 2439 001c D358     		ldr	r3, [r2, r3]
 2440 001e 002B     		cmp	r3, #0
 2441 0020 04D0     		beq	.L166
2793:Generated_Source\PSoC4/CyLib.c ****             {
2794:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2442              		.loc 1 2794 0
 2443 0022 074B     		ldr	r3, .L168
 2444 0024 7A68     		ldr	r2, [r7, #4]
 2445 0026 9200     		lsl	r2, r2, #2
 2446 0028 D358     		ldr	r3, [r2, r3]
 2447 002a 9847     		blx	r3
 2448              	.L166:
2790:Generated_Source\PSoC4/CyLib.c ****         {
 2449              		.loc 1 2790 0 discriminator 2
 2450 002c 7B68     		ldr	r3, [r7, #4]
 2451 002e 0133     		add	r3, r3, #1
 2452 0030 7B60     		str	r3, [r7, #4]
 2453              	.L165:
2790:Generated_Source\PSoC4/CyLib.c ****         {
 2454              		.loc 1 2790 0 is_stmt 0 discriminator 1
 2455 0032 7B68     		ldr	r3, [r7, #4]
 2456 0034 042B     		cmp	r3, #4
 2457 0036 EED9     		bls	.L167
 2458              	.L163:
2795:Generated_Source\PSoC4/CyLib.c ****             }
2796:Generated_Source\PSoC4/CyLib.c ****         }
2797:Generated_Source\PSoC4/CyLib.c ****     }
2798:Generated_Source\PSoC4/CyLib.c **** }
 2459              		.loc 1 2798 0 is_stmt 1
 2460 0038 BD46     		mov	sp, r7
 2461 003a 02B0     		add	sp, sp, #8
 2462              		@ sp needed
 2463 003c 80BD     		pop	{r7, pc}
 2464              	.L169:
 2465 003e C046     		.align	2
 2466              	.L168:
 2467 0040 00000000 		.word	CySysTickCallbacks
 2468              		.cfi_endproc
 2469              	.LFE44:
 2470              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2471              		.section	.text.CyGetUniqueId,"ax",%progbits
 2472              		.align	2
 2473              		.global	CyGetUniqueId
 2474              		.code	16
 2475              		.thumb_func
 2476              		.type	CyGetUniqueId, %function
 2477              	CyGetUniqueId:
 2478              	.LFB45:
2799:Generated_Source\PSoC4/CyLib.c **** 
2800:Generated_Source\PSoC4/CyLib.c **** 
2801:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2802:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2803:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 94


2804:Generated_Source\PSoC4/CyLib.c **** *
2805:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2806:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2807:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2808:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2809:Generated_Source\PSoC4/CyLib.c **** *
2810:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2811:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2812:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2813:Generated_Source\PSoC4/CyLib.c **** *
2814:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2815:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2816:Generated_Source\PSoC4/CyLib.c **** {
 2479              		.loc 1 2816 0
 2480              		.cfi_startproc
 2481 0000 80B5     		push	{r7, lr}
 2482              		.cfi_def_cfa_offset 8
 2483              		.cfi_offset 7, -8
 2484              		.cfi_offset 14, -4
 2485 0002 82B0     		sub	sp, sp, #8
 2486              		.cfi_def_cfa_offset 16
 2487 0004 00AF     		add	r7, sp, #0
 2488              		.cfi_def_cfa_register 7
 2489 0006 7860     		str	r0, [r7, #4]
2817:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2818:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2490              		.loc 1 2818 0
 2491 0008 254B     		ldr	r3, .L171
 2492 000a 1B78     		ldrb	r3, [r3]
 2493 000c DBB2     		uxtb	r3, r3
 2494 000e 1A1C     		mov	r2, r3
 2495 0010 7B68     		ldr	r3, [r7, #4]
 2496 0012 1A60     		str	r2, [r3]
2819:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2497              		.loc 1 2819 0
 2498 0014 234B     		ldr	r3, .L171+4
 2499 0016 1B78     		ldrb	r3, [r3]
 2500 0018 DBB2     		uxtb	r3, r3
 2501 001a 1A02     		lsl	r2, r3, #8
 2502 001c 7B68     		ldr	r3, [r7, #4]
 2503 001e 1B68     		ldr	r3, [r3]
 2504 0020 1A43     		orr	r2, r3
 2505 0022 7B68     		ldr	r3, [r7, #4]
 2506 0024 1A60     		str	r2, [r3]
2820:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2507              		.loc 1 2820 0
 2508 0026 204B     		ldr	r3, .L171+8
 2509 0028 1B78     		ldrb	r3, [r3]
 2510 002a DBB2     		uxtb	r3, r3
 2511 002c 1A04     		lsl	r2, r3, #16
 2512 002e 7B68     		ldr	r3, [r7, #4]
 2513 0030 1B68     		ldr	r3, [r3]
 2514 0032 1A43     		orr	r2, r3
 2515 0034 7B68     		ldr	r3, [r7, #4]
 2516 0036 1A60     		str	r2, [r3]
2821:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2517              		.loc 1 2821 0
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 95


 2518 0038 1C4B     		ldr	r3, .L171+12
 2519 003a 1B78     		ldrb	r3, [r3]
 2520 003c DBB2     		uxtb	r3, r3
 2521 003e 1A06     		lsl	r2, r3, #24
 2522 0040 7B68     		ldr	r3, [r7, #4]
 2523 0042 1B68     		ldr	r3, [r3]
 2524 0044 1A43     		orr	r2, r3
 2525 0046 7B68     		ldr	r3, [r7, #4]
 2526 0048 1A60     		str	r2, [r3]
2822:Generated_Source\PSoC4/CyLib.c **** 
2823:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2527              		.loc 1 2823 0
 2528 004a 7B68     		ldr	r3, [r7, #4]
 2529 004c 0433     		add	r3, r3, #4
 2530 004e 184A     		ldr	r2, .L171+16
 2531 0050 1278     		ldrb	r2, [r2]
 2532 0052 D2B2     		uxtb	r2, r2
 2533 0054 1A60     		str	r2, [r3]
2824:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2534              		.loc 1 2824 0
 2535 0056 174B     		ldr	r3, .L171+20
 2536 0058 1B78     		ldrb	r3, [r3]
 2537 005a DBB2     		uxtb	r3, r3
 2538 005c 1902     		lsl	r1, r3, #8
 2539 005e 7B68     		ldr	r3, [r7, #4]
 2540 0060 0433     		add	r3, r3, #4
 2541 0062 7A68     		ldr	r2, [r7, #4]
 2542 0064 0432     		add	r2, r2, #4
 2543 0066 1268     		ldr	r2, [r2]
 2544 0068 0A43     		orr	r2, r1
 2545 006a 1A60     		str	r2, [r3]
2825:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2546              		.loc 1 2825 0
 2547 006c 124B     		ldr	r3, .L171+24
 2548 006e 1B78     		ldrb	r3, [r3]
 2549 0070 DBB2     		uxtb	r3, r3
 2550 0072 1904     		lsl	r1, r3, #16
 2551 0074 7B68     		ldr	r3, [r7, #4]
 2552 0076 0433     		add	r3, r3, #4
 2553 0078 7A68     		ldr	r2, [r7, #4]
 2554 007a 0432     		add	r2, r2, #4
 2555 007c 1268     		ldr	r2, [r2]
 2556 007e 0A43     		orr	r2, r1
 2557 0080 1A60     		str	r2, [r3]
2826:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2558              		.loc 1 2826 0
 2559 0082 0E4B     		ldr	r3, .L171+28
 2560 0084 1B78     		ldrb	r3, [r3]
 2561 0086 DBB2     		uxtb	r3, r3
 2562 0088 1906     		lsl	r1, r3, #24
 2563 008a 7B68     		ldr	r3, [r7, #4]
 2564 008c 0433     		add	r3, r3, #4
 2565 008e 7A68     		ldr	r2, [r7, #4]
 2566 0090 0432     		add	r2, r2, #4
 2567 0092 1268     		ldr	r2, [r2]
 2568 0094 0A43     		orr	r2, r1
 2569 0096 1A60     		str	r2, [r3]
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 96


2827:Generated_Source\PSoC4/CyLib.c **** #else
2828:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2829:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2830:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2831:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2832:Generated_Source\PSoC4/CyLib.c **** 
2833:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
2834:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
2835:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
2836:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
2837:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
2838:Generated_Source\PSoC4/CyLib.c **** }
 2570              		.loc 1 2838 0
 2571 0098 BD46     		mov	sp, r7
 2572 009a 02B0     		add	sp, sp, #8
 2573              		@ sp needed
 2574 009c 80BD     		pop	{r7, pc}
 2575              	.L172:
 2576 009e C046     		.align	2
 2577              	.L171:
 2578 00a0 78F1FF0F 		.word	268431736
 2579 00a4 79F1FF0F 		.word	268431737
 2580 00a8 7AF1FF0F 		.word	268431738
 2581 00ac 7BF1FF0F 		.word	268431739
 2582 00b0 7CF1FF0F 		.word	268431740
 2583 00b4 7DF1FF0F 		.word	268431741
 2584 00b8 7EF1FF0F 		.word	268431742
 2585 00bc 7FF1FF0F 		.word	268431743
 2586              		.cfi_endproc
 2587              	.LFE45:
 2588              		.size	CyGetUniqueId, .-CyGetUniqueId
 2589              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2590              		.align	2
 2591              		.global	CySysSetRamAccessArbPriority
 2592              		.code	16
 2593              		.thumb_func
 2594              		.type	CySysSetRamAccessArbPriority, %function
 2595              	CySysSetRamAccessArbPriority:
 2596              	.LFB46:
2839:Generated_Source\PSoC4/CyLib.c **** 
2840:Generated_Source\PSoC4/CyLib.c **** 
2841:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
2842:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2843:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
2844:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2845:Generated_Source\PSoC4/CyLib.c ****     *
2846:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
2847:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
2848:Generated_Source\PSoC4/CyLib.c ****     *  details.
2849:Generated_Source\PSoC4/CyLib.c ****     *
2850:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
2851:Generated_Source\PSoC4/CyLib.c ****     *
2852:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
2853:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
2854:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
2855:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
2856:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 97


2857:Generated_Source\PSoC4/CyLib.c ****     *
2858:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2859:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
2860:Generated_Source\PSoC4/CyLib.c ****     {
 2597              		.loc 1 2860 0
 2598              		.cfi_startproc
 2599 0000 80B5     		push	{r7, lr}
 2600              		.cfi_def_cfa_offset 8
 2601              		.cfi_offset 7, -8
 2602              		.cfi_offset 14, -4
 2603 0002 84B0     		sub	sp, sp, #16
 2604              		.cfi_def_cfa_offset 24
 2605 0004 00AF     		add	r7, sp, #0
 2606              		.cfi_def_cfa_register 7
 2607 0006 7860     		str	r0, [r7, #4]
2861:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2608              		.loc 1 2863 0
 2609 0008 094B     		ldr	r3, .L174
 2610 000a 1B68     		ldr	r3, [r3]
 2611 000c 094A     		ldr	r2, .L174+4
 2612 000e 1340     		and	r3, r2
 2613 0010 FB60     		str	r3, [r7, #12]
2864:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2614              		.loc 1 2864 0
 2615 0012 7B68     		ldr	r3, [r7, #4]
 2616 0014 5A04     		lsl	r2, r3, #17
 2617 0016 C023     		mov	r3, #192
 2618 0018 DB02     		lsl	r3, r3, #11
 2619 001a 1340     		and	r3, r2
 2620 001c FA68     		ldr	r2, [r7, #12]
 2621 001e 1343     		orr	r3, r2
 2622 0020 FB60     		str	r3, [r7, #12]
2865:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2623              		.loc 1 2865 0
 2624 0022 034B     		ldr	r3, .L174
 2625 0024 FA68     		ldr	r2, [r7, #12]
 2626 0026 1A60     		str	r2, [r3]
2866:Generated_Source\PSoC4/CyLib.c ****     }
 2627              		.loc 1 2866 0
 2628 0028 BD46     		mov	sp, r7
 2629 002a 04B0     		add	sp, sp, #16
 2630              		@ sp needed
 2631 002c 80BD     		pop	{r7, pc}
 2632              	.L175:
 2633 002e C046     		.align	2
 2634              	.L174:
 2635 0030 38001040 		.word	1074790456
 2636 0034 FFFFF9FF 		.word	-393217
 2637              		.cfi_endproc
 2638              	.LFE46:
 2639              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2640              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2641              		.align	2
 2642              		.global	CySysSetFlashAccessArbPriority
 2643              		.code	16
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 98


 2644              		.thumb_func
 2645              		.type	CySysSetFlashAccessArbPriority, %function
 2646              	CySysSetFlashAccessArbPriority:
 2647              	.LFB47:
2867:Generated_Source\PSoC4/CyLib.c **** 
2868:Generated_Source\PSoC4/CyLib.c **** 
2869:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2870:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
2871:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2872:Generated_Source\PSoC4/CyLib.c ****     *
2873:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
2874:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
2875:Generated_Source\PSoC4/CyLib.c ****     *  details.
2876:Generated_Source\PSoC4/CyLib.c ****     *
2877:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
2878:Generated_Source\PSoC4/CyLib.c ****     *
2879:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
2880:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
2881:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
2882:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
2883:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
2884:Generated_Source\PSoC4/CyLib.c ****     *
2885:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2886:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
2887:Generated_Source\PSoC4/CyLib.c ****     {
 2648              		.loc 1 2887 0
 2649              		.cfi_startproc
 2650 0000 80B5     		push	{r7, lr}
 2651              		.cfi_def_cfa_offset 8
 2652              		.cfi_offset 7, -8
 2653              		.cfi_offset 14, -4
 2654 0002 84B0     		sub	sp, sp, #16
 2655              		.cfi_def_cfa_offset 24
 2656 0004 00AF     		add	r7, sp, #0
 2657              		.cfi_def_cfa_register 7
 2658 0006 7860     		str	r0, [r7, #4]
2888:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2889:Generated_Source\PSoC4/CyLib.c **** 
2890:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2659              		.loc 1 2890 0
 2660 0008 094B     		ldr	r3, .L177
 2661 000a 1B68     		ldr	r3, [r3]
 2662 000c 094A     		ldr	r2, .L177+4
 2663 000e 1340     		and	r3, r2
 2664 0010 FB60     		str	r3, [r7, #12]
2891:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2665              		.loc 1 2891 0
 2666 0012 7B68     		ldr	r3, [r7, #4]
 2667 0014 5A04     		lsl	r2, r3, #17
 2668 0016 C023     		mov	r3, #192
 2669 0018 DB02     		lsl	r3, r3, #11
 2670 001a 1340     		and	r3, r2
 2671 001c FA68     		ldr	r2, [r7, #12]
 2672 001e 1343     		orr	r3, r2
 2673 0020 FB60     		str	r3, [r7, #12]
2892:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2674              		.loc 1 2892 0
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 99


 2675 0022 034B     		ldr	r3, .L177
 2676 0024 FA68     		ldr	r2, [r7, #12]
 2677 0026 1A60     		str	r2, [r3]
2893:Generated_Source\PSoC4/CyLib.c ****     }
 2678              		.loc 1 2893 0
 2679 0028 BD46     		mov	sp, r7
 2680 002a 04B0     		add	sp, sp, #16
 2681              		@ sp needed
 2682 002c 80BD     		pop	{r7, pc}
 2683              	.L178:
 2684 002e C046     		.align	2
 2685              	.L177:
 2686 0030 30001040 		.word	1074790448
 2687 0034 FFFFF9FF 		.word	-393217
 2688              		.cfi_endproc
 2689              	.LFE47:
 2690              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2691              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2692              		.align	2
 2693              		.global	CySysSetDmacAccessArbPriority
 2694              		.code	16
 2695              		.thumb_func
 2696              		.type	CySysSetDmacAccessArbPriority, %function
 2697              	CySysSetDmacAccessArbPriority:
 2698              	.LFB48:
2894:Generated_Source\PSoC4/CyLib.c **** 
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2897:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
2898:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2899:Generated_Source\PSoC4/CyLib.c ****     *
2900:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
2901:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
2902:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
2903:Generated_Source\PSoC4/CyLib.c ****     *
2904:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
2905:Generated_Source\PSoC4/CyLib.c ****     *
2906:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
2907:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
2908:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
2909:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
2910:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
2911:Generated_Source\PSoC4/CyLib.c ****     *
2912:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2913:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
2914:Generated_Source\PSoC4/CyLib.c ****     {
 2699              		.loc 1 2914 0
 2700              		.cfi_startproc
 2701 0000 80B5     		push	{r7, lr}
 2702              		.cfi_def_cfa_offset 8
 2703              		.cfi_offset 7, -8
 2704              		.cfi_offset 14, -4
 2705 0002 84B0     		sub	sp, sp, #16
 2706              		.cfi_def_cfa_offset 24
 2707 0004 00AF     		add	r7, sp, #0
 2708              		.cfi_def_cfa_register 7
 2709 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 100


2915:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2710              		.loc 1 2917 0
 2711 0008 094B     		ldr	r3, .L180
 2712 000a 1B68     		ldr	r3, [r3]
 2713 000c 094A     		ldr	r2, .L180+4
 2714 000e 1340     		and	r3, r2
 2715 0010 FB60     		str	r3, [r7, #12]
2918:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2716              		.loc 1 2918 0
 2717 0012 7B68     		ldr	r3, [r7, #4]
 2718 0014 5A04     		lsl	r2, r3, #17
 2719 0016 C023     		mov	r3, #192
 2720 0018 DB02     		lsl	r3, r3, #11
 2721 001a 1340     		and	r3, r2
 2722 001c FA68     		ldr	r2, [r7, #12]
 2723 001e 1343     		orr	r3, r2
 2724 0020 FB60     		str	r3, [r7, #12]
2919:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2725              		.loc 1 2919 0
 2726 0022 034B     		ldr	r3, .L180
 2727 0024 FA68     		ldr	r2, [r7, #12]
 2728 0026 1A60     		str	r2, [r3]
2920:Generated_Source\PSoC4/CyLib.c ****     }
 2729              		.loc 1 2920 0
 2730 0028 BD46     		mov	sp, r7
 2731 002a 04B0     		add	sp, sp, #16
 2732              		@ sp needed
 2733 002c 80BD     		pop	{r7, pc}
 2734              	.L181:
 2735 002e C046     		.align	2
 2736              	.L180:
 2737 0030 3C001040 		.word	1074790460
 2738 0034 FFFFF9FF 		.word	-393217
 2739              		.cfi_endproc
 2740              	.LFE48:
 2741              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2742              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2743              		.align	2
 2744              		.global	CySysSetPeripheralAccessArbPriority
 2745              		.code	16
 2746              		.thumb_func
 2747              		.type	CySysSetPeripheralAccessArbPriority, %function
 2748              	CySysSetPeripheralAccessArbPriority:
 2749              	.LFB49:
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
2925:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c ****     *
2927:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
2928:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
2929:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
2930:Generated_Source\PSoC4/CyLib.c ****     *
2931:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 101


2932:Generated_Source\PSoC4/CyLib.c ****     *
2933:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
2934:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
2935:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
2936:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
2937:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
2938:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
2939:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
2940:Generated_Source\PSoC4/CyLib.c ****     *
2941:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2942:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
2943:Generated_Source\PSoC4/CyLib.c ****     {
 2750              		.loc 1 2943 0
 2751              		.cfi_startproc
 2752 0000 80B5     		push	{r7, lr}
 2753              		.cfi_def_cfa_offset 8
 2754              		.cfi_offset 7, -8
 2755              		.cfi_offset 14, -4
 2756 0002 84B0     		sub	sp, sp, #16
 2757              		.cfi_def_cfa_offset 24
 2758 0004 00AF     		add	r7, sp, #0
 2759              		.cfi_def_cfa_register 7
 2760 0006 7860     		str	r0, [r7, #4]
 2761 0008 3960     		str	r1, [r7]
2944:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2945:Generated_Source\PSoC4/CyLib.c **** 
2946:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2762              		.loc 1 2946 0
 2763 000a 7B68     		ldr	r3, [r7, #4]
 2764 000c 002B     		cmp	r3, #0
 2765 000e 10D1     		bne	.L183
2947:Generated_Source\PSoC4/CyLib.c ****         {
2948:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2766              		.loc 1 2948 0
 2767 0010 154B     		ldr	r3, .L186
 2768 0012 1B68     		ldr	r3, [r3]
 2769 0014 154A     		ldr	r2, .L186+4
 2770 0016 1340     		and	r3, r2
 2771 0018 FB60     		str	r3, [r7, #12]
2949:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2772              		.loc 1 2949 0
 2773 001a 3B68     		ldr	r3, [r7]
 2774 001c 5A04     		lsl	r2, r3, #17
 2775 001e C023     		mov	r3, #192
 2776 0020 DB02     		lsl	r3, r3, #11
 2777 0022 1340     		and	r3, r2
 2778 0024 FA68     		ldr	r2, [r7, #12]
 2779 0026 1343     		orr	r3, r2
 2780 0028 FB60     		str	r3, [r7, #12]
2950:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 2781              		.loc 1 2950 0
 2782 002a 0F4B     		ldr	r3, .L186
 2783 002c FA68     		ldr	r2, [r7, #12]
 2784 002e 1A60     		str	r2, [r3]
 2785 0030 16E0     		b	.L182
 2786              	.L183:
2951:Generated_Source\PSoC4/CyLib.c ****         } else
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 102


2952:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
2953:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2787              		.loc 1 2953 0
 2788 0032 7B68     		ldr	r3, [r7, #4]
 2789 0034 012B     		cmp	r3, #1
 2790 0036 10D1     		bne	.L185
2954:Generated_Source\PSoC4/CyLib.c ****         {
2955:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2791              		.loc 1 2955 0
 2792 0038 0D4B     		ldr	r3, .L186+8
 2793 003a 1B68     		ldr	r3, [r3]
 2794 003c 0B4A     		ldr	r2, .L186+4
 2795 003e 1340     		and	r3, r2
 2796 0040 FB60     		str	r3, [r7, #12]
2956:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2797              		.loc 1 2956 0
 2798 0042 3B68     		ldr	r3, [r7]
 2799 0044 5A04     		lsl	r2, r3, #17
 2800 0046 C023     		mov	r3, #192
 2801 0048 DB02     		lsl	r3, r3, #11
 2802 004a 1340     		and	r3, r2
 2803 004c FA68     		ldr	r2, [r7, #12]
 2804 004e 1343     		orr	r3, r2
 2805 0050 FB60     		str	r3, [r7, #12]
2957:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 2806              		.loc 1 2957 0
 2807 0052 074B     		ldr	r3, .L186+8
 2808 0054 FA68     		ldr	r2, [r7, #12]
 2809 0056 1A60     		str	r2, [r3]
 2810 0058 02E0     		b	.L182
 2811              	.L185:
2958:Generated_Source\PSoC4/CyLib.c ****         } else
2959:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
2960:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
2961:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
2962:Generated_Source\PSoC4/CyLib.c ****         {
2963:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
2964:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
2965:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
2966:Generated_Source\PSoC4/CyLib.c ****         } else
2967:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
2968:Generated_Source\PSoC4/CyLib.c ****         {
2969:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
2970:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 2812              		.loc 1 2970 0 discriminator 1
 2813 005a 0020     		mov	r0, #0
 2814 005c FFF7FEFF 		bl	CyHalt
 2815              	.L182:
2971:Generated_Source\PSoC4/CyLib.c ****         }
2972:Generated_Source\PSoC4/CyLib.c ****     }
 2816              		.loc 1 2972 0
 2817 0060 BD46     		mov	sp, r7
 2818 0062 04B0     		add	sp, sp, #16
 2819              		@ sp needed
 2820 0064 80BD     		pop	{r7, pc}
 2821              	.L187:
 2822 0066 C046     		.align	2
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 103


 2823              	.L186:
 2824 0068 00011040 		.word	1074790656
 2825 006c FFFFF9FF 		.word	-393217
 2826 0070 04011040 		.word	1074790660
 2827              		.cfi_endproc
 2828              	.LFE49:
 2829              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2830              		.section	.text.CySysPrbSetGlobalVrefSource,"ax",%progbits
 2831              		.align	2
 2832              		.global	CySysPrbSetGlobalVrefSource
 2833              		.code	16
 2834              		.thumb_func
 2835              		.type	CySysPrbSetGlobalVrefSource, %function
 2836              	CySysPrbSetGlobalVrefSource:
 2837              	.LFB50:
2973:Generated_Source\PSoC4/CyLib.c **** 
2974:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_DMAC_PRESENT) */
2975:Generated_Source\PSoC4/CyLib.c **** 
2976:Generated_Source\PSoC4/CyLib.c **** 
2977:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PASS)
2978:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2979:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetGlobalVrefSource
2980:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2981:Generated_Source\PSoC4/CyLib.c ****     *
2982:Generated_Source\PSoC4/CyLib.c ****     *  Selects the source of the global voltage reference.
2983:Generated_Source\PSoC4/CyLib.c ****     *
2984:Generated_Source\PSoC4/CyLib.c ****     *  \note The global voltage reference uses one of the available programmable
2985:Generated_Source\PSoC4/CyLib.c ****     *  voltage reference lines.
2986:Generated_Source\PSoC4/CyLib.c ****     *
2987:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4 devices that support the programmable
2988:Generated_Source\PSoC4/CyLib.c ****     *  reference block. Please refer to the device TRM for more details.
2989:Generated_Source\PSoC4/CyLib.c ****     *
2990:Generated_Source\PSoC4/CyLib.c ****     *  This API affects the voltage values available in
2991:Generated_Source\PSoC4/CyLib.c ****     *  \ref CySysPrbSetGlobalVrefVoltage().
2992:Generated_Source\PSoC4/CyLib.c ****     *
2993:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M, PSoC 4200L and PSoC 4400 devices only.
2994:Generated_Source\PSoC4/CyLib.c ****     *
2995:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
2996:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_VREF_SOURCE_BG   Sets bandgap as the source of the global voltage
2997:Generated_Source\PSoC4/CyLib.c ****     *   reference.
2998:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_VREF_SOURCE_VDDA Sets VDDA as the source of the global voltage
2999:Generated_Source\PSoC4/CyLib.c ****     *   reference.
3000:Generated_Source\PSoC4/CyLib.c ****     *
3001:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3002:Generated_Source\PSoC4/CyLib.c ****     #ifdef CyDesignWideVoltageReference_PRB_REF
3003:Generated_Source\PSoC4/CyLib.c ****         void CySysPrbSetGlobalVrefSource(uint32 source)
3004:Generated_Source\PSoC4/CyLib.c ****         {
 2838              		.loc 1 3004 0
 2839              		.cfi_startproc
 2840 0000 80B5     		push	{r7, lr}
 2841              		.cfi_def_cfa_offset 8
 2842              		.cfi_offset 7, -8
 2843              		.cfi_offset 14, -4
 2844 0002 82B0     		sub	sp, sp, #8
 2845              		.cfi_def_cfa_offset 16
 2846 0004 00AF     		add	r7, sp, #0
 2847              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 104


 2848 0006 7860     		str	r0, [r7, #4]
3005:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_REF, CYFLD_PASS_VREF_SUP_SEL, source);
 2849              		.loc 1 3005 0
 2850 0008 074B     		ldr	r3, .L189
 2851 000a 074A     		ldr	r2, .L189
 2852 000c 1268     		ldr	r2, [r2]
 2853 000e 0221     		mov	r1, #2
 2854 0010 8A43     		bic	r2, r1
 2855 0012 111C     		mov	r1, r2
 2856 0014 7A68     		ldr	r2, [r7, #4]
 2857 0016 5200     		lsl	r2, r2, #1
 2858 0018 0220     		mov	r0, #2
 2859 001a 0240     		and	r2, r0
 2860 001c 0A43     		orr	r2, r1
 2861 001e 1A60     		str	r2, [r3]
3006:Generated_Source\PSoC4/CyLib.c ****         }
 2862              		.loc 1 3006 0
 2863 0020 BD46     		mov	sp, r7
 2864 0022 02B0     		add	sp, sp, #8
 2865              		@ sp needed
 2866 0024 80BD     		pop	{r7, pc}
 2867              	.L190:
 2868 0026 C046     		.align	2
 2869              	.L189:
 2870 0028 04023F40 		.word	1077871108
 2871              		.cfi_endproc
 2872              	.LFE50:
 2873              		.size	CySysPrbSetGlobalVrefSource, .-CySysPrbSetGlobalVrefSource
 2874              		.section	.text.CySysPrbSetBgGain,"ax",%progbits
 2875              		.align	2
 2876              		.global	CySysPrbSetBgGain
 2877              		.code	16
 2878              		.thumb_func
 2879              		.type	CySysPrbSetBgGain, %function
 2880              	CySysPrbSetBgGain:
 2881              	.LFB51:
3007:Generated_Source\PSoC4/CyLib.c ****     #endif
3008:Generated_Source\PSoC4/CyLib.c **** 
3009:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3010:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetBgGain
3011:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3012:Generated_Source\PSoC4/CyLib.c ****     *
3013:Generated_Source\PSoC4/CyLib.c ****     * Selects the gain of bandgap reference buffer. Note that this API is effective
3014:Generated_Source\PSoC4/CyLib.c ****     * only when the bandgap is set as the source of global voltage reference.
3015:Generated_Source\PSoC4/CyLib.c ****     *
3016:Generated_Source\PSoC4/CyLib.c ****     * \note This API affects the voltage values available in \ref
3017:Generated_Source\PSoC4/CyLib.c ****     * CySysPrbSetGlobalVrefVoltage() API.
3018:Generated_Source\PSoC4/CyLib.c ****     *
3019:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3020:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3021:Generated_Source\PSoC4/CyLib.c ****     *
3022:Generated_Source\PSoC4/CyLib.c ****     * \param gain:
3023:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_VREF_BG_GAINx1  Gain is 1.
3024:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_VREF_BG_GAINx2  Gain is 2.
3025:Generated_Source\PSoC4/CyLib.c ****     *
3026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3027:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbSetBgGain(uint32 gain)
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 105


3028:Generated_Source\PSoC4/CyLib.c ****     {
 2882              		.loc 1 3028 0
 2883              		.cfi_startproc
 2884 0000 80B5     		push	{r7, lr}
 2885              		.cfi_def_cfa_offset 8
 2886              		.cfi_offset 7, -8
 2887              		.cfi_offset 14, -4
 2888 0002 82B0     		sub	sp, sp, #8
 2889              		.cfi_def_cfa_offset 16
 2890 0004 00AF     		add	r7, sp, #0
 2891              		.cfi_def_cfa_register 7
 2892 0006 7860     		str	r0, [r7, #4]
3029:Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VBGR_BUF_GAIN, gain);
 2893              		.loc 1 3029 0
 2894 0008 064B     		ldr	r3, .L192
 2895 000a 064A     		ldr	r2, .L192
 2896 000c 1268     		ldr	r2, [r2]
 2897 000e 0321     		mov	r1, #3
 2898 0010 8A43     		bic	r2, r1
 2899 0012 111C     		mov	r1, r2
 2900 0014 7A68     		ldr	r2, [r7, #4]
 2901 0016 0320     		mov	r0, #3
 2902 0018 0240     		and	r2, r0
 2903 001a 0A43     		orr	r2, r1
 2904 001c 1A60     		str	r2, [r3]
3030:Generated_Source\PSoC4/CyLib.c ****     }
 2905              		.loc 1 3030 0
 2906 001e BD46     		mov	sp, r7
 2907 0020 02B0     		add	sp, sp, #8
 2908              		@ sp needed
 2909 0022 80BD     		pop	{r7, pc}
 2910              	.L193:
 2911              		.align	2
 2912              	.L192:
 2913 0024 00023F40 		.word	1077871104
 2914              		.cfi_endproc
 2915              	.LFE51:
 2916              		.size	CySysPrbSetBgGain, .-CySysPrbSetBgGain
 2917              		.section	.text.CySysPrbSetGlobalVrefVoltage,"ax",%progbits
 2918              		.align	2
 2919              		.global	CySysPrbSetGlobalVrefVoltage
 2920              		.code	16
 2921              		.thumb_func
 2922              		.type	CySysPrbSetGlobalVrefVoltage, %function
 2923              	CySysPrbSetGlobalVrefVoltage:
 2924              	.LFB52:
3031:Generated_Source\PSoC4/CyLib.c **** 
3032:Generated_Source\PSoC4/CyLib.c **** 
3033:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3034:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetGlobalVrefVoltage
3035:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3036:Generated_Source\PSoC4/CyLib.c ****     *
3037:Generated_Source\PSoC4/CyLib.c ****     * Selects the value of global voltage reference. Set the source of the global
3038:Generated_Source\PSoC4/CyLib.c ****     * voltage reference and bandgap buffer gain (if applicable) before calling this
3039:Generated_Source\PSoC4/CyLib.c ****     * API.
3040:Generated_Source\PSoC4/CyLib.c ****     *
3041:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 106


3042:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3043:Generated_Source\PSoC4/CyLib.c ****     *
3044:Generated_Source\PSoC4/CyLib.c ****     * \param voltageTap The range is from 1 to 16 that corresponds to:
3045:Generated_Source\PSoC4/CyLib.c ****     * Source is bandgap (x1): 0.08 V to 1.20 V in steps of 0.07 V approximately.
3046:Generated_Source\PSoC4/CyLib.c ****     * Source is bandgap (x2): 0.16 V to 2.40 V in steps of 0.14 V approximately.
3047:Generated_Source\PSoC4/CyLib.c ****     * Source is Vdda: 0.21 V to 3.30 in steps of 0.21 V approximately. The Vdda
3048:Generated_Source\PSoC4/CyLib.c ****     * is equal to 3.3 V. Voltage value will change according to value of Vdda.
3049:Generated_Source\PSoC4/CyLib.c ****     *
3050:Generated_Source\PSoC4/CyLib.c ****     *   voltageTap  | If bandgap (x1), V| If bandgap (x2), V| If Vdda
3051:Generated_Source\PSoC4/CyLib.c ****     *   ------------|-------------------|-------------------|-------------------
3052:Generated_Source\PSoC4/CyLib.c ****     *       0       |       0.08        |       0.16        |       0.21
3053:Generated_Source\PSoC4/CyLib.c ****     *       1       |       0.15        |       0.30        |       0.41
3054:Generated_Source\PSoC4/CyLib.c ****     *       2       |       0.23        |       0.46        |       0.62
3055:Generated_Source\PSoC4/CyLib.c ****     *       3       |       0.30        |       0.60        |       0.83
3056:Generated_Source\PSoC4/CyLib.c ****     *       4       |       0.38        |       0.76        |       1.03
3057:Generated_Source\PSoC4/CyLib.c ****     *       5       |       0.45        |       0.90        |       1.24
3058:Generated_Source\PSoC4/CyLib.c ****     *       6       |       0.53        |       1.06        |       1.44
3059:Generated_Source\PSoC4/CyLib.c ****     *       7       |       0.60        |       1.20        |       1.65
3060:Generated_Source\PSoC4/CyLib.c ****     *       8       |       0.68        |       1.36        |       1.86
3061:Generated_Source\PSoC4/CyLib.c ****     *       9       |       0.75        |       1.50        |       2.06
3062:Generated_Source\PSoC4/CyLib.c ****     *       10      |       0.83        |       1.66        |       2.27
3063:Generated_Source\PSoC4/CyLib.c ****     *       11      |       0.90        |       1.80        |       2.48
3064:Generated_Source\PSoC4/CyLib.c ****     *       12      |       0.98        |       1.96        |       2.68
3065:Generated_Source\PSoC4/CyLib.c ****     *       13      |       1.05        |       2.10        |       2.89
3066:Generated_Source\PSoC4/CyLib.c ****     *       14      |       1.13        |       2.26        |       3.09
3067:Generated_Source\PSoC4/CyLib.c ****     *       15      |       1.20        |       2.40        |       3.30
3068:Generated_Source\PSoC4/CyLib.c ****     *
3069:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3070:Generated_Source\PSoC4/CyLib.c ****     #ifdef CyDesignWideVoltageReference_PRB_REF
3071:Generated_Source\PSoC4/CyLib.c ****         void CySysPrbSetGlobalVrefVoltage(uint32 voltageTap)
3072:Generated_Source\PSoC4/CyLib.c ****         {
 2925              		.loc 1 3072 0
 2926              		.cfi_startproc
 2927 0000 80B5     		push	{r7, lr}
 2928              		.cfi_def_cfa_offset 8
 2929              		.cfi_offset 7, -8
 2930              		.cfi_offset 14, -4
 2931 0002 82B0     		sub	sp, sp, #8
 2932              		.cfi_def_cfa_offset 16
 2933 0004 00AF     		add	r7, sp, #0
 2934              		.cfi_def_cfa_register 7
 2935 0006 7860     		str	r0, [r7, #4]
3073:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_REF, CYFLD_PASS_VREF_SEL, voltageTap);
 2936              		.loc 1 3073 0
 2937 0008 074B     		ldr	r3, .L195
 2938 000a 074A     		ldr	r2, .L195
 2939 000c 1268     		ldr	r2, [r2]
 2940 000e F021     		mov	r1, #240
 2941 0010 8A43     		bic	r2, r1
 2942 0012 111C     		mov	r1, r2
 2943 0014 7A68     		ldr	r2, [r7, #4]
 2944 0016 1201     		lsl	r2, r2, #4
 2945 0018 FF20     		mov	r0, #255
 2946 001a 0240     		and	r2, r0
 2947 001c 0A43     		orr	r2, r1
 2948 001e 1A60     		str	r2, [r3]
3074:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 107


 2949              		.loc 1 3074 0
 2950 0020 BD46     		mov	sp, r7
 2951 0022 02B0     		add	sp, sp, #8
 2952              		@ sp needed
 2953 0024 80BD     		pop	{r7, pc}
 2954              	.L196:
 2955 0026 C046     		.align	2
 2956              	.L195:
 2957 0028 04023F40 		.word	1077871108
 2958              		.cfi_endproc
 2959              	.LFE52:
 2960              		.size	CySysPrbSetGlobalVrefVoltage, .-CySysPrbSetGlobalVrefVoltage
 2961              		.section	.text.CySysPrbEnableDeepsleepVddaRef,"ax",%progbits
 2962              		.align	2
 2963              		.global	CySysPrbEnableDeepsleepVddaRef
 2964              		.code	16
 2965              		.thumb_func
 2966              		.type	CySysPrbEnableDeepsleepVddaRef, %function
 2967              	CySysPrbEnableDeepsleepVddaRef:
 2968              	.LFB53:
3075:Generated_Source\PSoC4/CyLib.c ****     #endif
3076:Generated_Source\PSoC4/CyLib.c **** 
3077:Generated_Source\PSoC4/CyLib.c **** 
3078:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3079:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbEnableDeepsleepVddaRef
3080:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3081:Generated_Source\PSoC4/CyLib.c ****     *
3082:Generated_Source\PSoC4/CyLib.c ****     * Enables the Vdda reference in deep sleep mode. The Vdda reference is by
3083:Generated_Source\PSoC4/CyLib.c ****     * default disabled when entering deep sleep mode.
3084:Generated_Source\PSoC4/CyLib.c ****     *
3085:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3086:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3087:Generated_Source\PSoC4/CyLib.c ****     *
3088:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3089:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbEnableDeepsleepVddaRef(void)
3090:Generated_Source\PSoC4/CyLib.c ****     {
 2969              		.loc 1 3090 0
 2970              		.cfi_startproc
 2971 0000 80B5     		push	{r7, lr}
 2972              		.cfi_def_cfa_offset 8
 2973              		.cfi_offset 7, -8
 2974              		.cfi_offset 14, -4
 2975 0002 00AF     		add	r7, sp, #0
 2976              		.cfi_def_cfa_register 7
3091:Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_DEEPSLEEP_ON, 1u);
 2977              		.loc 1 3091 0
 2978 0004 044B     		ldr	r3, .L198
 2979 0006 044A     		ldr	r2, .L198
 2980 0008 1268     		ldr	r2, [r2]
 2981 000a 8021     		mov	r1, #128
 2982 000c C905     		lsl	r1, r1, #23
 2983 000e 0A43     		orr	r2, r1
 2984 0010 1A60     		str	r2, [r3]
3092:Generated_Source\PSoC4/CyLib.c ****     }
 2985              		.loc 1 3092 0
 2986 0012 BD46     		mov	sp, r7
 2987              		@ sp needed
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 108


 2988 0014 80BD     		pop	{r7, pc}
 2989              	.L199:
 2990 0016 C046     		.align	2
 2991              	.L198:
 2992 0018 00023F40 		.word	1077871104
 2993              		.cfi_endproc
 2994              	.LFE53:
 2995              		.size	CySysPrbEnableDeepsleepVddaRef, .-CySysPrbEnableDeepsleepVddaRef
 2996              		.section	.text.CySysPrbDisableDeepsleepVddaRef,"ax",%progbits
 2997              		.align	2
 2998              		.global	CySysPrbDisableDeepsleepVddaRef
 2999              		.code	16
 3000              		.thumb_func
 3001              		.type	CySysPrbDisableDeepsleepVddaRef, %function
 3002              	CySysPrbDisableDeepsleepVddaRef:
 3003              	.LFB54:
3093:Generated_Source\PSoC4/CyLib.c **** 
3094:Generated_Source\PSoC4/CyLib.c **** 
3095:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3096:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbDisableDeepsleepVddaRef
3097:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3098:Generated_Source\PSoC4/CyLib.c ****     *
3099:Generated_Source\PSoC4/CyLib.c ****     * Disables the Vdda reference in deep sleep mode. The Vdda reference is by
3100:Generated_Source\PSoC4/CyLib.c ****     * default disabled when entering deep sleep mode.
3101:Generated_Source\PSoC4/CyLib.c ****     *
3102:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3103:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3104:Generated_Source\PSoC4/CyLib.c ****     *
3105:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3106:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbDisableDeepsleepVddaRef(void)
3107:Generated_Source\PSoC4/CyLib.c ****     {
 3004              		.loc 1 3107 0
 3005              		.cfi_startproc
 3006 0000 80B5     		push	{r7, lr}
 3007              		.cfi_def_cfa_offset 8
 3008              		.cfi_offset 7, -8
 3009              		.cfi_offset 14, -4
 3010 0002 00AF     		add	r7, sp, #0
 3011              		.cfi_def_cfa_register 7
3108:Generated_Source\PSoC4/CyLib.c ****         CY_CLEAR_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_DEEPSLEEP_ON);
 3012              		.loc 1 3108 0
 3013 0004 034B     		ldr	r3, .L201
 3014 0006 034A     		ldr	r2, .L201
 3015 0008 1268     		ldr	r2, [r2]
 3016 000a 0349     		ldr	r1, .L201+4
 3017 000c 0A40     		and	r2, r1
 3018 000e 1A60     		str	r2, [r3]
3109:Generated_Source\PSoC4/CyLib.c ****     }
 3019              		.loc 1 3109 0
 3020 0010 BD46     		mov	sp, r7
 3021              		@ sp needed
 3022 0012 80BD     		pop	{r7, pc}
 3023              	.L202:
 3024              		.align	2
 3025              	.L201:
 3026 0014 00023F40 		.word	1077871104
 3027 0018 FFFFFFBF 		.word	-1073741825
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 109


 3028              		.cfi_endproc
 3029              	.LFE54:
 3030              		.size	CySysPrbDisableDeepsleepVddaRef, .-CySysPrbDisableDeepsleepVddaRef
 3031              		.section	.text.CySysPrbEnableVddaRef,"ax",%progbits
 3032              		.align	2
 3033              		.global	CySysPrbEnableVddaRef
 3034              		.code	16
 3035              		.thumb_func
 3036              		.type	CySysPrbEnableVddaRef, %function
 3037              	CySysPrbEnableVddaRef:
 3038              	.LFB55:
3110:Generated_Source\PSoC4/CyLib.c **** 
3111:Generated_Source\PSoC4/CyLib.c **** 
3112:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3113:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbEnableVddaRef
3114:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3115:Generated_Source\PSoC4/CyLib.c ****     *
3116:Generated_Source\PSoC4/CyLib.c ****     * Enables the Vdda reference. The Vdda reference is by default not enabled.
3117:Generated_Source\PSoC4/CyLib.c ****     *
3118:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3119:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3120:Generated_Source\PSoC4/CyLib.c ****     *
3121:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3122:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbEnableVddaRef(void)
3123:Generated_Source\PSoC4/CyLib.c ****     {
 3039              		.loc 1 3123 0
 3040              		.cfi_startproc
 3041 0000 80B5     		push	{r7, lr}
 3042              		.cfi_def_cfa_offset 8
 3043              		.cfi_offset 7, -8
 3044              		.cfi_offset 14, -4
 3045 0002 00AF     		add	r7, sp, #0
 3046              		.cfi_def_cfa_register 7
3124:Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VDDA_ENABLE, 1u);
 3047              		.loc 1 3124 0
 3048 0004 034B     		ldr	r3, .L204
 3049 0006 034A     		ldr	r2, .L204
 3050 0008 1268     		ldr	r2, [r2]
 3051 000a 1021     		mov	r1, #16
 3052 000c 0A43     		orr	r2, r1
 3053 000e 1A60     		str	r2, [r3]
3125:Generated_Source\PSoC4/CyLib.c ****     }
 3054              		.loc 1 3125 0
 3055 0010 BD46     		mov	sp, r7
 3056              		@ sp needed
 3057 0012 80BD     		pop	{r7, pc}
 3058              	.L205:
 3059              		.align	2
 3060              	.L204:
 3061 0014 00023F40 		.word	1077871104
 3062              		.cfi_endproc
 3063              	.LFE55:
 3064              		.size	CySysPrbEnableVddaRef, .-CySysPrbEnableVddaRef
 3065              		.section	.text.CySysPrbDisableVddaRef,"ax",%progbits
 3066              		.align	2
 3067              		.global	CySysPrbDisableVddaRef
 3068              		.code	16
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 110


 3069              		.thumb_func
 3070              		.type	CySysPrbDisableVddaRef, %function
 3071              	CySysPrbDisableVddaRef:
 3072              	.LFB56:
3126:Generated_Source\PSoC4/CyLib.c **** 
3127:Generated_Source\PSoC4/CyLib.c **** 
3128:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3129:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbDisableVddaRef
3130:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3131:Generated_Source\PSoC4/CyLib.c ****     *
3132:Generated_Source\PSoC4/CyLib.c ****     * Disables the Vdda reference. The Vdda reference is by default not enabled.
3133:Generated_Source\PSoC4/CyLib.c ****     *
3134:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3135:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3136:Generated_Source\PSoC4/CyLib.c ****     *
3137:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3138:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbDisableVddaRef(void)
3139:Generated_Source\PSoC4/CyLib.c ****     {
 3073              		.loc 1 3139 0
 3074              		.cfi_startproc
 3075 0000 80B5     		push	{r7, lr}
 3076              		.cfi_def_cfa_offset 8
 3077              		.cfi_offset 7, -8
 3078              		.cfi_offset 14, -4
 3079 0002 00AF     		add	r7, sp, #0
 3080              		.cfi_def_cfa_register 7
3140:Generated_Source\PSoC4/CyLib.c ****         CY_CLEAR_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VDDA_ENABLE);
 3081              		.loc 1 3140 0
 3082 0004 034B     		ldr	r3, .L207
 3083 0006 034A     		ldr	r2, .L207
 3084 0008 1268     		ldr	r2, [r2]
 3085 000a 1021     		mov	r1, #16
 3086 000c 8A43     		bic	r2, r1
 3087 000e 1A60     		str	r2, [r3]
3141:Generated_Source\PSoC4/CyLib.c ****     }
 3088              		.loc 1 3141 0
 3089 0010 BD46     		mov	sp, r7
 3090              		@ sp needed
 3091 0012 80BD     		pop	{r7, pc}
 3092              	.L208:
 3093              		.align	2
 3094              	.L207:
 3095 0014 00023F40 		.word	1077871104
 3096              		.cfi_endproc
 3097              	.LFE56:
 3098              		.size	CySysPrbDisableVddaRef, .-CySysPrbDisableVddaRef
 3099              		.section	.text.CySysPrbSetBgBufferTrim,"ax",%progbits
 3100              		.align	2
 3101              		.global	CySysPrbSetBgBufferTrim
 3102              		.code	16
 3103              		.thumb_func
 3104              		.type	CySysPrbSetBgBufferTrim, %function
 3105              	CySysPrbSetBgBufferTrim:
 3106              	.LFB57:
3142:Generated_Source\PSoC4/CyLib.c **** 
3143:Generated_Source\PSoC4/CyLib.c **** 
3144:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 111


3145:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetBgBufferTrim
3146:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3147:Generated_Source\PSoC4/CyLib.c ****     *
3148:Generated_Source\PSoC4/CyLib.c ****     * Sets the trim for the bandgap reference buffer.
3149:Generated_Source\PSoC4/CyLib.c ****     *
3150:Generated_Source\PSoC4/CyLib.c ****     * \note Affects all bandgap sourced references.
3151:Generated_Source\PSoC4/CyLib.c ****     *
3152:Generated_Source\PSoC4/CyLib.c ****     * \param bgTrim The trim value from -32 to 31. Step size is approximately 1 mV.
3153:Generated_Source\PSoC4/CyLib.c ****     *
3154:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3155:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3156:Generated_Source\PSoC4/CyLib.c ****     *
3157:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3158:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbSetBgBufferTrim(int32 bgTrim)
3159:Generated_Source\PSoC4/CyLib.c ****     {
 3107              		.loc 1 3159 0
 3108              		.cfi_startproc
 3109 0000 80B5     		push	{r7, lr}
 3110              		.cfi_def_cfa_offset 8
 3111              		.cfi_offset 7, -8
 3112              		.cfi_offset 14, -4
 3113 0002 84B0     		sub	sp, sp, #16
 3114              		.cfi_def_cfa_offset 24
 3115 0004 00AF     		add	r7, sp, #0
 3116              		.cfi_def_cfa_register 7
 3117 0006 7860     		str	r0, [r7, #4]
3160:Generated_Source\PSoC4/CyLib.c ****         uint8 tmp = 0u;
 3118              		.loc 1 3160 0
 3119 0008 0F23     		mov	r3, #15
 3120 000a FB18     		add	r3, r7, r3
 3121 000c 0022     		mov	r2, #0
 3122 000e 1A70     		strb	r2, [r3]
3161:Generated_Source\PSoC4/CyLib.c **** 
3162:Generated_Source\PSoC4/CyLib.c ****         if (bgTrim >= 0)
 3123              		.loc 1 3162 0
 3124 0010 7B68     		ldr	r3, [r7, #4]
 3125 0012 002B     		cmp	r3, #0
 3126 0014 0BDB     		blt	.L210
3163:Generated_Source\PSoC4/CyLib.c ****         {
3164:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_TRIM, CYFLD_PASS_VBGR_BUF_TRIM, (uint32) bgTrim);
 3127              		.loc 1 3164 0
 3128 0016 184B     		ldr	r3, .L212
 3129 0018 174A     		ldr	r2, .L212
 3130 001a 1268     		ldr	r2, [r2]
 3131 001c 3F21     		mov	r1, #63
 3132 001e 8A43     		bic	r2, r1
 3133 0020 111C     		mov	r1, r2
 3134 0022 7A68     		ldr	r2, [r7, #4]
 3135 0024 3F20     		mov	r0, #63
 3136 0026 0240     		and	r2, r0
 3137 0028 0A43     		orr	r2, r1
 3138 002a 1A60     		str	r2, [r3]
 3139 002c 21E0     		b	.L209
 3140              	.L210:
3165:Generated_Source\PSoC4/CyLib.c ****         }
3166:Generated_Source\PSoC4/CyLib.c ****         else
3167:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 112


3168:Generated_Source\PSoC4/CyLib.c ****             tmp = (uint8)((int32) bgTrim * (int8) (-1));   /* Make positive */
 3141              		.loc 1 3168 0
 3142 002e 7B68     		ldr	r3, [r7, #4]
 3143 0030 DAB2     		uxtb	r2, r3
 3144 0032 0F23     		mov	r3, #15
 3145 0034 FB18     		add	r3, r7, r3
 3146 0036 5242     		neg	r2, r2
 3147 0038 1A70     		strb	r2, [r3]
3169:Generated_Source\PSoC4/CyLib.c ****             tmp = (uint8) ~tmp + 1u;                      /* Two's complement */
 3148              		.loc 1 3169 0
 3149 003a 0F23     		mov	r3, #15
 3150 003c FB18     		add	r3, r7, r3
 3151 003e 0F22     		mov	r2, #15
 3152 0040 BA18     		add	r2, r7, r2
 3153 0042 1278     		ldrb	r2, [r2]
 3154 0044 5242     		neg	r2, r2
 3155 0046 1A70     		strb	r2, [r3]
3170:Generated_Source\PSoC4/CyLib.c ****             tmp |= (uint8) CY_SYS_VREF_BG_BUFFER_TRIM_SIGN_BIT;
 3156              		.loc 1 3170 0
 3157 0048 0F23     		mov	r3, #15
 3158 004a FB18     		add	r3, r7, r3
 3159 004c 0F22     		mov	r2, #15
 3160 004e BA18     		add	r2, r7, r2
 3161 0050 1278     		ldrb	r2, [r2]
 3162 0052 2021     		mov	r1, #32
 3163 0054 0A43     		orr	r2, r1
 3164 0056 1A70     		strb	r2, [r3]
3171:Generated_Source\PSoC4/CyLib.c **** 
3172:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_TRIM, CYFLD_PASS_VBGR_BUF_TRIM, tmp);
 3165              		.loc 1 3172 0
 3166 0058 074B     		ldr	r3, .L212
 3167 005a 074A     		ldr	r2, .L212
 3168 005c 1268     		ldr	r2, [r2]
 3169 005e 3F21     		mov	r1, #63
 3170 0060 8A43     		bic	r2, r1
 3171 0062 111C     		mov	r1, r2
 3172 0064 0F22     		mov	r2, #15
 3173 0066 BA18     		add	r2, r7, r2
 3174 0068 1278     		ldrb	r2, [r2]
 3175 006a 3F20     		mov	r0, #63
 3176 006c 0240     		and	r2, r0
 3177 006e 0A43     		orr	r2, r1
 3178 0070 1A60     		str	r2, [r3]
 3179              	.L209:
3173:Generated_Source\PSoC4/CyLib.c ****         }
3174:Generated_Source\PSoC4/CyLib.c ****     }
 3180              		.loc 1 3174 0
 3181 0072 BD46     		mov	sp, r7
 3182 0074 04B0     		add	sp, sp, #16
 3183              		@ sp needed
 3184 0076 80BD     		pop	{r7, pc}
 3185              	.L213:
 3186              		.align	2
 3187              	.L212:
 3188 0078 040F3F40 		.word	1077874436
 3189              		.cfi_endproc
 3190              	.LFE57:
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 113


 3191              		.size	CySysPrbSetBgBufferTrim, .-CySysPrbSetBgBufferTrim
 3192              		.section	.text.CySysPrbGetBgBufferTrim,"ax",%progbits
 3193              		.align	2
 3194              		.global	CySysPrbGetBgBufferTrim
 3195              		.code	16
 3196              		.thumb_func
 3197              		.type	CySysPrbGetBgBufferTrim, %function
 3198              	CySysPrbGetBgBufferTrim:
 3199              	.LFB58:
3175:Generated_Source\PSoC4/CyLib.c **** 
3176:Generated_Source\PSoC4/CyLib.c **** 
3177:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3178:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbGetBgBufferTrim
3179:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3180:Generated_Source\PSoC4/CyLib.c ****     *
3181:Generated_Source\PSoC4/CyLib.c ****     * Returns the current trim of the bandgap reference buffer.
3182:Generated_Source\PSoC4/CyLib.c ****     *
3183:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3184:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3185:Generated_Source\PSoC4/CyLib.c ****     *
3186:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3187:Generated_Source\PSoC4/CyLib.c ****     int32 CySysPrbGetBgBufferTrim(void)
3188:Generated_Source\PSoC4/CyLib.c ****     {
 3200              		.loc 1 3188 0
 3201              		.cfi_startproc
 3202 0000 80B5     		push	{r7, lr}
 3203              		.cfi_def_cfa_offset 8
 3204              		.cfi_offset 7, -8
 3205              		.cfi_offset 14, -4
 3206 0002 82B0     		sub	sp, sp, #8
 3207              		.cfi_def_cfa_offset 16
 3208 0004 00AF     		add	r7, sp, #0
 3209              		.cfi_def_cfa_register 7
3189:Generated_Source\PSoC4/CyLib.c ****         uint8 tmp;
3190:Generated_Source\PSoC4/CyLib.c ****         int32 returnValue;
3191:Generated_Source\PSoC4/CyLib.c **** 
3192:Generated_Source\PSoC4/CyLib.c ****         tmp = (uint8) CY_GET_REG32_FIELD(CYREG_PASS_PRB_TRIM, CYFLD_PASS_VBGR_BUF_TRIM);
 3210              		.loc 1 3192 0
 3211 0006 0F4B     		ldr	r3, .L218
 3212 0008 1B68     		ldr	r3, [r3]
 3213 000a DAB2     		uxtb	r2, r3
 3214 000c FB1C     		add	r3, r7, #3
 3215 000e 3F21     		mov	r1, #63
 3216 0010 0A40     		and	r2, r1
 3217 0012 1A70     		strb	r2, [r3]
3193:Generated_Source\PSoC4/CyLib.c ****         if ((tmp & CY_SYS_VREF_BG_BUFFER_TRIM_SIGN_BIT) != 0u)
 3218              		.loc 1 3193 0
 3219 0014 FB1C     		add	r3, r7, #3
 3220 0016 1B78     		ldrb	r3, [r3]
 3221 0018 2022     		mov	r2, #32
 3222 001a 1340     		and	r3, r2
 3223 001c 09D0     		beq	.L215
3194:Generated_Source\PSoC4/CyLib.c ****         {
3195:Generated_Source\PSoC4/CyLib.c ****             tmp = ((uint8) ~tmp) + 1u;          /* Make positive */
 3224              		.loc 1 3195 0
 3225 001e FB1C     		add	r3, r7, #3
 3226 0020 FA1C     		add	r2, r7, #3
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 114


 3227 0022 1278     		ldrb	r2, [r2]
 3228 0024 5242     		neg	r2, r2
 3229 0026 1A70     		strb	r2, [r3]
3196:Generated_Source\PSoC4/CyLib.c ****             returnValue = (int32) tmp * (-1);   /* Make negative */
 3230              		.loc 1 3196 0
 3231 0028 FB1C     		add	r3, r7, #3
 3232 002a 1B78     		ldrb	r3, [r3]
 3233 002c 5B42     		neg	r3, r3
 3234 002e 7B60     		str	r3, [r7, #4]
 3235 0030 02E0     		b	.L216
 3236              	.L215:
3197:Generated_Source\PSoC4/CyLib.c ****         }
3198:Generated_Source\PSoC4/CyLib.c ****         else
3199:Generated_Source\PSoC4/CyLib.c ****         {
3200:Generated_Source\PSoC4/CyLib.c ****             returnValue = (int32) tmp;
 3237              		.loc 1 3200 0
 3238 0032 FB1C     		add	r3, r7, #3
 3239 0034 1B78     		ldrb	r3, [r3]
 3240 0036 7B60     		str	r3, [r7, #4]
 3241              	.L216:
3201:Generated_Source\PSoC4/CyLib.c ****         }
3202:Generated_Source\PSoC4/CyLib.c **** 
3203:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 3242              		.loc 1 3203 0
 3243 0038 7B68     		ldr	r3, [r7, #4]
3204:Generated_Source\PSoC4/CyLib.c ****     }
 3244              		.loc 1 3204 0
 3245 003a 181C     		mov	r0, r3
 3246 003c BD46     		mov	sp, r7
 3247 003e 02B0     		add	sp, sp, #8
 3248              		@ sp needed
 3249 0040 80BD     		pop	{r7, pc}
 3250              	.L219:
 3251 0042 C046     		.align	2
 3252              	.L218:
 3253 0044 040F3F40 		.word	1077874436
 3254              		.cfi_endproc
 3255              	.LFE58:
 3256              		.size	CySysPrbGetBgBufferTrim, .-CySysPrbGetBgBufferTrim
 3257              		.text
 3258              	.Letext0:
 3259              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 3260              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 3261              		.section	.debug_info,"",%progbits
 3262              	.Ldebug_info0:
 3263 0000 1D0B0000 		.4byte	0xb1d
 3264 0004 0400     		.2byte	0x4
 3265 0006 00000000 		.4byte	.Ldebug_abbrev0
 3266 000a 04       		.byte	0x4
 3267 000b 01       		.uleb128 0x1
 3268 000c 46030000 		.4byte	.LASF120
 3269 0010 01       		.byte	0x1
 3270 0011 CF070000 		.4byte	.LASF121
 3271 0015 DA020000 		.4byte	.LASF122
 3272 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3273 001d 00000000 		.4byte	0
 3274 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 115


 3275 0025 02       		.uleb128 0x2
 3276 0026 01       		.byte	0x1
 3277 0027 06       		.byte	0x6
 3278 0028 F6000000 		.4byte	.LASF0
 3279 002c 02       		.uleb128 0x2
 3280 002d 01       		.byte	0x1
 3281 002e 08       		.byte	0x8
 3282 002f 00060000 		.4byte	.LASF1
 3283 0033 02       		.uleb128 0x2
 3284 0034 02       		.byte	0x2
 3285 0035 05       		.byte	0x5
 3286 0036 0E060000 		.4byte	.LASF2
 3287 003a 02       		.uleb128 0x2
 3288 003b 02       		.byte	0x2
 3289 003c 07       		.byte	0x7
 3290 003d 14040000 		.4byte	.LASF3
 3291 0041 02       		.uleb128 0x2
 3292 0042 04       		.byte	0x4
 3293 0043 05       		.byte	0x5
 3294 0044 64010000 		.4byte	.LASF4
 3295 0048 02       		.uleb128 0x2
 3296 0049 04       		.byte	0x4
 3297 004a 07       		.byte	0x7
 3298 004b 64060000 		.4byte	.LASF5
 3299 004f 02       		.uleb128 0x2
 3300 0050 08       		.byte	0x8
 3301 0051 05       		.byte	0x5
 3302 0052 E8000000 		.4byte	.LASF6
 3303 0056 02       		.uleb128 0x2
 3304 0057 08       		.byte	0x8
 3305 0058 07       		.byte	0x7
 3306 0059 6C000000 		.4byte	.LASF7
 3307 005d 03       		.uleb128 0x3
 3308 005e 04       		.byte	0x4
 3309 005f 05       		.byte	0x5
 3310 0060 696E7400 		.ascii	"int\000"
 3311 0064 02       		.uleb128 0x2
 3312 0065 04       		.byte	0x4
 3313 0066 07       		.byte	0x7
 3314 0067 A8020000 		.4byte	.LASF8
 3315 006b 04       		.uleb128 0x4
 3316 006c AF010000 		.4byte	.LASF9
 3317 0070 02       		.byte	0x2
 3318 0071 9801     		.2byte	0x198
 3319 0073 2C000000 		.4byte	0x2c
 3320 0077 04       		.uleb128 0x4
 3321 0078 0F000000 		.4byte	.LASF10
 3322 007c 02       		.byte	0x2
 3323 007d 9901     		.2byte	0x199
 3324 007f 3A000000 		.4byte	0x3a
 3325 0083 04       		.uleb128 0x4
 3326 0084 DB010000 		.4byte	.LASF11
 3327 0088 02       		.byte	0x2
 3328 0089 9A01     		.2byte	0x19a
 3329 008b 48000000 		.4byte	0x48
 3330 008f 04       		.uleb128 0x4
 3331 0090 5D040000 		.4byte	.LASF12
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 116


 3332 0094 02       		.byte	0x2
 3333 0095 9B01     		.2byte	0x19b
 3334 0097 25000000 		.4byte	0x25
 3335 009b 04       		.uleb128 0x4
 3336 009c 22010000 		.4byte	.LASF13
 3337 00a0 02       		.byte	0x2
 3338 00a1 9D01     		.2byte	0x19d
 3339 00a3 41000000 		.4byte	0x41
 3340 00a7 02       		.uleb128 0x2
 3341 00a8 04       		.byte	0x4
 3342 00a9 04       		.byte	0x4
 3343 00aa 87050000 		.4byte	.LASF14
 3344 00ae 02       		.uleb128 0x2
 3345 00af 08       		.byte	0x8
 3346 00b0 04       		.byte	0x4
 3347 00b1 CE010000 		.4byte	.LASF15
 3348 00b5 02       		.uleb128 0x2
 3349 00b6 01       		.byte	0x1
 3350 00b7 08       		.byte	0x8
 3351 00b8 76060000 		.4byte	.LASF16
 3352 00bc 04       		.uleb128 0x4
 3353 00bd D7050000 		.4byte	.LASF17
 3354 00c1 02       		.byte	0x2
 3355 00c2 4202     		.2byte	0x242
 3356 00c4 C8000000 		.4byte	0xc8
 3357 00c8 05       		.uleb128 0x5
 3358 00c9 6B000000 		.4byte	0x6b
 3359 00cd 04       		.uleb128 0x4
 3360 00ce CB040000 		.4byte	.LASF18
 3361 00d2 02       		.byte	0x2
 3362 00d3 4402     		.2byte	0x244
 3363 00d5 D9000000 		.4byte	0xd9
 3364 00d9 05       		.uleb128 0x5
 3365 00da 83000000 		.4byte	0x83
 3366 00de 04       		.uleb128 0x4
 3367 00df 93060000 		.4byte	.LASF19
 3368 00e3 02       		.byte	0x2
 3369 00e4 5402     		.2byte	0x254
 3370 00e6 EA000000 		.4byte	0xea
 3371 00ea 06       		.uleb128 0x6
 3372 00eb 04       		.byte	0x4
 3373 00ec F0000000 		.4byte	0xf0
 3374 00f0 07       		.uleb128 0x7
 3375 00f1 02       		.uleb128 0x2
 3376 00f2 04       		.byte	0x4
 3377 00f3 07       		.byte	0x7
 3378 00f4 F4040000 		.4byte	.LASF20
 3379 00f8 08       		.uleb128 0x8
 3380 00f9 8D050000 		.4byte	.LASF21
 3381 00fd 03       		.byte	0x3
 3382 00fe F3       		.byte	0xf3
 3383 00ff EA000000 		.4byte	0xea
 3384 0103 09       		.uleb128 0x9
 3385 0104 8D070000 		.4byte	.LASF22
 3386 0108 01       		.byte	0x1
 3387 0109 68       		.byte	0x68
 3388 010a 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 117


 3389 010e 1C000000 		.4byte	.LFE1-.LFB1
 3390 0112 01       		.uleb128 0x1
 3391 0113 9C       		.byte	0x9c
 3392 0114 0A       		.uleb128 0xa
 3393 0115 D8030000 		.4byte	.LASF23
 3394 0119 01       		.byte	0x1
 3395 011a 88       		.byte	0x88
 3396 011b 00000000 		.4byte	.LFB2
 3397 011f 1C000000 		.4byte	.LFE2-.LFB2
 3398 0123 01       		.uleb128 0x1
 3399 0124 9C       		.byte	0x9c
 3400 0125 0B       		.uleb128 0xb
 3401 0126 15020000 		.4byte	.LASF30
 3402 012a 01       		.byte	0x1
 3403 012b AC       		.byte	0xac
 3404 012c 00000000 		.4byte	.LFB3
 3405 0130 10010000 		.4byte	.LFE3-.LFB3
 3406 0134 01       		.uleb128 0x1
 3407 0135 9C       		.byte	0x9c
 3408 0136 81010000 		.4byte	0x181
 3409 013a 0C       		.uleb128 0xc
 3410 013b 02010000 		.4byte	.LASF24
 3411 013f 01       		.byte	0x1
 3412 0140 B2       		.byte	0xb2
 3413 0141 83000000 		.4byte	0x83
 3414 0145 02       		.uleb128 0x2
 3415 0146 91       		.byte	0x91
 3416 0147 60       		.sleb128 -32
 3417 0148 0C       		.uleb128 0xc
 3418 0149 13010000 		.4byte	.LASF25
 3419 014d 01       		.byte	0x1
 3420 014e B3       		.byte	0xb3
 3421 014f 6B000000 		.4byte	0x6b
 3422 0153 02       		.uleb128 0x2
 3423 0154 91       		.byte	0x91
 3424 0155 67       		.sleb128 -25
 3425 0156 0C       		.uleb128 0xc
 3426 0157 27040000 		.4byte	.LASF26
 3427 015b 01       		.byte	0x1
 3428 015c B4       		.byte	0xb4
 3429 015d 83000000 		.4byte	0x83
 3430 0161 02       		.uleb128 0x2
 3431 0162 91       		.byte	0x91
 3432 0163 6C       		.sleb128 -20
 3433 0164 0C       		.uleb128 0xc
 3434 0165 F8030000 		.4byte	.LASF27
 3435 0169 01       		.byte	0x1
 3436 016a B5       		.byte	0xb5
 3437 016b 83000000 		.4byte	0x83
 3438 016f 02       		.uleb128 0x2
 3439 0170 91       		.byte	0x91
 3440 0171 68       		.sleb128 -24
 3441 0172 0C       		.uleb128 0xc
 3442 0173 1C070000 		.4byte	.LASF28
 3443 0177 01       		.byte	0x1
 3444 0178 B6       		.byte	0xb6
 3445 0179 D9000000 		.4byte	0xd9
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 118


 3446 017d 02       		.uleb128 0x2
 3447 017e 91       		.byte	0x91
 3448 017f 5C       		.sleb128 -36
 3449 0180 00       		.byte	0
 3450 0181 0D       		.uleb128 0xd
 3451 0182 B1040000 		.4byte	.LASF29
 3452 0186 01       		.byte	0x1
 3453 0187 1A01     		.2byte	0x11a
 3454 0189 00000000 		.4byte	.LFB4
 3455 018d 1C000000 		.4byte	.LFE4-.LFB4
 3456 0191 01       		.uleb128 0x1
 3457 0192 9C       		.byte	0x9c
 3458 0193 0E       		.uleb128 0xe
 3459 0194 46010000 		.4byte	.LASF81
 3460 0198 01       		.byte	0x1
 3461 0199 2D01     		.2byte	0x12d
 3462 019b 83000000 		.4byte	0x83
 3463 019f 00000000 		.4byte	.LFB5
 3464 01a3 20000000 		.4byte	.LFE5-.LFB5
 3465 01a7 01       		.uleb128 0x1
 3466 01a8 9C       		.byte	0x9c
 3467 01a9 0F       		.uleb128 0xf
 3468 01aa 1F000000 		.4byte	.LASF31
 3469 01ae 01       		.byte	0x1
 3470 01af AA01     		.2byte	0x1aa
 3471 01b1 00000000 		.4byte	.LFB6
 3472 01b5 48000000 		.4byte	.LFE6-.LFB6
 3473 01b9 01       		.uleb128 0x1
 3474 01ba 9C       		.byte	0x9c
 3475 01bb ED010000 		.4byte	0x1ed
 3476 01bf 10       		.uleb128 0x10
 3477 01c0 36060000 		.4byte	.LASF35
 3478 01c4 01       		.byte	0x1
 3479 01c5 AA01     		.2byte	0x1aa
 3480 01c7 83000000 		.4byte	0x83
 3481 01cb 02       		.uleb128 0x2
 3482 01cc 91       		.byte	0x91
 3483 01cd 64       		.sleb128 -28
 3484 01ce 11       		.uleb128 0x11
 3485 01cf 13010000 		.4byte	.LASF25
 3486 01d3 01       		.byte	0x1
 3487 01d4 AC01     		.2byte	0x1ac
 3488 01d6 6B000000 		.4byte	0x6b
 3489 01da 02       		.uleb128 0x2
 3490 01db 91       		.byte	0x91
 3491 01dc 6F       		.sleb128 -17
 3492 01dd 11       		.uleb128 0x11
 3493 01de FB070000 		.4byte	.LASF32
 3494 01e2 01       		.byte	0x1
 3495 01e3 AD01     		.2byte	0x1ad
 3496 01e5 83000000 		.4byte	0x83
 3497 01e9 02       		.uleb128 0x2
 3498 01ea 91       		.byte	0x91
 3499 01eb 68       		.sleb128 -24
 3500 01ec 00       		.byte	0
 3501 01ed 12       		.uleb128 0x12
 3502 01ee FD010000 		.4byte	.LASF41
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 119


 3503 01f2 01       		.byte	0x1
 3504 01f3 CF01     		.2byte	0x1cf
 3505 01f5 83000000 		.4byte	0x83
 3506 01f9 00000000 		.4byte	.LFB7
 3507 01fd 34000000 		.4byte	.LFE7-.LFB7
 3508 0201 01       		.uleb128 0x1
 3509 0202 9C       		.byte	0x9c
 3510 0203 26020000 		.4byte	0x226
 3511 0207 11       		.uleb128 0x11
 3512 0208 13010000 		.4byte	.LASF25
 3513 020c 01       		.byte	0x1
 3514 020d D101     		.2byte	0x1d1
 3515 020f 6B000000 		.4byte	0x6b
 3516 0213 02       		.uleb128 0x2
 3517 0214 91       		.byte	0x91
 3518 0215 6F       		.sleb128 -17
 3519 0216 11       		.uleb128 0x11
 3520 0217 3B050000 		.4byte	.LASF33
 3521 021b 01       		.byte	0x1
 3522 021c D201     		.2byte	0x1d2
 3523 021e 83000000 		.4byte	0x83
 3524 0222 02       		.uleb128 0x2
 3525 0223 91       		.byte	0x91
 3526 0224 68       		.sleb128 -24
 3527 0225 00       		.byte	0
 3528 0226 0F       		.uleb128 0xf
 3529 0227 C6060000 		.4byte	.LASF34
 3530 022b 01       		.byte	0x1
 3531 022c 0602     		.2byte	0x206
 3532 022e 00000000 		.4byte	.LFB8
 3533 0232 40000000 		.4byte	.LFE8-.LFB8
 3534 0236 01       		.uleb128 0x1
 3535 0237 9C       		.byte	0x9c
 3536 0238 5B020000 		.4byte	0x25b
 3537 023c 10       		.uleb128 0x10
 3538 023d 85070000 		.4byte	.LASF36
 3539 0241 01       		.byte	0x1
 3540 0242 0602     		.2byte	0x206
 3541 0244 83000000 		.4byte	0x83
 3542 0248 02       		.uleb128 0x2
 3543 0249 91       		.byte	0x91
 3544 024a 64       		.sleb128 -28
 3545 024b 11       		.uleb128 0x11
 3546 024c 13010000 		.4byte	.LASF25
 3547 0250 01       		.byte	0x1
 3548 0251 0802     		.2byte	0x208
 3549 0253 6B000000 		.4byte	0x6b
 3550 0257 02       		.uleb128 0x2
 3551 0258 91       		.byte	0x91
 3552 0259 6F       		.sleb128 -17
 3553 025a 00       		.byte	0
 3554 025b 0F       		.uleb128 0xf
 3555 025c 6B040000 		.4byte	.LASF37
 3556 0260 01       		.byte	0x1
 3557 0261 0D03     		.2byte	0x30d
 3558 0263 00000000 		.4byte	.LFB9
 3559 0267 28010000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 120


 3560 026b 01       		.uleb128 0x1
 3561 026c 9C       		.byte	0x9c
 3562 026d AE020000 		.4byte	0x2ae
 3563 0271 10       		.uleb128 0x10
 3564 0272 02010000 		.4byte	.LASF24
 3565 0276 01       		.byte	0x1
 3566 0277 0D03     		.2byte	0x30d
 3567 0279 83000000 		.4byte	0x83
 3568 027d 02       		.uleb128 0x2
 3569 027e 91       		.byte	0x91
 3570 027f 64       		.sleb128 -28
 3571 0280 11       		.uleb128 0x11
 3572 0281 13010000 		.4byte	.LASF25
 3573 0285 01       		.byte	0x1
 3574 0286 0F03     		.2byte	0x30f
 3575 0288 6B000000 		.4byte	0x6b
 3576 028c 02       		.uleb128 0x2
 3577 028d 91       		.byte	0x91
 3578 028e 6B       		.sleb128 -21
 3579 028f 11       		.uleb128 0x11
 3580 0290 05070000 		.4byte	.LASF38
 3581 0294 01       		.byte	0x1
 3582 0295 1003     		.2byte	0x310
 3583 0297 6B000000 		.4byte	0x6b
 3584 029b 02       		.uleb128 0x2
 3585 029c 91       		.byte	0x91
 3586 029d 6A       		.sleb128 -22
 3587 029e 11       		.uleb128 0x11
 3588 029f 5C010000 		.4byte	.LASF39
 3589 02a3 01       		.byte	0x1
 3590 02a4 1303     		.2byte	0x313
 3591 02a6 83000000 		.4byte	0x83
 3592 02aa 02       		.uleb128 0x2
 3593 02ab 91       		.byte	0x91
 3594 02ac 6C       		.sleb128 -20
 3595 02ad 00       		.byte	0
 3596 02ae 0F       		.uleb128 0xf
 3597 02af B0060000 		.4byte	.LASF40
 3598 02b3 01       		.byte	0x1
 3599 02b4 A403     		.2byte	0x3a4
 3600 02b6 00000000 		.4byte	.LFB10
 3601 02ba 44000000 		.4byte	.LFE10-.LFB10
 3602 02be 01       		.uleb128 0x1
 3603 02bf 9C       		.byte	0x9c
 3604 02c0 E3020000 		.4byte	0x2e3
 3605 02c4 10       		.uleb128 0x10
 3606 02c5 85070000 		.4byte	.LASF36
 3607 02c9 01       		.byte	0x1
 3608 02ca A403     		.2byte	0x3a4
 3609 02cc 83000000 		.4byte	0x83
 3610 02d0 02       		.uleb128 0x2
 3611 02d1 91       		.byte	0x91
 3612 02d2 64       		.sleb128 -28
 3613 02d3 11       		.uleb128 0x11
 3614 02d4 13010000 		.4byte	.LASF25
 3615 02d8 01       		.byte	0x1
 3616 02d9 A603     		.2byte	0x3a6
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 121


 3617 02db 6B000000 		.4byte	0x6b
 3618 02df 02       		.uleb128 0x2
 3619 02e0 91       		.byte	0x91
 3620 02e1 6F       		.sleb128 -17
 3621 02e2 00       		.byte	0
 3622 02e3 13       		.uleb128 0x13
 3623 02e4 00040000 		.4byte	.LASF42
 3624 02e8 01       		.byte	0x1
 3625 02e9 0B08     		.2byte	0x80b
 3626 02eb 83000000 		.4byte	0x83
 3627 02ef 00000000 		.4byte	.LFB11
 3628 02f3 30000000 		.4byte	.LFE11-.LFB11
 3629 02f7 01       		.uleb128 0x1
 3630 02f8 9C       		.byte	0x9c
 3631 02f9 1C030000 		.4byte	0x31c
 3632 02fd 10       		.uleb128 0x10
 3633 02fe 40060000 		.4byte	.LASF43
 3634 0302 01       		.byte	0x1
 3635 0303 0B08     		.2byte	0x80b
 3636 0305 83000000 		.4byte	0x83
 3637 0309 02       		.uleb128 0x2
 3638 030a 91       		.byte	0x91
 3639 030b 6C       		.sleb128 -20
 3640 030c 11       		.uleb128 0x11
 3641 030d E0040000 		.4byte	.LASF44
 3642 0311 01       		.byte	0x1
 3643 0312 0D08     		.2byte	0x80d
 3644 0314 83000000 		.4byte	0x83
 3645 0318 02       		.uleb128 0x2
 3646 0319 91       		.byte	0x91
 3647 031a 74       		.sleb128 -12
 3648 031b 00       		.byte	0
 3649 031c 13       		.uleb128 0x13
 3650 031d 5E000000 		.4byte	.LASF45
 3651 0321 01       		.byte	0x1
 3652 0322 2208     		.2byte	0x822
 3653 0324 83000000 		.4byte	0x83
 3654 0328 00000000 		.4byte	.LFB12
 3655 032c 24000000 		.4byte	.LFE12-.LFB12
 3656 0330 01       		.uleb128 0x1
 3657 0331 9C       		.byte	0x9c
 3658 0332 46030000 		.4byte	0x346
 3659 0336 11       		.uleb128 0x11
 3660 0337 16000000 		.4byte	.LASF46
 3661 033b 01       		.byte	0x1
 3662 033c 2408     		.2byte	0x824
 3663 033e 83000000 		.4byte	0x83
 3664 0342 02       		.uleb128 0x2
 3665 0343 91       		.byte	0x91
 3666 0344 74       		.sleb128 -12
 3667 0345 00       		.byte	0
 3668 0346 14       		.uleb128 0x14
 3669 0347 94000000 		.4byte	.LASF47
 3670 034b 01       		.byte	0x1
 3671 034c 3908     		.2byte	0x839
 3672 034e 00000000 		.4byte	.LFB13
 3673 0352 18000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 122


 3674 0356 01       		.uleb128 0x1
 3675 0357 9C       		.byte	0x9c
 3676 0358 6C030000 		.4byte	0x36c
 3677 035c 10       		.uleb128 0x10
 3678 035d F8010000 		.4byte	.LASF48
 3679 0361 01       		.byte	0x1
 3680 0362 3908     		.2byte	0x839
 3681 0364 83000000 		.4byte	0x83
 3682 0368 02       		.uleb128 0x2
 3683 0369 91       		.byte	0x91
 3684 036a 74       		.sleb128 -12
 3685 036b 00       		.byte	0
 3686 036c 12       		.uleb128 0x12
 3687 036d 9F040000 		.4byte	.LASF49
 3688 0371 01       		.byte	0x1
 3689 0372 5208     		.2byte	0x852
 3690 0374 DE000000 		.4byte	0xde
 3691 0378 00000000 		.4byte	.LFB14
 3692 037c 48000000 		.4byte	.LFE14-.LFB14
 3693 0380 01       		.uleb128 0x1
 3694 0381 9C       		.byte	0x9c
 3695 0382 C3030000 		.4byte	0x3c3
 3696 0386 10       		.uleb128 0x10
 3697 0387 F1010000 		.4byte	.LASF50
 3698 038b 01       		.byte	0x1
 3699 038c 5208     		.2byte	0x852
 3700 038e 6B000000 		.4byte	0x6b
 3701 0392 02       		.uleb128 0x2
 3702 0393 91       		.byte	0x91
 3703 0394 6F       		.sleb128 -17
 3704 0395 10       		.uleb128 0x10
 3705 0396 33050000 		.4byte	.LASF51
 3706 039a 01       		.byte	0x1
 3707 039b 5208     		.2byte	0x852
 3708 039d DE000000 		.4byte	0xde
 3709 03a1 02       		.uleb128 0x2
 3710 03a2 91       		.byte	0x91
 3711 03a3 68       		.sleb128 -24
 3712 03a4 11       		.uleb128 0x11
 3713 03a5 50000000 		.4byte	.LASF52
 3714 03a9 01       		.byte	0x1
 3715 03aa 5408     		.2byte	0x854
 3716 03ac DE000000 		.4byte	0xde
 3717 03b0 02       		.uleb128 0x2
 3718 03b1 91       		.byte	0x91
 3719 03b2 70       		.sleb128 -16
 3720 03b3 11       		.uleb128 0x11
 3721 03b4 00000000 		.4byte	.LASF53
 3722 03b8 01       		.byte	0x1
 3723 03b9 5508     		.2byte	0x855
 3724 03bb C3030000 		.4byte	0x3c3
 3725 03bf 02       		.uleb128 0x2
 3726 03c0 91       		.byte	0x91
 3727 03c1 74       		.sleb128 -12
 3728 03c2 00       		.byte	0
 3729 03c3 06       		.uleb128 0x6
 3730 03c4 04       		.byte	0x4
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 123


 3731 03c5 DE000000 		.4byte	0xde
 3732 03c9 12       		.uleb128 0x12
 3733 03ca 24060000 		.4byte	.LASF54
 3734 03ce 01       		.byte	0x1
 3735 03cf 7408     		.2byte	0x874
 3736 03d1 DE000000 		.4byte	0xde
 3737 03d5 00000000 		.4byte	.LFB15
 3738 03d9 34000000 		.4byte	.LFE15-.LFB15
 3739 03dd 01       		.uleb128 0x1
 3740 03de 9C       		.byte	0x9c
 3741 03df 02040000 		.4byte	0x402
 3742 03e3 10       		.uleb128 0x10
 3743 03e4 F1010000 		.4byte	.LASF50
 3744 03e8 01       		.byte	0x1
 3745 03e9 7408     		.2byte	0x874
 3746 03eb 6B000000 		.4byte	0x6b
 3747 03ef 02       		.uleb128 0x2
 3748 03f0 91       		.byte	0x91
 3749 03f1 6F       		.sleb128 -17
 3750 03f2 11       		.uleb128 0x11
 3751 03f3 00000000 		.4byte	.LASF53
 3752 03f7 01       		.byte	0x1
 3753 03f8 7608     		.2byte	0x876
 3754 03fa C3030000 		.4byte	0x3c3
 3755 03fe 02       		.uleb128 0x2
 3756 03ff 91       		.byte	0x91
 3757 0400 74       		.sleb128 -12
 3758 0401 00       		.byte	0
 3759 0402 12       		.uleb128 0x12
 3760 0403 E2010000 		.4byte	.LASF55
 3761 0407 01       		.byte	0x1
 3762 0408 8A08     		.2byte	0x88a
 3763 040a DE000000 		.4byte	0xde
 3764 040e 00000000 		.4byte	.LFB16
 3765 0412 4C000000 		.4byte	.LFE16-.LFB16
 3766 0416 01       		.uleb128 0x1
 3767 0417 9C       		.byte	0x9c
 3768 0418 59040000 		.4byte	0x459
 3769 041c 10       		.uleb128 0x10
 3770 041d F1010000 		.4byte	.LASF50
 3771 0421 01       		.byte	0x1
 3772 0422 8A08     		.2byte	0x88a
 3773 0424 6B000000 		.4byte	0x6b
 3774 0428 02       		.uleb128 0x2
 3775 0429 91       		.byte	0x91
 3776 042a 6F       		.sleb128 -17
 3777 042b 10       		.uleb128 0x10
 3778 042c 33050000 		.4byte	.LASF51
 3779 0430 01       		.byte	0x1
 3780 0431 8A08     		.2byte	0x88a
 3781 0433 DE000000 		.4byte	0xde
 3782 0437 02       		.uleb128 0x2
 3783 0438 91       		.byte	0x91
 3784 0439 68       		.sleb128 -24
 3785 043a 11       		.uleb128 0x11
 3786 043b 50000000 		.4byte	.LASF52
 3787 043f 01       		.byte	0x1
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 124


 3788 0440 8C08     		.2byte	0x88c
 3789 0442 DE000000 		.4byte	0xde
 3790 0446 02       		.uleb128 0x2
 3791 0447 91       		.byte	0x91
 3792 0448 70       		.sleb128 -16
 3793 0449 11       		.uleb128 0x11
 3794 044a 00000000 		.4byte	.LASF53
 3795 044e 01       		.byte	0x1
 3796 044f 8D08     		.2byte	0x88d
 3797 0451 C3030000 		.4byte	0x3c3
 3798 0455 02       		.uleb128 0x2
 3799 0456 91       		.byte	0x91
 3800 0457 74       		.sleb128 -12
 3801 0458 00       		.byte	0
 3802 0459 12       		.uleb128 0x12
 3803 045a 9F050000 		.4byte	.LASF56
 3804 045e 01       		.byte	0x1
 3805 045f A608     		.2byte	0x8a6
 3806 0461 DE000000 		.4byte	0xde
 3807 0465 00000000 		.4byte	.LFB17
 3808 0469 36000000 		.4byte	.LFE17-.LFB17
 3809 046d 01       		.uleb128 0x1
 3810 046e 9C       		.byte	0x9c
 3811 046f 92040000 		.4byte	0x492
 3812 0473 10       		.uleb128 0x10
 3813 0474 F1010000 		.4byte	.LASF50
 3814 0478 01       		.byte	0x1
 3815 0479 A608     		.2byte	0x8a6
 3816 047b 6B000000 		.4byte	0x6b
 3817 047f 02       		.uleb128 0x2
 3818 0480 91       		.byte	0x91
 3819 0481 6F       		.sleb128 -17
 3820 0482 11       		.uleb128 0x11
 3821 0483 00000000 		.4byte	.LASF53
 3822 0487 01       		.byte	0x1
 3823 0488 A808     		.2byte	0x8a8
 3824 048a C3030000 		.4byte	0x3c3
 3825 048e 02       		.uleb128 0x2
 3826 048f 91       		.byte	0x91
 3827 0490 74       		.sleb128 -12
 3828 0491 00       		.byte	0
 3829 0492 0F       		.uleb128 0xf
 3830 0493 71050000 		.4byte	.LASF57
 3831 0497 01       		.byte	0x1
 3832 0498 B908     		.2byte	0x8b9
 3833 049a 00000000 		.4byte	.LFB18
 3834 049e A8000000 		.4byte	.LFE18-.LFB18
 3835 04a2 01       		.uleb128 0x1
 3836 04a3 9C       		.byte	0x9c
 3837 04a4 F4040000 		.4byte	0x4f4
 3838 04a8 10       		.uleb128 0x10
 3839 04a9 F1010000 		.4byte	.LASF50
 3840 04ad 01       		.byte	0x1
 3841 04ae B908     		.2byte	0x8b9
 3842 04b0 6B000000 		.4byte	0x6b
 3843 04b4 02       		.uleb128 0x2
 3844 04b5 91       		.byte	0x91
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 125


 3845 04b6 5F       		.sleb128 -33
 3846 04b7 10       		.uleb128 0x10
 3847 04b8 62040000 		.4byte	.LASF58
 3848 04bc 01       		.byte	0x1
 3849 04bd B908     		.2byte	0x8b9
 3850 04bf 6B000000 		.4byte	0x6b
 3851 04c3 02       		.uleb128 0x2
 3852 04c4 91       		.byte	0x91
 3853 04c5 5E       		.sleb128 -34
 3854 04c6 11       		.uleb128 0x11
 3855 04c7 13010000 		.4byte	.LASF25
 3856 04cb 01       		.byte	0x1
 3857 04cc BB08     		.2byte	0x8bb
 3858 04ce 6B000000 		.4byte	0x6b
 3859 04d2 02       		.uleb128 0x2
 3860 04d3 91       		.byte	0x91
 3861 04d4 6B       		.sleb128 -21
 3862 04d5 11       		.uleb128 0x11
 3863 04d6 D5010000 		.4byte	.LASF59
 3864 04da 01       		.byte	0x1
 3865 04db BC08     		.2byte	0x8bc
 3866 04dd 83000000 		.4byte	0x83
 3867 04e1 02       		.uleb128 0x2
 3868 04e2 91       		.byte	0x91
 3869 04e3 6C       		.sleb128 -20
 3870 04e4 11       		.uleb128 0x11
 3871 04e5 72020000 		.4byte	.LASF60
 3872 04e9 01       		.byte	0x1
 3873 04ea BD08     		.2byte	0x8bd
 3874 04ec 83000000 		.4byte	0x83
 3875 04f0 02       		.uleb128 0x2
 3876 04f1 91       		.byte	0x91
 3877 04f2 64       		.sleb128 -28
 3878 04f3 00       		.byte	0
 3879 04f4 12       		.uleb128 0x12
 3880 04f5 2E020000 		.4byte	.LASF61
 3881 04f9 01       		.byte	0x1
 3882 04fa DB08     		.2byte	0x8db
 3883 04fc 6B000000 		.4byte	0x6b
 3884 0500 00000000 		.4byte	.LFB19
 3885 0504 5C000000 		.4byte	.LFE19-.LFB19
 3886 0508 01       		.uleb128 0x1
 3887 0509 9C       		.byte	0x9c
 3888 050a 2D050000 		.4byte	0x52d
 3889 050e 10       		.uleb128 0x10
 3890 050f F1010000 		.4byte	.LASF50
 3891 0513 01       		.byte	0x1
 3892 0514 DB08     		.2byte	0x8db
 3893 0516 6B000000 		.4byte	0x6b
 3894 051a 02       		.uleb128 0x2
 3895 051b 91       		.byte	0x91
 3896 051c 6F       		.sleb128 -17
 3897 051d 11       		.uleb128 0x11
 3898 051e 62040000 		.4byte	.LASF58
 3899 0522 01       		.byte	0x1
 3900 0523 DD08     		.2byte	0x8dd
 3901 0525 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 126


 3902 0529 02       		.uleb128 0x2
 3903 052a 91       		.byte	0x91
 3904 052b 77       		.sleb128 -9
 3905 052c 00       		.byte	0
 3906 052d 14       		.uleb128 0x14
 3907 052e 18060000 		.4byte	.LASF62
 3908 0532 01       		.byte	0x1
 3909 0533 F008     		.2byte	0x8f0
 3910 0535 00000000 		.4byte	.LFB20
 3911 0539 28000000 		.4byte	.LFE20-.LFB20
 3912 053d 01       		.uleb128 0x1
 3913 053e 9C       		.byte	0x9c
 3914 053f 53050000 		.4byte	0x553
 3915 0543 10       		.uleb128 0x10
 3916 0544 F1010000 		.4byte	.LASF50
 3917 0548 01       		.byte	0x1
 3918 0549 F008     		.2byte	0x8f0
 3919 054b 6B000000 		.4byte	0x6b
 3920 054f 02       		.uleb128 0x2
 3921 0550 91       		.byte	0x91
 3922 0551 77       		.sleb128 -9
 3923 0552 00       		.byte	0
 3924 0553 13       		.uleb128 0x13
 3925 0554 DA000000 		.4byte	.LASF63
 3926 0558 01       		.byte	0x1
 3927 0559 0209     		.2byte	0x902
 3928 055b 6B000000 		.4byte	0x6b
 3929 055f 00000000 		.4byte	.LFB21
 3930 0563 30000000 		.4byte	.LFE21-.LFB21
 3931 0567 01       		.uleb128 0x1
 3932 0568 9C       		.byte	0x9c
 3933 0569 7D050000 		.4byte	0x57d
 3934 056d 10       		.uleb128 0x10
 3935 056e F1010000 		.4byte	.LASF50
 3936 0572 01       		.byte	0x1
 3937 0573 0209     		.2byte	0x902
 3938 0575 6B000000 		.4byte	0x6b
 3939 0579 02       		.uleb128 0x2
 3940 057a 91       		.byte	0x91
 3941 057b 77       		.sleb128 -9
 3942 057c 00       		.byte	0
 3943 057d 14       		.uleb128 0x14
 3944 057e 6D010000 		.4byte	.LASF64
 3945 0582 01       		.byte	0x1
 3946 0583 1209     		.2byte	0x912
 3947 0585 00000000 		.4byte	.LFB22
 3948 0589 28000000 		.4byte	.LFE22-.LFB22
 3949 058d 01       		.uleb128 0x1
 3950 058e 9C       		.byte	0x9c
 3951 058f A3050000 		.4byte	0x5a3
 3952 0593 10       		.uleb128 0x10
 3953 0594 F1010000 		.4byte	.LASF50
 3954 0598 01       		.byte	0x1
 3955 0599 1209     		.2byte	0x912
 3956 059b 6B000000 		.4byte	0x6b
 3957 059f 02       		.uleb128 0x2
 3958 05a0 91       		.byte	0x91
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 127


 3959 05a1 77       		.sleb128 -9
 3960 05a2 00       		.byte	0
 3961 05a3 14       		.uleb128 0x14
 3962 05a4 E8030000 		.4byte	.LASF65
 3963 05a8 01       		.byte	0x1
 3964 05a9 2009     		.2byte	0x920
 3965 05ab 00000000 		.4byte	.LFB23
 3966 05af 28000000 		.4byte	.LFE23-.LFB23
 3967 05b3 01       		.uleb128 0x1
 3968 05b4 9C       		.byte	0x9c
 3969 05b5 C9050000 		.4byte	0x5c9
 3970 05b9 10       		.uleb128 0x10
 3971 05ba F1010000 		.4byte	.LASF50
 3972 05be 01       		.byte	0x1
 3973 05bf 2009     		.2byte	0x920
 3974 05c1 6B000000 		.4byte	0x6b
 3975 05c5 02       		.uleb128 0x2
 3976 05c6 91       		.byte	0x91
 3977 05c7 77       		.sleb128 -9
 3978 05c8 00       		.byte	0
 3979 05c9 14       		.uleb128 0x14
 3980 05ca 21050000 		.4byte	.LASF66
 3981 05ce 01       		.byte	0x1
 3982 05cf 2F09     		.2byte	0x92f
 3983 05d1 00000000 		.4byte	.LFB24
 3984 05d5 28000000 		.4byte	.LFE24-.LFB24
 3985 05d9 01       		.uleb128 0x1
 3986 05da 9C       		.byte	0x9c
 3987 05db EF050000 		.4byte	0x5ef
 3988 05df 10       		.uleb128 0x10
 3989 05e0 F1010000 		.4byte	.LASF50
 3990 05e4 01       		.byte	0x1
 3991 05e5 2F09     		.2byte	0x92f
 3992 05e7 6B000000 		.4byte	0x6b
 3993 05eb 02       		.uleb128 0x2
 3994 05ec 91       		.byte	0x91
 3995 05ed 77       		.sleb128 -9
 3996 05ee 00       		.byte	0
 3997 05ef 14       		.uleb128 0x14
 3998 05f0 DC050000 		.4byte	.LASF67
 3999 05f4 01       		.byte	0x1
 4000 05f5 3E09     		.2byte	0x93e
 4001 05f7 00000000 		.4byte	.LFB25
 4002 05fb 14000000 		.4byte	.LFE25-.LFB25
 4003 05ff 01       		.uleb128 0x1
 4004 0600 9C       		.byte	0x9c
 4005 0601 15060000 		.4byte	0x615
 4006 0605 10       		.uleb128 0x10
 4007 0606 40060000 		.4byte	.LASF43
 4008 060a 01       		.byte	0x1
 4009 060b 3E09     		.2byte	0x93e
 4010 060d 6B000000 		.4byte	0x6b
 4011 0611 02       		.uleb128 0x2
 4012 0612 91       		.byte	0x91
 4013 0613 77       		.sleb128 -9
 4014 0614 00       		.byte	0
 4015 0615 0D       		.uleb128 0xd
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 128


 4016 0616 B1000000 		.4byte	.LASF68
 4017 061a 01       		.byte	0x1
 4018 061b 5609     		.2byte	0x956
 4019 061d 00000000 		.4byte	.LFB26
 4020 0621 20000000 		.4byte	.LFE26-.LFB26
 4021 0625 01       		.uleb128 0x1
 4022 0626 9C       		.byte	0x9c
 4023 0627 0F       		.uleb128 0xf
 4024 0628 28070000 		.4byte	.LASF69
 4025 062c 01       		.byte	0x1
 4026 062d 6A09     		.2byte	0x96a
 4027 062f 00000000 		.4byte	.LFB27
 4028 0633 48000000 		.4byte	.LFE27-.LFB27
 4029 0637 01       		.uleb128 0x1
 4030 0638 9C       		.byte	0x9c
 4031 0639 4D060000 		.4byte	0x64d
 4032 063d 10       		.uleb128 0x10
 4033 063e AE050000 		.4byte	.LASF70
 4034 0642 01       		.byte	0x1
 4035 0643 6A09     		.2byte	0x96a
 4036 0645 83000000 		.4byte	0x83
 4037 0649 02       		.uleb128 0x2
 4038 064a 91       		.byte	0x91
 4039 064b 74       		.sleb128 -12
 4040 064c 00       		.byte	0
 4041 064d 0F       		.uleb128 0xf
 4042 064e C4010000 		.4byte	.LASF71
 4043 0652 01       		.byte	0x1
 4044 0653 8109     		.2byte	0x981
 4045 0655 00000000 		.4byte	.LFB28
 4046 0659 28000000 		.4byte	.LFE28-.LFB28
 4047 065d 01       		.uleb128 0x1
 4048 065e 9C       		.byte	0x9c
 4049 065f 73060000 		.4byte	0x673
 4050 0663 10       		.uleb128 0x10
 4051 0664 EE070000 		.4byte	.LASF72
 4052 0668 01       		.byte	0x1
 4053 0669 8109     		.2byte	0x981
 4054 066b 77000000 		.4byte	0x77
 4055 066f 02       		.uleb128 0x2
 4056 0670 91       		.byte	0x91
 4057 0671 76       		.sleb128 -10
 4058 0672 00       		.byte	0
 4059 0673 0F       		.uleb128 0xf
 4060 0674 07010000 		.4byte	.LASF73
 4061 0678 01       		.byte	0x1
 4062 0679 8F09     		.2byte	0x98f
 4063 067b 00000000 		.4byte	.LFB29
 4064 067f 84000000 		.4byte	.LFE29-.LFB29
 4065 0683 01       		.uleb128 0x1
 4066 0684 9C       		.byte	0x9c
 4067 0685 99060000 		.4byte	0x699
 4068 0689 10       		.uleb128 0x10
 4069 068a 02010000 		.4byte	.LASF24
 4070 068e 01       		.byte	0x1
 4071 068f 8F09     		.2byte	0x98f
 4072 0691 83000000 		.4byte	0x83
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 129


 4073 0695 02       		.uleb128 0x2
 4074 0696 91       		.byte	0x91
 4075 0697 74       		.sleb128 -12
 4076 0698 00       		.byte	0
 4077 0699 15       		.uleb128 0x15
 4078 069a D1040000 		.4byte	.LASF74
 4079 069e 01       		.byte	0x1
 4080 069f AF09     		.2byte	0x9af
 4081 06a1 00000000 		.4byte	.LFB30
 4082 06a5 24000000 		.4byte	.LFE30-.LFB30
 4083 06a9 01       		.uleb128 0x1
 4084 06aa 9C       		.byte	0x9c
 4085 06ab 0F       		.uleb128 0xf
 4086 06ac 64020000 		.4byte	.LASF75
 4087 06b0 01       		.byte	0x1
 4088 06b1 CC09     		.2byte	0x9cc
 4089 06b3 00000000 		.4byte	.LFB31
 4090 06b7 64000000 		.4byte	.LFE31-.LFB31
 4091 06bb 01       		.uleb128 0x1
 4092 06bc 9C       		.byte	0x9c
 4093 06bd CF060000 		.4byte	0x6cf
 4094 06c1 16       		.uleb128 0x16
 4095 06c2 6900     		.ascii	"i\000"
 4096 06c4 01       		.byte	0x1
 4097 06c5 CE09     		.2byte	0x9ce
 4098 06c7 83000000 		.4byte	0x83
 4099 06cb 02       		.uleb128 0x2
 4100 06cc 91       		.byte	0x91
 4101 06cd 74       		.sleb128 -12
 4102 06ce 00       		.byte	0
 4103 06cf 15       		.uleb128 0x15
 4104 06d0 A0060000 		.4byte	.LASF76
 4105 06d4 01       		.byte	0x1
 4106 06d5 EB09     		.2byte	0x9eb
 4107 06d7 00000000 		.4byte	.LFB32
 4108 06db 1C000000 		.4byte	.LFE32-.LFB32
 4109 06df 01       		.uleb128 0x1
 4110 06e0 9C       		.byte	0x9c
 4111 06e1 0D       		.uleb128 0xd
 4112 06e2 77070000 		.4byte	.LASF77
 4113 06e6 01       		.byte	0x1
 4114 06e7 FC09     		.2byte	0x9fc
 4115 06e9 00000000 		.4byte	.LFB33
 4116 06ed 18000000 		.4byte	.LFE33-.LFB33
 4117 06f1 01       		.uleb128 0x1
 4118 06f2 9C       		.byte	0x9c
 4119 06f3 0D       		.uleb128 0xd
 4120 06f4 C1000000 		.4byte	.LASF78
 4121 06f8 01       		.byte	0x1
 4122 06f9 0C0A     		.2byte	0xa0c
 4123 06fb 00000000 		.4byte	.LFB34
 4124 06ff 18000000 		.4byte	.LFE34-.LFB34
 4125 0703 01       		.uleb128 0x1
 4126 0704 9C       		.byte	0x9c
 4127 0705 0D       		.uleb128 0xd
 4128 0706 30070000 		.4byte	.LASF79
 4129 070a 01       		.byte	0x1
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 130


 4130 070b 1C0A     		.2byte	0xa1c
 4131 070d 00000000 		.4byte	.LFB35
 4132 0711 18000000 		.4byte	.LFE35-.LFB35
 4133 0715 01       		.uleb128 0x1
 4134 0716 9C       		.byte	0x9c
 4135 0717 14       		.uleb128 0x14
 4136 0718 02080000 		.4byte	.LASF80
 4137 071c 01       		.byte	0x1
 4138 071d 2D0A     		.2byte	0xa2d
 4139 071f 00000000 		.4byte	.LFB36
 4140 0723 1C000000 		.4byte	.LFE36-.LFB36
 4141 0727 01       		.uleb128 0x1
 4142 0728 9C       		.byte	0x9c
 4143 0729 3D070000 		.4byte	0x73d
 4144 072d 10       		.uleb128 0x10
 4145 072e 72020000 		.4byte	.LASF60
 4146 0732 01       		.byte	0x1
 4147 0733 2D0A     		.2byte	0xa2d
 4148 0735 83000000 		.4byte	0x83
 4149 0739 02       		.uleb128 0x2
 4150 073a 91       		.byte	0x91
 4151 073b 74       		.sleb128 -12
 4152 073c 00       		.byte	0
 4153 073d 0E       		.uleb128 0xe
 4154 073e 28010000 		.4byte	.LASF82
 4155 0742 01       		.byte	0x1
 4156 0743 3D0A     		.2byte	0xa3d
 4157 0745 83000000 		.4byte	0x83
 4158 0749 00000000 		.4byte	.LFB37
 4159 074d 18000000 		.4byte	.LFE37-.LFB37
 4160 0751 01       		.uleb128 0x1
 4161 0752 9C       		.byte	0x9c
 4162 0753 0E       		.uleb128 0xe
 4163 0754 51050000 		.4byte	.LASF83
 4164 0758 01       		.byte	0x1
 4165 0759 4D0A     		.2byte	0xa4d
 4166 075b 83000000 		.4byte	0x83
 4167 075f 00000000 		.4byte	.LFB38
 4168 0763 18000000 		.4byte	.LFE38-.LFB38
 4169 0767 01       		.uleb128 0x1
 4170 0768 9C       		.byte	0x9c
 4171 0769 14       		.uleb128 0x14
 4172 076a 45040000 		.4byte	.LASF84
 4173 076e 01       		.byte	0x1
 4174 076f 6D0A     		.2byte	0xa6d
 4175 0771 00000000 		.4byte	.LFB39
 4176 0775 34000000 		.4byte	.LFE39-.LFB39
 4177 0779 01       		.uleb128 0x1
 4178 077a 9C       		.byte	0x9c
 4179 077b 8F070000 		.4byte	0x78f
 4180 077f 10       		.uleb128 0x10
 4181 0780 78020000 		.4byte	.LASF85
 4182 0784 01       		.byte	0x1
 4183 0785 6D0A     		.2byte	0xa6d
 4184 0787 83000000 		.4byte	0x83
 4185 078b 02       		.uleb128 0x2
 4186 078c 91       		.byte	0x91
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 131


 4187 078d 74       		.sleb128 -12
 4188 078e 00       		.byte	0
 4189 078f 0E       		.uleb128 0xe
 4190 0790 92020000 		.4byte	.LASF86
 4191 0794 01       		.byte	0x1
 4192 0795 8A0A     		.2byte	0xa8a
 4193 0797 83000000 		.4byte	0x83
 4194 079b 00000000 		.4byte	.LFB40
 4195 079f 18000000 		.4byte	.LFE40-.LFB40
 4196 07a3 01       		.uleb128 0x1
 4197 07a4 9C       		.byte	0x9c
 4198 07a5 0D       		.uleb128 0xd
 4199 07a6 CB020000 		.4byte	.LASF87
 4200 07aa 01       		.byte	0x1
 4201 07ab 970A     		.2byte	0xa97
 4202 07ad 00000000 		.4byte	.LFB41
 4203 07b1 14000000 		.4byte	.LFE41-.LFB41
 4204 07b5 01       		.uleb128 0x1
 4205 07b6 9C       		.byte	0x9c
 4206 07b7 13       		.uleb128 0x13
 4207 07b8 DD060000 		.4byte	.LASF88
 4208 07bc 01       		.byte	0x1
 4209 07bd BA0A     		.2byte	0xaba
 4210 07bf F8000000 		.4byte	0xf8
 4211 07c3 00000000 		.4byte	.LFB42
 4212 07c7 2C000000 		.4byte	.LFE42-.LFB42
 4213 07cb 01       		.uleb128 0x1
 4214 07cc 9C       		.byte	0x9c
 4215 07cd FF070000 		.4byte	0x7ff
 4216 07d1 10       		.uleb128 0x10
 4217 07d2 F1010000 		.4byte	.LASF50
 4218 07d6 01       		.byte	0x1
 4219 07d7 BA0A     		.2byte	0xaba
 4220 07d9 83000000 		.4byte	0x83
 4221 07dd 02       		.uleb128 0x2
 4222 07de 91       		.byte	0x91
 4223 07df 6C       		.sleb128 -20
 4224 07e0 10       		.uleb128 0x10
 4225 07e1 48050000 		.4byte	.LASF89
 4226 07e5 01       		.byte	0x1
 4227 07e6 BA0A     		.2byte	0xaba
 4228 07e8 F8000000 		.4byte	0xf8
 4229 07ec 02       		.uleb128 0x2
 4230 07ed 91       		.byte	0x91
 4231 07ee 68       		.sleb128 -24
 4232 07ef 11       		.uleb128 0x11
 4233 07f0 57000000 		.4byte	.LASF90
 4234 07f4 01       		.byte	0x1
 4235 07f5 BC0A     		.2byte	0xabc
 4236 07f7 F8000000 		.4byte	0xf8
 4237 07fb 02       		.uleb128 0x2
 4238 07fc 91       		.byte	0x91
 4239 07fd 74       		.sleb128 -12
 4240 07fe 00       		.byte	0
 4241 07ff 13       		.uleb128 0x13
 4242 0800 9A010000 		.4byte	.LASF91
 4243 0804 01       		.byte	0x1
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 132


 4244 0805 D20A     		.2byte	0xad2
 4245 0807 F8000000 		.4byte	0xf8
 4246 080b 00000000 		.4byte	.LFB43
 4247 080f 1C000000 		.4byte	.LFE43-.LFB43
 4248 0813 01       		.uleb128 0x1
 4249 0814 9C       		.byte	0x9c
 4250 0815 29080000 		.4byte	0x829
 4251 0819 10       		.uleb128 0x10
 4252 081a F1010000 		.4byte	.LASF50
 4253 081e 01       		.byte	0x1
 4254 081f D20A     		.2byte	0xad2
 4255 0821 83000000 		.4byte	0x83
 4256 0825 02       		.uleb128 0x2
 4257 0826 91       		.byte	0x91
 4258 0827 74       		.sleb128 -12
 4259 0828 00       		.byte	0
 4260 0829 17       		.uleb128 0x17
 4261 082a 15080000 		.4byte	.LASF123
 4262 082e 01       		.byte	0x1
 4263 082f DF0A     		.2byte	0xadf
 4264 0831 00000000 		.4byte	.LFB44
 4265 0835 44000000 		.4byte	.LFE44-.LFB44
 4266 0839 01       		.uleb128 0x1
 4267 083a 9C       		.byte	0x9c
 4268 083b 4D080000 		.4byte	0x84d
 4269 083f 16       		.uleb128 0x16
 4270 0840 6900     		.ascii	"i\000"
 4271 0842 01       		.byte	0x1
 4272 0843 E10A     		.2byte	0xae1
 4273 0845 83000000 		.4byte	0x83
 4274 0849 02       		.uleb128 0x2
 4275 084a 91       		.byte	0x91
 4276 084b 74       		.sleb128 -12
 4277 084c 00       		.byte	0
 4278 084d 14       		.uleb128 0x14
 4279 084e 84020000 		.4byte	.LASF92
 4280 0852 01       		.byte	0x1
 4281 0853 FF0A     		.2byte	0xaff
 4282 0855 00000000 		.4byte	.LFB45
 4283 0859 C0000000 		.4byte	.LFE45-.LFB45
 4284 085d 01       		.uleb128 0x1
 4285 085e 9C       		.byte	0x9c
 4286 085f 73080000 		.4byte	0x873
 4287 0863 10       		.uleb128 0x10
 4288 0864 13070000 		.4byte	.LASF93
 4289 0868 01       		.byte	0x1
 4290 0869 FF0A     		.2byte	0xaff
 4291 086b 73080000 		.4byte	0x873
 4292 086f 02       		.uleb128 0x2
 4293 0870 91       		.byte	0x91
 4294 0871 74       		.sleb128 -12
 4295 0872 00       		.byte	0
 4296 0873 06       		.uleb128 0x6
 4297 0874 04       		.byte	0x4
 4298 0875 83000000 		.4byte	0x83
 4299 0879 14       		.uleb128 0x14
 4300 087a E3050000 		.4byte	.LASF94
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 133


 4301 087e 01       		.byte	0x1
 4302 087f 2B0B     		.2byte	0xb2b
 4303 0881 00000000 		.4byte	.LFB46
 4304 0885 38000000 		.4byte	.LFE46-.LFB46
 4305 0889 01       		.uleb128 0x1
 4306 088a 9C       		.byte	0x9c
 4307 088b AE080000 		.4byte	0x8ae
 4308 088f 10       		.uleb128 0x10
 4309 0890 ED040000 		.4byte	.LASF95
 4310 0894 01       		.byte	0x1
 4311 0895 2B0B     		.2byte	0xb2b
 4312 0897 83000000 		.4byte	0x83
 4313 089b 02       		.uleb128 0x2
 4314 089c 91       		.byte	0x91
 4315 089d 6C       		.sleb128 -20
 4316 089e 11       		.uleb128 0x11
 4317 089f 27040000 		.4byte	.LASF26
 4318 08a3 01       		.byte	0x1
 4319 08a4 2D0B     		.2byte	0xb2d
 4320 08a6 83000000 		.4byte	0x83
 4321 08aa 02       		.uleb128 0x2
 4322 08ab 91       		.byte	0x91
 4323 08ac 74       		.sleb128 -12
 4324 08ad 00       		.byte	0
 4325 08ae 14       		.uleb128 0x14
 4326 08af 80040000 		.4byte	.LASF96
 4327 08b3 01       		.byte	0x1
 4328 08b4 460B     		.2byte	0xb46
 4329 08b6 00000000 		.4byte	.LFB47
 4330 08ba 38000000 		.4byte	.LFE47-.LFB47
 4331 08be 01       		.uleb128 0x1
 4332 08bf 9C       		.byte	0x9c
 4333 08c0 E3080000 		.4byte	0x8e3
 4334 08c4 10       		.uleb128 0x10
 4335 08c5 ED040000 		.4byte	.LASF95
 4336 08c9 01       		.byte	0x1
 4337 08ca 460B     		.2byte	0xb46
 4338 08cc 83000000 		.4byte	0x83
 4339 08d0 02       		.uleb128 0x2
 4340 08d1 91       		.byte	0x91
 4341 08d2 6C       		.sleb128 -20
 4342 08d3 11       		.uleb128 0x11
 4343 08d4 27040000 		.4byte	.LASF26
 4344 08d8 01       		.byte	0x1
 4345 08d9 480B     		.2byte	0xb48
 4346 08db 83000000 		.4byte	0x83
 4347 08df 02       		.uleb128 0x2
 4348 08e0 91       		.byte	0x91
 4349 08e1 74       		.sleb128 -12
 4350 08e2 00       		.byte	0
 4351 08e3 14       		.uleb128 0x14
 4352 08e4 59070000 		.4byte	.LASF97
 4353 08e8 01       		.byte	0x1
 4354 08e9 610B     		.2byte	0xb61
 4355 08eb 00000000 		.4byte	.LFB48
 4356 08ef 38000000 		.4byte	.LFE48-.LFB48
 4357 08f3 01       		.uleb128 0x1
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 134


 4358 08f4 9C       		.byte	0x9c
 4359 08f5 18090000 		.4byte	0x918
 4360 08f9 10       		.uleb128 0x10
 4361 08fa ED040000 		.4byte	.LASF95
 4362 08fe 01       		.byte	0x1
 4363 08ff 610B     		.2byte	0xb61
 4364 0901 83000000 		.4byte	0x83
 4365 0905 02       		.uleb128 0x2
 4366 0906 91       		.byte	0x91
 4367 0907 6C       		.sleb128 -20
 4368 0908 11       		.uleb128 0x11
 4369 0909 27040000 		.4byte	.LASF26
 4370 090d 01       		.byte	0x1
 4371 090e 630B     		.2byte	0xb63
 4372 0910 83000000 		.4byte	0x83
 4373 0914 02       		.uleb128 0x2
 4374 0915 91       		.byte	0x91
 4375 0916 74       		.sleb128 -12
 4376 0917 00       		.byte	0
 4377 0918 0F       		.uleb128 0xf
 4378 0919 FD040000 		.4byte	.LASF98
 4379 091d 01       		.byte	0x1
 4380 091e 7E0B     		.2byte	0xb7e
 4381 0920 00000000 		.4byte	.LFB49
 4382 0924 74000000 		.4byte	.LFE49-.LFB49
 4383 0928 01       		.uleb128 0x1
 4384 0929 9C       		.byte	0x9c
 4385 092a 5C090000 		.4byte	0x95c
 4386 092e 10       		.uleb128 0x10
 4387 092f A1000000 		.4byte	.LASF99
 4388 0933 01       		.byte	0x1
 4389 0934 7E0B     		.2byte	0xb7e
 4390 0936 83000000 		.4byte	0x83
 4391 093a 02       		.uleb128 0x2
 4392 093b 91       		.byte	0x91
 4393 093c 6C       		.sleb128 -20
 4394 093d 10       		.uleb128 0x10
 4395 093e ED040000 		.4byte	.LASF95
 4396 0942 01       		.byte	0x1
 4397 0943 7E0B     		.2byte	0xb7e
 4398 0945 83000000 		.4byte	0x83
 4399 0949 02       		.uleb128 0x2
 4400 094a 91       		.byte	0x91
 4401 094b 68       		.sleb128 -24
 4402 094c 11       		.uleb128 0x11
 4403 094d 27040000 		.4byte	.LASF26
 4404 0951 01       		.byte	0x1
 4405 0952 800B     		.2byte	0xb80
 4406 0954 83000000 		.4byte	0x83
 4407 0958 02       		.uleb128 0x2
 4408 0959 91       		.byte	0x91
 4409 095a 74       		.sleb128 -12
 4410 095b 00       		.byte	0
 4411 095c 14       		.uleb128 0x14
 4412 095d BB050000 		.4byte	.LASF100
 4413 0961 01       		.byte	0x1
 4414 0962 BB0B     		.2byte	0xbbb
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 135


 4415 0964 00000000 		.4byte	.LFB50
 4416 0968 2C000000 		.4byte	.LFE50-.LFB50
 4417 096c 01       		.uleb128 0x1
 4418 096d 9C       		.byte	0x9c
 4419 096e 82090000 		.4byte	0x982
 4420 0972 10       		.uleb128 0x10
 4421 0973 ED040000 		.4byte	.LASF95
 4422 0977 01       		.byte	0x1
 4423 0978 BB0B     		.2byte	0xbbb
 4424 097a 83000000 		.4byte	0x83
 4425 097e 02       		.uleb128 0x2
 4426 097f 91       		.byte	0x91
 4427 0980 74       		.sleb128 -12
 4428 0981 00       		.byte	0
 4429 0982 14       		.uleb128 0x14
 4430 0983 BD070000 		.4byte	.LASF101
 4431 0987 01       		.byte	0x1
 4432 0988 D30B     		.2byte	0xbd3
 4433 098a 00000000 		.4byte	.LFB51
 4434 098e 28000000 		.4byte	.LFE51-.LFB51
 4435 0992 01       		.uleb128 0x1
 4436 0993 9C       		.byte	0x9c
 4437 0994 A8090000 		.4byte	0x9a8
 4438 0998 10       		.uleb128 0x10
 4439 0999 82050000 		.4byte	.LASF102
 4440 099d 01       		.byte	0x1
 4441 099e D30B     		.2byte	0xbd3
 4442 09a0 83000000 		.4byte	0x83
 4443 09a4 02       		.uleb128 0x2
 4444 09a5 91       		.byte	0x91
 4445 09a6 74       		.sleb128 -12
 4446 09a7 00       		.byte	0
 4447 09a8 14       		.uleb128 0x14
 4448 09a9 47060000 		.4byte	.LASF103
 4449 09ad 01       		.byte	0x1
 4450 09ae FF0B     		.2byte	0xbff
 4451 09b0 00000000 		.4byte	.LFB52
 4452 09b4 2C000000 		.4byte	.LFE52-.LFB52
 4453 09b8 01       		.uleb128 0x1
 4454 09b9 9C       		.byte	0x9c
 4455 09ba CE090000 		.4byte	0x9ce
 4456 09be 10       		.uleb128 0x10
 4457 09bf 3B010000 		.4byte	.LASF104
 4458 09c3 01       		.byte	0x1
 4459 09c4 FF0B     		.2byte	0xbff
 4460 09c6 83000000 		.4byte	0x83
 4461 09ca 02       		.uleb128 0x2
 4462 09cb 91       		.byte	0x91
 4463 09cc 74       		.sleb128 -12
 4464 09cd 00       		.byte	0
 4465 09ce 0D       		.uleb128 0xd
 4466 09cf 9E070000 		.4byte	.LASF105
 4467 09d3 01       		.byte	0x1
 4468 09d4 110C     		.2byte	0xc11
 4469 09d6 00000000 		.4byte	.LFB53
 4470 09da 1C000000 		.4byte	.LFE53-.LFB53
 4471 09de 01       		.uleb128 0x1
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 136


 4472 09df 9C       		.byte	0x9c
 4473 09e0 0D       		.uleb128 0xd
 4474 09e1 7A010000 		.4byte	.LASF106
 4475 09e5 01       		.byte	0x1
 4476 09e6 220C     		.2byte	0xc22
 4477 09e8 00000000 		.4byte	.LFB54
 4478 09ec 1C000000 		.4byte	.LFE54-.LFB54
 4479 09f0 01       		.uleb128 0x1
 4480 09f1 9C       		.byte	0x9c
 4481 09f2 0D       		.uleb128 0xd
 4482 09f3 B5020000 		.4byte	.LASF107
 4483 09f7 01       		.byte	0x1
 4484 09f8 320C     		.2byte	0xc32
 4485 09fa 00000000 		.4byte	.LFB55
 4486 09fe 18000000 		.4byte	.LFE55-.LFB55
 4487 0a02 01       		.uleb128 0x1
 4488 0a03 9C       		.byte	0x9c
 4489 0a04 0D       		.uleb128 0xd
 4490 0a05 2E040000 		.4byte	.LASF108
 4491 0a09 01       		.byte	0x1
 4492 0a0a 420C     		.2byte	0xc42
 4493 0a0c 00000000 		.4byte	.LFB56
 4494 0a10 18000000 		.4byte	.LFE56-.LFB56
 4495 0a14 01       		.uleb128 0x1
 4496 0a15 9C       		.byte	0x9c
 4497 0a16 14       		.uleb128 0x14
 4498 0a17 4C020000 		.4byte	.LASF109
 4499 0a1b 01       		.byte	0x1
 4500 0a1c 560C     		.2byte	0xc56
 4501 0a1e 00000000 		.4byte	.LFB57
 4502 0a22 7C000000 		.4byte	.LFE57-.LFB57
 4503 0a26 01       		.uleb128 0x1
 4504 0a27 9C       		.byte	0x9c
 4505 0a28 4B0A0000 		.4byte	0xa4b
 4506 0a2c 10       		.uleb128 0x10
 4507 0a2d 3F030000 		.4byte	.LASF110
 4508 0a31 01       		.byte	0x1
 4509 0a32 560C     		.2byte	0xc56
 4510 0a34 9B000000 		.4byte	0x9b
 4511 0a38 02       		.uleb128 0x2
 4512 0a39 91       		.byte	0x91
 4513 0a3a 6C       		.sleb128 -20
 4514 0a3b 16       		.uleb128 0x16
 4515 0a3c 746D7000 		.ascii	"tmp\000"
 4516 0a40 01       		.byte	0x1
 4517 0a41 580C     		.2byte	0xc58
 4518 0a43 6B000000 		.4byte	0x6b
 4519 0a47 02       		.uleb128 0x2
 4520 0a48 91       		.byte	0x91
 4521 0a49 77       		.sleb128 -9
 4522 0a4a 00       		.byte	0
 4523 0a4b 13       		.uleb128 0x13
 4524 0a4c 38000000 		.4byte	.LASF111
 4525 0a50 01       		.byte	0x1
 4526 0a51 730C     		.2byte	0xc73
 4527 0a53 9B000000 		.4byte	0x9b
 4528 0a57 00000000 		.4byte	.LFB58
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 137


 4529 0a5b 48000000 		.4byte	.LFE58-.LFB58
 4530 0a5f 01       		.uleb128 0x1
 4531 0a60 9C       		.byte	0x9c
 4532 0a61 840A0000 		.4byte	0xa84
 4533 0a65 16       		.uleb128 0x16
 4534 0a66 746D7000 		.ascii	"tmp\000"
 4535 0a6a 01       		.byte	0x1
 4536 0a6b 750C     		.2byte	0xc75
 4537 0a6d 6B000000 		.4byte	0x6b
 4538 0a71 02       		.uleb128 0x2
 4539 0a72 91       		.byte	0x91
 4540 0a73 73       		.sleb128 -13
 4541 0a74 11       		.uleb128 0x11
 4542 0a75 2F080000 		.4byte	.LASF112
 4543 0a79 01       		.byte	0x1
 4544 0a7a 760C     		.2byte	0xc76
 4545 0a7c 9B000000 		.4byte	0x9b
 4546 0a80 02       		.uleb128 0x2
 4547 0a81 91       		.byte	0x91
 4548 0a82 74       		.sleb128 -12
 4549 0a83 00       		.byte	0
 4550 0a84 18       		.uleb128 0x18
 4551 0a85 F8000000 		.4byte	0xf8
 4552 0a89 940A0000 		.4byte	0xa94
 4553 0a8d 19       		.uleb128 0x19
 4554 0a8e F1000000 		.4byte	0xf1
 4555 0a92 04       		.byte	0x4
 4556 0a93 00       		.byte	0
 4557 0a94 0C       		.uleb128 0xc
 4558 0a95 F2060000 		.4byte	.LASF113
 4559 0a99 01       		.byte	0x1
 4560 0a9a 22       		.byte	0x22
 4561 0a9b 840A0000 		.4byte	0xa84
 4562 0a9f 05       		.uleb128 0x5
 4563 0aa0 03       		.byte	0x3
 4564 0aa1 00000000 		.4byte	CySysTickCallbacks
 4565 0aa5 1A       		.uleb128 0x1a
 4566 0aa6 63050000 		.4byte	.LASF114
 4567 0aaa 01       		.byte	0x1
 4568 0aab 1B       		.byte	0x1b
 4569 0aac 83000000 		.4byte	0x83
 4570 0ab0 05       		.uleb128 0x5
 4571 0ab1 03       		.byte	0x3
 4572 0ab2 00000000 		.4byte	cydelayFreqHz
 4573 0ab6 1A       		.uleb128 0x1a
 4574 0ab7 B5010000 		.4byte	.LASF115
 4575 0abb 01       		.byte	0x1
 4576 0abc 1C       		.byte	0x1c
 4577 0abd 83000000 		.4byte	0x83
 4578 0ac1 05       		.uleb128 0x5
 4579 0ac2 03       		.byte	0x3
 4580 0ac3 00000000 		.4byte	cydelayFreqKhz
 4581 0ac7 1A       		.uleb128 0x1a
 4582 0ac8 4A070000 		.4byte	.LASF116
 4583 0acc 01       		.byte	0x1
 4584 0acd 1D       		.byte	0x1d
 4585 0ace 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 138


 4586 0ad2 05       		.uleb128 0x5
 4587 0ad3 03       		.byte	0x3
 4588 0ad4 00000000 		.4byte	cydelayFreqMhz
 4589 0ad8 1A       		.uleb128 0x1a
 4590 0ad9 3F020000 		.4byte	.LASF117
 4591 0add 01       		.byte	0x1
 4592 0ade 1E       		.byte	0x1e
 4593 0adf 83000000 		.4byte	0x83
 4594 0ae3 05       		.uleb128 0x5
 4595 0ae4 03       		.byte	0x3
 4596 0ae5 00000000 		.4byte	cydelay32kMs
 4597 0ae9 1A       		.uleb128 0x1a
 4598 0aea 83000000 		.4byte	.LASF118
 4599 0aee 01       		.byte	0x1
 4600 0aef 35       		.byte	0x35
 4601 0af0 83000000 		.4byte	0x83
 4602 0af4 05       		.uleb128 0x5
 4603 0af5 03       		.byte	0x3
 4604 0af6 00000000 		.4byte	CySysTickInitVar
 4605 0afa 18       		.uleb128 0x18
 4606 0afb 6B000000 		.4byte	0x6b
 4607 0aff 0A0B0000 		.4byte	0xb0a
 4608 0b03 19       		.uleb128 0x19
 4609 0b04 F1000000 		.4byte	0xf1
 4610 0b08 16       		.byte	0x16
 4611 0b09 00       		.byte	0
 4612 0b0a 1A       		.uleb128 0x1a
 4613 0b0b 7B060000 		.4byte	.LASF119
 4614 0b0f 01       		.byte	0x1
 4615 0b10 4B       		.byte	0x4b
 4616 0b11 1B0B0000 		.4byte	0xb1b
 4617 0b15 05       		.uleb128 0x5
 4618 0b16 03       		.byte	0x3
 4619 0b17 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 4620 0b1b 1B       		.uleb128 0x1b
 4621 0b1c FA0A0000 		.4byte	0xafa
 4622 0b20 00       		.byte	0
 4623              		.section	.debug_abbrev,"",%progbits
 4624              	.Ldebug_abbrev0:
 4625 0000 01       		.uleb128 0x1
 4626 0001 11       		.uleb128 0x11
 4627 0002 01       		.byte	0x1
 4628 0003 25       		.uleb128 0x25
 4629 0004 0E       		.uleb128 0xe
 4630 0005 13       		.uleb128 0x13
 4631 0006 0B       		.uleb128 0xb
 4632 0007 03       		.uleb128 0x3
 4633 0008 0E       		.uleb128 0xe
 4634 0009 1B       		.uleb128 0x1b
 4635 000a 0E       		.uleb128 0xe
 4636 000b 55       		.uleb128 0x55
 4637 000c 17       		.uleb128 0x17
 4638 000d 11       		.uleb128 0x11
 4639 000e 01       		.uleb128 0x1
 4640 000f 10       		.uleb128 0x10
 4641 0010 17       		.uleb128 0x17
 4642 0011 00       		.byte	0
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 139


 4643 0012 00       		.byte	0
 4644 0013 02       		.uleb128 0x2
 4645 0014 24       		.uleb128 0x24
 4646 0015 00       		.byte	0
 4647 0016 0B       		.uleb128 0xb
 4648 0017 0B       		.uleb128 0xb
 4649 0018 3E       		.uleb128 0x3e
 4650 0019 0B       		.uleb128 0xb
 4651 001a 03       		.uleb128 0x3
 4652 001b 0E       		.uleb128 0xe
 4653 001c 00       		.byte	0
 4654 001d 00       		.byte	0
 4655 001e 03       		.uleb128 0x3
 4656 001f 24       		.uleb128 0x24
 4657 0020 00       		.byte	0
 4658 0021 0B       		.uleb128 0xb
 4659 0022 0B       		.uleb128 0xb
 4660 0023 3E       		.uleb128 0x3e
 4661 0024 0B       		.uleb128 0xb
 4662 0025 03       		.uleb128 0x3
 4663 0026 08       		.uleb128 0x8
 4664 0027 00       		.byte	0
 4665 0028 00       		.byte	0
 4666 0029 04       		.uleb128 0x4
 4667 002a 16       		.uleb128 0x16
 4668 002b 00       		.byte	0
 4669 002c 03       		.uleb128 0x3
 4670 002d 0E       		.uleb128 0xe
 4671 002e 3A       		.uleb128 0x3a
 4672 002f 0B       		.uleb128 0xb
 4673 0030 3B       		.uleb128 0x3b
 4674 0031 05       		.uleb128 0x5
 4675 0032 49       		.uleb128 0x49
 4676 0033 13       		.uleb128 0x13
 4677 0034 00       		.byte	0
 4678 0035 00       		.byte	0
 4679 0036 05       		.uleb128 0x5
 4680 0037 35       		.uleb128 0x35
 4681 0038 00       		.byte	0
 4682 0039 49       		.uleb128 0x49
 4683 003a 13       		.uleb128 0x13
 4684 003b 00       		.byte	0
 4685 003c 00       		.byte	0
 4686 003d 06       		.uleb128 0x6
 4687 003e 0F       		.uleb128 0xf
 4688 003f 00       		.byte	0
 4689 0040 0B       		.uleb128 0xb
 4690 0041 0B       		.uleb128 0xb
 4691 0042 49       		.uleb128 0x49
 4692 0043 13       		.uleb128 0x13
 4693 0044 00       		.byte	0
 4694 0045 00       		.byte	0
 4695 0046 07       		.uleb128 0x7
 4696 0047 15       		.uleb128 0x15
 4697 0048 00       		.byte	0
 4698 0049 27       		.uleb128 0x27
 4699 004a 19       		.uleb128 0x19
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 140


 4700 004b 00       		.byte	0
 4701 004c 00       		.byte	0
 4702 004d 08       		.uleb128 0x8
 4703 004e 16       		.uleb128 0x16
 4704 004f 00       		.byte	0
 4705 0050 03       		.uleb128 0x3
 4706 0051 0E       		.uleb128 0xe
 4707 0052 3A       		.uleb128 0x3a
 4708 0053 0B       		.uleb128 0xb
 4709 0054 3B       		.uleb128 0x3b
 4710 0055 0B       		.uleb128 0xb
 4711 0056 49       		.uleb128 0x49
 4712 0057 13       		.uleb128 0x13
 4713 0058 00       		.byte	0
 4714 0059 00       		.byte	0
 4715 005a 09       		.uleb128 0x9
 4716 005b 2E       		.uleb128 0x2e
 4717 005c 00       		.byte	0
 4718 005d 3F       		.uleb128 0x3f
 4719 005e 19       		.uleb128 0x19
 4720 005f 03       		.uleb128 0x3
 4721 0060 0E       		.uleb128 0xe
 4722 0061 3A       		.uleb128 0x3a
 4723 0062 0B       		.uleb128 0xb
 4724 0063 3B       		.uleb128 0x3b
 4725 0064 0B       		.uleb128 0xb
 4726 0065 27       		.uleb128 0x27
 4727 0066 19       		.uleb128 0x19
 4728 0067 11       		.uleb128 0x11
 4729 0068 01       		.uleb128 0x1
 4730 0069 12       		.uleb128 0x12
 4731 006a 06       		.uleb128 0x6
 4732 006b 40       		.uleb128 0x40
 4733 006c 18       		.uleb128 0x18
 4734 006d 9742     		.uleb128 0x2117
 4735 006f 19       		.uleb128 0x19
 4736 0070 00       		.byte	0
 4737 0071 00       		.byte	0
 4738 0072 0A       		.uleb128 0xa
 4739 0073 2E       		.uleb128 0x2e
 4740 0074 00       		.byte	0
 4741 0075 3F       		.uleb128 0x3f
 4742 0076 19       		.uleb128 0x19
 4743 0077 03       		.uleb128 0x3
 4744 0078 0E       		.uleb128 0xe
 4745 0079 3A       		.uleb128 0x3a
 4746 007a 0B       		.uleb128 0xb
 4747 007b 3B       		.uleb128 0x3b
 4748 007c 0B       		.uleb128 0xb
 4749 007d 27       		.uleb128 0x27
 4750 007e 19       		.uleb128 0x19
 4751 007f 11       		.uleb128 0x11
 4752 0080 01       		.uleb128 0x1
 4753 0081 12       		.uleb128 0x12
 4754 0082 06       		.uleb128 0x6
 4755 0083 40       		.uleb128 0x40
 4756 0084 18       		.uleb128 0x18
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 141


 4757 0085 9642     		.uleb128 0x2116
 4758 0087 19       		.uleb128 0x19
 4759 0088 00       		.byte	0
 4760 0089 00       		.byte	0
 4761 008a 0B       		.uleb128 0xb
 4762 008b 2E       		.uleb128 0x2e
 4763 008c 01       		.byte	0x1
 4764 008d 3F       		.uleb128 0x3f
 4765 008e 19       		.uleb128 0x19
 4766 008f 03       		.uleb128 0x3
 4767 0090 0E       		.uleb128 0xe
 4768 0091 3A       		.uleb128 0x3a
 4769 0092 0B       		.uleb128 0xb
 4770 0093 3B       		.uleb128 0x3b
 4771 0094 0B       		.uleb128 0xb
 4772 0095 27       		.uleb128 0x27
 4773 0096 19       		.uleb128 0x19
 4774 0097 11       		.uleb128 0x11
 4775 0098 01       		.uleb128 0x1
 4776 0099 12       		.uleb128 0x12
 4777 009a 06       		.uleb128 0x6
 4778 009b 40       		.uleb128 0x40
 4779 009c 18       		.uleb128 0x18
 4780 009d 9642     		.uleb128 0x2116
 4781 009f 19       		.uleb128 0x19
 4782 00a0 01       		.uleb128 0x1
 4783 00a1 13       		.uleb128 0x13
 4784 00a2 00       		.byte	0
 4785 00a3 00       		.byte	0
 4786 00a4 0C       		.uleb128 0xc
 4787 00a5 34       		.uleb128 0x34
 4788 00a6 00       		.byte	0
 4789 00a7 03       		.uleb128 0x3
 4790 00a8 0E       		.uleb128 0xe
 4791 00a9 3A       		.uleb128 0x3a
 4792 00aa 0B       		.uleb128 0xb
 4793 00ab 3B       		.uleb128 0x3b
 4794 00ac 0B       		.uleb128 0xb
 4795 00ad 49       		.uleb128 0x49
 4796 00ae 13       		.uleb128 0x13
 4797 00af 02       		.uleb128 0x2
 4798 00b0 18       		.uleb128 0x18
 4799 00b1 00       		.byte	0
 4800 00b2 00       		.byte	0
 4801 00b3 0D       		.uleb128 0xd
 4802 00b4 2E       		.uleb128 0x2e
 4803 00b5 00       		.byte	0
 4804 00b6 3F       		.uleb128 0x3f
 4805 00b7 19       		.uleb128 0x19
 4806 00b8 03       		.uleb128 0x3
 4807 00b9 0E       		.uleb128 0xe
 4808 00ba 3A       		.uleb128 0x3a
 4809 00bb 0B       		.uleb128 0xb
 4810 00bc 3B       		.uleb128 0x3b
 4811 00bd 05       		.uleb128 0x5
 4812 00be 27       		.uleb128 0x27
 4813 00bf 19       		.uleb128 0x19
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 142


 4814 00c0 11       		.uleb128 0x11
 4815 00c1 01       		.uleb128 0x1
 4816 00c2 12       		.uleb128 0x12
 4817 00c3 06       		.uleb128 0x6
 4818 00c4 40       		.uleb128 0x40
 4819 00c5 18       		.uleb128 0x18
 4820 00c6 9742     		.uleb128 0x2117
 4821 00c8 19       		.uleb128 0x19
 4822 00c9 00       		.byte	0
 4823 00ca 00       		.byte	0
 4824 00cb 0E       		.uleb128 0xe
 4825 00cc 2E       		.uleb128 0x2e
 4826 00cd 00       		.byte	0
 4827 00ce 3F       		.uleb128 0x3f
 4828 00cf 19       		.uleb128 0x19
 4829 00d0 03       		.uleb128 0x3
 4830 00d1 0E       		.uleb128 0xe
 4831 00d2 3A       		.uleb128 0x3a
 4832 00d3 0B       		.uleb128 0xb
 4833 00d4 3B       		.uleb128 0x3b
 4834 00d5 05       		.uleb128 0x5
 4835 00d6 27       		.uleb128 0x27
 4836 00d7 19       		.uleb128 0x19
 4837 00d8 49       		.uleb128 0x49
 4838 00d9 13       		.uleb128 0x13
 4839 00da 11       		.uleb128 0x11
 4840 00db 01       		.uleb128 0x1
 4841 00dc 12       		.uleb128 0x12
 4842 00dd 06       		.uleb128 0x6
 4843 00de 40       		.uleb128 0x40
 4844 00df 18       		.uleb128 0x18
 4845 00e0 9742     		.uleb128 0x2117
 4846 00e2 19       		.uleb128 0x19
 4847 00e3 00       		.byte	0
 4848 00e4 00       		.byte	0
 4849 00e5 0F       		.uleb128 0xf
 4850 00e6 2E       		.uleb128 0x2e
 4851 00e7 01       		.byte	0x1
 4852 00e8 3F       		.uleb128 0x3f
 4853 00e9 19       		.uleb128 0x19
 4854 00ea 03       		.uleb128 0x3
 4855 00eb 0E       		.uleb128 0xe
 4856 00ec 3A       		.uleb128 0x3a
 4857 00ed 0B       		.uleb128 0xb
 4858 00ee 3B       		.uleb128 0x3b
 4859 00ef 05       		.uleb128 0x5
 4860 00f0 27       		.uleb128 0x27
 4861 00f1 19       		.uleb128 0x19
 4862 00f2 11       		.uleb128 0x11
 4863 00f3 01       		.uleb128 0x1
 4864 00f4 12       		.uleb128 0x12
 4865 00f5 06       		.uleb128 0x6
 4866 00f6 40       		.uleb128 0x40
 4867 00f7 18       		.uleb128 0x18
 4868 00f8 9642     		.uleb128 0x2116
 4869 00fa 19       		.uleb128 0x19
 4870 00fb 01       		.uleb128 0x1
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 143


 4871 00fc 13       		.uleb128 0x13
 4872 00fd 00       		.byte	0
 4873 00fe 00       		.byte	0
 4874 00ff 10       		.uleb128 0x10
 4875 0100 05       		.uleb128 0x5
 4876 0101 00       		.byte	0
 4877 0102 03       		.uleb128 0x3
 4878 0103 0E       		.uleb128 0xe
 4879 0104 3A       		.uleb128 0x3a
 4880 0105 0B       		.uleb128 0xb
 4881 0106 3B       		.uleb128 0x3b
 4882 0107 05       		.uleb128 0x5
 4883 0108 49       		.uleb128 0x49
 4884 0109 13       		.uleb128 0x13
 4885 010a 02       		.uleb128 0x2
 4886 010b 18       		.uleb128 0x18
 4887 010c 00       		.byte	0
 4888 010d 00       		.byte	0
 4889 010e 11       		.uleb128 0x11
 4890 010f 34       		.uleb128 0x34
 4891 0110 00       		.byte	0
 4892 0111 03       		.uleb128 0x3
 4893 0112 0E       		.uleb128 0xe
 4894 0113 3A       		.uleb128 0x3a
 4895 0114 0B       		.uleb128 0xb
 4896 0115 3B       		.uleb128 0x3b
 4897 0116 05       		.uleb128 0x5
 4898 0117 49       		.uleb128 0x49
 4899 0118 13       		.uleb128 0x13
 4900 0119 02       		.uleb128 0x2
 4901 011a 18       		.uleb128 0x18
 4902 011b 00       		.byte	0
 4903 011c 00       		.byte	0
 4904 011d 12       		.uleb128 0x12
 4905 011e 2E       		.uleb128 0x2e
 4906 011f 01       		.byte	0x1
 4907 0120 3F       		.uleb128 0x3f
 4908 0121 19       		.uleb128 0x19
 4909 0122 03       		.uleb128 0x3
 4910 0123 0E       		.uleb128 0xe
 4911 0124 3A       		.uleb128 0x3a
 4912 0125 0B       		.uleb128 0xb
 4913 0126 3B       		.uleb128 0x3b
 4914 0127 05       		.uleb128 0x5
 4915 0128 27       		.uleb128 0x27
 4916 0129 19       		.uleb128 0x19
 4917 012a 49       		.uleb128 0x49
 4918 012b 13       		.uleb128 0x13
 4919 012c 11       		.uleb128 0x11
 4920 012d 01       		.uleb128 0x1
 4921 012e 12       		.uleb128 0x12
 4922 012f 06       		.uleb128 0x6
 4923 0130 40       		.uleb128 0x40
 4924 0131 18       		.uleb128 0x18
 4925 0132 9642     		.uleb128 0x2116
 4926 0134 19       		.uleb128 0x19
 4927 0135 01       		.uleb128 0x1
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 144


 4928 0136 13       		.uleb128 0x13
 4929 0137 00       		.byte	0
 4930 0138 00       		.byte	0
 4931 0139 13       		.uleb128 0x13
 4932 013a 2E       		.uleb128 0x2e
 4933 013b 01       		.byte	0x1
 4934 013c 3F       		.uleb128 0x3f
 4935 013d 19       		.uleb128 0x19
 4936 013e 03       		.uleb128 0x3
 4937 013f 0E       		.uleb128 0xe
 4938 0140 3A       		.uleb128 0x3a
 4939 0141 0B       		.uleb128 0xb
 4940 0142 3B       		.uleb128 0x3b
 4941 0143 05       		.uleb128 0x5
 4942 0144 27       		.uleb128 0x27
 4943 0145 19       		.uleb128 0x19
 4944 0146 49       		.uleb128 0x49
 4945 0147 13       		.uleb128 0x13
 4946 0148 11       		.uleb128 0x11
 4947 0149 01       		.uleb128 0x1
 4948 014a 12       		.uleb128 0x12
 4949 014b 06       		.uleb128 0x6
 4950 014c 40       		.uleb128 0x40
 4951 014d 18       		.uleb128 0x18
 4952 014e 9742     		.uleb128 0x2117
 4953 0150 19       		.uleb128 0x19
 4954 0151 01       		.uleb128 0x1
 4955 0152 13       		.uleb128 0x13
 4956 0153 00       		.byte	0
 4957 0154 00       		.byte	0
 4958 0155 14       		.uleb128 0x14
 4959 0156 2E       		.uleb128 0x2e
 4960 0157 01       		.byte	0x1
 4961 0158 3F       		.uleb128 0x3f
 4962 0159 19       		.uleb128 0x19
 4963 015a 03       		.uleb128 0x3
 4964 015b 0E       		.uleb128 0xe
 4965 015c 3A       		.uleb128 0x3a
 4966 015d 0B       		.uleb128 0xb
 4967 015e 3B       		.uleb128 0x3b
 4968 015f 05       		.uleb128 0x5
 4969 0160 27       		.uleb128 0x27
 4970 0161 19       		.uleb128 0x19
 4971 0162 11       		.uleb128 0x11
 4972 0163 01       		.uleb128 0x1
 4973 0164 12       		.uleb128 0x12
 4974 0165 06       		.uleb128 0x6
 4975 0166 40       		.uleb128 0x40
 4976 0167 18       		.uleb128 0x18
 4977 0168 9742     		.uleb128 0x2117
 4978 016a 19       		.uleb128 0x19
 4979 016b 01       		.uleb128 0x1
 4980 016c 13       		.uleb128 0x13
 4981 016d 00       		.byte	0
 4982 016e 00       		.byte	0
 4983 016f 15       		.uleb128 0x15
 4984 0170 2E       		.uleb128 0x2e
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 145


 4985 0171 00       		.byte	0
 4986 0172 3F       		.uleb128 0x3f
 4987 0173 19       		.uleb128 0x19
 4988 0174 03       		.uleb128 0x3
 4989 0175 0E       		.uleb128 0xe
 4990 0176 3A       		.uleb128 0x3a
 4991 0177 0B       		.uleb128 0xb
 4992 0178 3B       		.uleb128 0x3b
 4993 0179 05       		.uleb128 0x5
 4994 017a 27       		.uleb128 0x27
 4995 017b 19       		.uleb128 0x19
 4996 017c 11       		.uleb128 0x11
 4997 017d 01       		.uleb128 0x1
 4998 017e 12       		.uleb128 0x12
 4999 017f 06       		.uleb128 0x6
 5000 0180 40       		.uleb128 0x40
 5001 0181 18       		.uleb128 0x18
 5002 0182 9642     		.uleb128 0x2116
 5003 0184 19       		.uleb128 0x19
 5004 0185 00       		.byte	0
 5005 0186 00       		.byte	0
 5006 0187 16       		.uleb128 0x16
 5007 0188 34       		.uleb128 0x34
 5008 0189 00       		.byte	0
 5009 018a 03       		.uleb128 0x3
 5010 018b 08       		.uleb128 0x8
 5011 018c 3A       		.uleb128 0x3a
 5012 018d 0B       		.uleb128 0xb
 5013 018e 3B       		.uleb128 0x3b
 5014 018f 05       		.uleb128 0x5
 5015 0190 49       		.uleb128 0x49
 5016 0191 13       		.uleb128 0x13
 5017 0192 02       		.uleb128 0x2
 5018 0193 18       		.uleb128 0x18
 5019 0194 00       		.byte	0
 5020 0195 00       		.byte	0
 5021 0196 17       		.uleb128 0x17
 5022 0197 2E       		.uleb128 0x2e
 5023 0198 01       		.byte	0x1
 5024 0199 03       		.uleb128 0x3
 5025 019a 0E       		.uleb128 0xe
 5026 019b 3A       		.uleb128 0x3a
 5027 019c 0B       		.uleb128 0xb
 5028 019d 3B       		.uleb128 0x3b
 5029 019e 05       		.uleb128 0x5
 5030 019f 27       		.uleb128 0x27
 5031 01a0 19       		.uleb128 0x19
 5032 01a1 11       		.uleb128 0x11
 5033 01a2 01       		.uleb128 0x1
 5034 01a3 12       		.uleb128 0x12
 5035 01a4 06       		.uleb128 0x6
 5036 01a5 40       		.uleb128 0x40
 5037 01a6 18       		.uleb128 0x18
 5038 01a7 9642     		.uleb128 0x2116
 5039 01a9 19       		.uleb128 0x19
 5040 01aa 01       		.uleb128 0x1
 5041 01ab 13       		.uleb128 0x13
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 146


 5042 01ac 00       		.byte	0
 5043 01ad 00       		.byte	0
 5044 01ae 18       		.uleb128 0x18
 5045 01af 01       		.uleb128 0x1
 5046 01b0 01       		.byte	0x1
 5047 01b1 49       		.uleb128 0x49
 5048 01b2 13       		.uleb128 0x13
 5049 01b3 01       		.uleb128 0x1
 5050 01b4 13       		.uleb128 0x13
 5051 01b5 00       		.byte	0
 5052 01b6 00       		.byte	0
 5053 01b7 19       		.uleb128 0x19
 5054 01b8 21       		.uleb128 0x21
 5055 01b9 00       		.byte	0
 5056 01ba 49       		.uleb128 0x49
 5057 01bb 13       		.uleb128 0x13
 5058 01bc 2F       		.uleb128 0x2f
 5059 01bd 0B       		.uleb128 0xb
 5060 01be 00       		.byte	0
 5061 01bf 00       		.byte	0
 5062 01c0 1A       		.uleb128 0x1a
 5063 01c1 34       		.uleb128 0x34
 5064 01c2 00       		.byte	0
 5065 01c3 03       		.uleb128 0x3
 5066 01c4 0E       		.uleb128 0xe
 5067 01c5 3A       		.uleb128 0x3a
 5068 01c6 0B       		.uleb128 0xb
 5069 01c7 3B       		.uleb128 0x3b
 5070 01c8 0B       		.uleb128 0xb
 5071 01c9 49       		.uleb128 0x49
 5072 01ca 13       		.uleb128 0x13
 5073 01cb 3F       		.uleb128 0x3f
 5074 01cc 19       		.uleb128 0x19
 5075 01cd 02       		.uleb128 0x2
 5076 01ce 18       		.uleb128 0x18
 5077 01cf 00       		.byte	0
 5078 01d0 00       		.byte	0
 5079 01d1 1B       		.uleb128 0x1b
 5080 01d2 26       		.uleb128 0x26
 5081 01d3 00       		.byte	0
 5082 01d4 49       		.uleb128 0x49
 5083 01d5 13       		.uleb128 0x13
 5084 01d6 00       		.byte	0
 5085 01d7 00       		.byte	0
 5086 01d8 00       		.byte	0
 5087              		.section	.debug_aranges,"",%progbits
 5088 0000 E4010000 		.4byte	0x1e4
 5089 0004 0200     		.2byte	0x2
 5090 0006 00000000 		.4byte	.Ldebug_info0
 5091 000a 04       		.byte	0x4
 5092 000b 00       		.byte	0
 5093 000c 0000     		.2byte	0
 5094 000e 0000     		.2byte	0
 5095 0010 00000000 		.4byte	.LFB1
 5096 0014 1C000000 		.4byte	.LFE1-.LFB1
 5097 0018 00000000 		.4byte	.LFB2
 5098 001c 1C000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 147


 5099 0020 00000000 		.4byte	.LFB3
 5100 0024 10010000 		.4byte	.LFE3-.LFB3
 5101 0028 00000000 		.4byte	.LFB4
 5102 002c 1C000000 		.4byte	.LFE4-.LFB4
 5103 0030 00000000 		.4byte	.LFB5
 5104 0034 20000000 		.4byte	.LFE5-.LFB5
 5105 0038 00000000 		.4byte	.LFB6
 5106 003c 48000000 		.4byte	.LFE6-.LFB6
 5107 0040 00000000 		.4byte	.LFB7
 5108 0044 34000000 		.4byte	.LFE7-.LFB7
 5109 0048 00000000 		.4byte	.LFB8
 5110 004c 40000000 		.4byte	.LFE8-.LFB8
 5111 0050 00000000 		.4byte	.LFB9
 5112 0054 28010000 		.4byte	.LFE9-.LFB9
 5113 0058 00000000 		.4byte	.LFB10
 5114 005c 44000000 		.4byte	.LFE10-.LFB10
 5115 0060 00000000 		.4byte	.LFB11
 5116 0064 30000000 		.4byte	.LFE11-.LFB11
 5117 0068 00000000 		.4byte	.LFB12
 5118 006c 24000000 		.4byte	.LFE12-.LFB12
 5119 0070 00000000 		.4byte	.LFB13
 5120 0074 18000000 		.4byte	.LFE13-.LFB13
 5121 0078 00000000 		.4byte	.LFB14
 5122 007c 48000000 		.4byte	.LFE14-.LFB14
 5123 0080 00000000 		.4byte	.LFB15
 5124 0084 34000000 		.4byte	.LFE15-.LFB15
 5125 0088 00000000 		.4byte	.LFB16
 5126 008c 4C000000 		.4byte	.LFE16-.LFB16
 5127 0090 00000000 		.4byte	.LFB17
 5128 0094 36000000 		.4byte	.LFE17-.LFB17
 5129 0098 00000000 		.4byte	.LFB18
 5130 009c A8000000 		.4byte	.LFE18-.LFB18
 5131 00a0 00000000 		.4byte	.LFB19
 5132 00a4 5C000000 		.4byte	.LFE19-.LFB19
 5133 00a8 00000000 		.4byte	.LFB20
 5134 00ac 28000000 		.4byte	.LFE20-.LFB20
 5135 00b0 00000000 		.4byte	.LFB21
 5136 00b4 30000000 		.4byte	.LFE21-.LFB21
 5137 00b8 00000000 		.4byte	.LFB22
 5138 00bc 28000000 		.4byte	.LFE22-.LFB22
 5139 00c0 00000000 		.4byte	.LFB23
 5140 00c4 28000000 		.4byte	.LFE23-.LFB23
 5141 00c8 00000000 		.4byte	.LFB24
 5142 00cc 28000000 		.4byte	.LFE24-.LFB24
 5143 00d0 00000000 		.4byte	.LFB25
 5144 00d4 14000000 		.4byte	.LFE25-.LFB25
 5145 00d8 00000000 		.4byte	.LFB26
 5146 00dc 20000000 		.4byte	.LFE26-.LFB26
 5147 00e0 00000000 		.4byte	.LFB27
 5148 00e4 48000000 		.4byte	.LFE27-.LFB27
 5149 00e8 00000000 		.4byte	.LFB28
 5150 00ec 28000000 		.4byte	.LFE28-.LFB28
 5151 00f0 00000000 		.4byte	.LFB29
 5152 00f4 84000000 		.4byte	.LFE29-.LFB29
 5153 00f8 00000000 		.4byte	.LFB30
 5154 00fc 24000000 		.4byte	.LFE30-.LFB30
 5155 0100 00000000 		.4byte	.LFB31
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 148


 5156 0104 64000000 		.4byte	.LFE31-.LFB31
 5157 0108 00000000 		.4byte	.LFB32
 5158 010c 1C000000 		.4byte	.LFE32-.LFB32
 5159 0110 00000000 		.4byte	.LFB33
 5160 0114 18000000 		.4byte	.LFE33-.LFB33
 5161 0118 00000000 		.4byte	.LFB34
 5162 011c 18000000 		.4byte	.LFE34-.LFB34
 5163 0120 00000000 		.4byte	.LFB35
 5164 0124 18000000 		.4byte	.LFE35-.LFB35
 5165 0128 00000000 		.4byte	.LFB36
 5166 012c 1C000000 		.4byte	.LFE36-.LFB36
 5167 0130 00000000 		.4byte	.LFB37
 5168 0134 18000000 		.4byte	.LFE37-.LFB37
 5169 0138 00000000 		.4byte	.LFB38
 5170 013c 18000000 		.4byte	.LFE38-.LFB38
 5171 0140 00000000 		.4byte	.LFB39
 5172 0144 34000000 		.4byte	.LFE39-.LFB39
 5173 0148 00000000 		.4byte	.LFB40
 5174 014c 18000000 		.4byte	.LFE40-.LFB40
 5175 0150 00000000 		.4byte	.LFB41
 5176 0154 14000000 		.4byte	.LFE41-.LFB41
 5177 0158 00000000 		.4byte	.LFB42
 5178 015c 2C000000 		.4byte	.LFE42-.LFB42
 5179 0160 00000000 		.4byte	.LFB43
 5180 0164 1C000000 		.4byte	.LFE43-.LFB43
 5181 0168 00000000 		.4byte	.LFB44
 5182 016c 44000000 		.4byte	.LFE44-.LFB44
 5183 0170 00000000 		.4byte	.LFB45
 5184 0174 C0000000 		.4byte	.LFE45-.LFB45
 5185 0178 00000000 		.4byte	.LFB46
 5186 017c 38000000 		.4byte	.LFE46-.LFB46
 5187 0180 00000000 		.4byte	.LFB47
 5188 0184 38000000 		.4byte	.LFE47-.LFB47
 5189 0188 00000000 		.4byte	.LFB48
 5190 018c 38000000 		.4byte	.LFE48-.LFB48
 5191 0190 00000000 		.4byte	.LFB49
 5192 0194 74000000 		.4byte	.LFE49-.LFB49
 5193 0198 00000000 		.4byte	.LFB50
 5194 019c 2C000000 		.4byte	.LFE50-.LFB50
 5195 01a0 00000000 		.4byte	.LFB51
 5196 01a4 28000000 		.4byte	.LFE51-.LFB51
 5197 01a8 00000000 		.4byte	.LFB52
 5198 01ac 2C000000 		.4byte	.LFE52-.LFB52
 5199 01b0 00000000 		.4byte	.LFB53
 5200 01b4 1C000000 		.4byte	.LFE53-.LFB53
 5201 01b8 00000000 		.4byte	.LFB54
 5202 01bc 1C000000 		.4byte	.LFE54-.LFB54
 5203 01c0 00000000 		.4byte	.LFB55
 5204 01c4 18000000 		.4byte	.LFE55-.LFB55
 5205 01c8 00000000 		.4byte	.LFB56
 5206 01cc 18000000 		.4byte	.LFE56-.LFB56
 5207 01d0 00000000 		.4byte	.LFB57
 5208 01d4 7C000000 		.4byte	.LFE57-.LFB57
 5209 01d8 00000000 		.4byte	.LFB58
 5210 01dc 48000000 		.4byte	.LFE58-.LFB58
 5211 01e0 00000000 		.4byte	0
 5212 01e4 00000000 		.4byte	0
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 149


 5213              		.section	.debug_ranges,"",%progbits
 5214              	.Ldebug_ranges0:
 5215 0000 00000000 		.4byte	.LFB1
 5216 0004 1C000000 		.4byte	.LFE1
 5217 0008 00000000 		.4byte	.LFB2
 5218 000c 1C000000 		.4byte	.LFE2
 5219 0010 00000000 		.4byte	.LFB3
 5220 0014 10010000 		.4byte	.LFE3
 5221 0018 00000000 		.4byte	.LFB4
 5222 001c 1C000000 		.4byte	.LFE4
 5223 0020 00000000 		.4byte	.LFB5
 5224 0024 20000000 		.4byte	.LFE5
 5225 0028 00000000 		.4byte	.LFB6
 5226 002c 48000000 		.4byte	.LFE6
 5227 0030 00000000 		.4byte	.LFB7
 5228 0034 34000000 		.4byte	.LFE7
 5229 0038 00000000 		.4byte	.LFB8
 5230 003c 40000000 		.4byte	.LFE8
 5231 0040 00000000 		.4byte	.LFB9
 5232 0044 28010000 		.4byte	.LFE9
 5233 0048 00000000 		.4byte	.LFB10
 5234 004c 44000000 		.4byte	.LFE10
 5235 0050 00000000 		.4byte	.LFB11
 5236 0054 30000000 		.4byte	.LFE11
 5237 0058 00000000 		.4byte	.LFB12
 5238 005c 24000000 		.4byte	.LFE12
 5239 0060 00000000 		.4byte	.LFB13
 5240 0064 18000000 		.4byte	.LFE13
 5241 0068 00000000 		.4byte	.LFB14
 5242 006c 48000000 		.4byte	.LFE14
 5243 0070 00000000 		.4byte	.LFB15
 5244 0074 34000000 		.4byte	.LFE15
 5245 0078 00000000 		.4byte	.LFB16
 5246 007c 4C000000 		.4byte	.LFE16
 5247 0080 00000000 		.4byte	.LFB17
 5248 0084 36000000 		.4byte	.LFE17
 5249 0088 00000000 		.4byte	.LFB18
 5250 008c A8000000 		.4byte	.LFE18
 5251 0090 00000000 		.4byte	.LFB19
 5252 0094 5C000000 		.4byte	.LFE19
 5253 0098 00000000 		.4byte	.LFB20
 5254 009c 28000000 		.4byte	.LFE20
 5255 00a0 00000000 		.4byte	.LFB21
 5256 00a4 30000000 		.4byte	.LFE21
 5257 00a8 00000000 		.4byte	.LFB22
 5258 00ac 28000000 		.4byte	.LFE22
 5259 00b0 00000000 		.4byte	.LFB23
 5260 00b4 28000000 		.4byte	.LFE23
 5261 00b8 00000000 		.4byte	.LFB24
 5262 00bc 28000000 		.4byte	.LFE24
 5263 00c0 00000000 		.4byte	.LFB25
 5264 00c4 14000000 		.4byte	.LFE25
 5265 00c8 00000000 		.4byte	.LFB26
 5266 00cc 20000000 		.4byte	.LFE26
 5267 00d0 00000000 		.4byte	.LFB27
 5268 00d4 48000000 		.4byte	.LFE27
 5269 00d8 00000000 		.4byte	.LFB28
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 150


 5270 00dc 28000000 		.4byte	.LFE28
 5271 00e0 00000000 		.4byte	.LFB29
 5272 00e4 84000000 		.4byte	.LFE29
 5273 00e8 00000000 		.4byte	.LFB30
 5274 00ec 24000000 		.4byte	.LFE30
 5275 00f0 00000000 		.4byte	.LFB31
 5276 00f4 64000000 		.4byte	.LFE31
 5277 00f8 00000000 		.4byte	.LFB32
 5278 00fc 1C000000 		.4byte	.LFE32
 5279 0100 00000000 		.4byte	.LFB33
 5280 0104 18000000 		.4byte	.LFE33
 5281 0108 00000000 		.4byte	.LFB34
 5282 010c 18000000 		.4byte	.LFE34
 5283 0110 00000000 		.4byte	.LFB35
 5284 0114 18000000 		.4byte	.LFE35
 5285 0118 00000000 		.4byte	.LFB36
 5286 011c 1C000000 		.4byte	.LFE36
 5287 0120 00000000 		.4byte	.LFB37
 5288 0124 18000000 		.4byte	.LFE37
 5289 0128 00000000 		.4byte	.LFB38
 5290 012c 18000000 		.4byte	.LFE38
 5291 0130 00000000 		.4byte	.LFB39
 5292 0134 34000000 		.4byte	.LFE39
 5293 0138 00000000 		.4byte	.LFB40
 5294 013c 18000000 		.4byte	.LFE40
 5295 0140 00000000 		.4byte	.LFB41
 5296 0144 14000000 		.4byte	.LFE41
 5297 0148 00000000 		.4byte	.LFB42
 5298 014c 2C000000 		.4byte	.LFE42
 5299 0150 00000000 		.4byte	.LFB43
 5300 0154 1C000000 		.4byte	.LFE43
 5301 0158 00000000 		.4byte	.LFB44
 5302 015c 44000000 		.4byte	.LFE44
 5303 0160 00000000 		.4byte	.LFB45
 5304 0164 C0000000 		.4byte	.LFE45
 5305 0168 00000000 		.4byte	.LFB46
 5306 016c 38000000 		.4byte	.LFE46
 5307 0170 00000000 		.4byte	.LFB47
 5308 0174 38000000 		.4byte	.LFE47
 5309 0178 00000000 		.4byte	.LFB48
 5310 017c 38000000 		.4byte	.LFE48
 5311 0180 00000000 		.4byte	.LFB49
 5312 0184 74000000 		.4byte	.LFE49
 5313 0188 00000000 		.4byte	.LFB50
 5314 018c 2C000000 		.4byte	.LFE50
 5315 0190 00000000 		.4byte	.LFB51
 5316 0194 28000000 		.4byte	.LFE51
 5317 0198 00000000 		.4byte	.LFB52
 5318 019c 2C000000 		.4byte	.LFE52
 5319 01a0 00000000 		.4byte	.LFB53
 5320 01a4 1C000000 		.4byte	.LFE53
 5321 01a8 00000000 		.4byte	.LFB54
 5322 01ac 1C000000 		.4byte	.LFE54
 5323 01b0 00000000 		.4byte	.LFB55
 5324 01b4 18000000 		.4byte	.LFE55
 5325 01b8 00000000 		.4byte	.LFB56
 5326 01bc 18000000 		.4byte	.LFE56
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 151


 5327 01c0 00000000 		.4byte	.LFB57
 5328 01c4 7C000000 		.4byte	.LFE57
 5329 01c8 00000000 		.4byte	.LFB58
 5330 01cc 48000000 		.4byte	.LFE58
 5331 01d0 00000000 		.4byte	0
 5332 01d4 00000000 		.4byte	0
 5333              		.section	.debug_line,"",%progbits
 5334              	.Ldebug_line0:
 5335 0000 9E050000 		.section	.debug_str,"MS",%progbits,1
 5335      02004D00 
 5335      00000201 
 5335      FB0E0D00 
 5335      01010101 
 5336              	.LASF53:
 5337 0000 72616D56 		.ascii	"ramVectorTable\000"
 5337      6563746F 
 5337      72546162 
 5337      6C6500
 5338              	.LASF10:
 5339 000f 75696E74 		.ascii	"uint16\000"
 5339      313600
 5340              	.LASF46:
 5341 0016 696E7453 		.ascii	"intState\000"
 5341      74617465 
 5341      00
 5342              	.LASF31:
 5343 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5343      73436C6B 
 5343      57726974 
 5343      65486663 
 5343      6C6B4469 
 5344              	.LASF111:
 5345 0038 43795379 		.ascii	"CySysPrbGetBgBufferTrim\000"
 5345      73507262 
 5345      47657442 
 5345      67427566 
 5345      66657254 
 5346              	.LASF52:
 5347 0050 6F6C6449 		.ascii	"oldIsr\000"
 5347      737200
 5348              	.LASF90:
 5349 0057 72657456 		.ascii	"retVal\000"
 5349      616C00
 5350              	.LASF45:
 5351 005e 43794469 		.ascii	"CyDisableInts\000"
 5351      7361626C 
 5351      65496E74 
 5351      7300
 5352              	.LASF7:
 5353 006c 6C6F6E67 		.ascii	"long long unsigned int\000"
 5353      206C6F6E 
 5353      6720756E 
 5353      7369676E 
 5353      65642069 
 5354              	.LASF118:
 5355 0083 43795379 		.ascii	"CySysTickInitVar\000"
 5355      73546963 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 152


 5355      6B496E69 
 5355      74566172 
 5355      00
 5356              	.LASF47:
 5357 0094 4379456E 		.ascii	"CyEnableInts\000"
 5357      61626C65 
 5357      496E7473 
 5357      00
 5358              	.LASF99:
 5359 00a1 696E7465 		.ascii	"interfaceNumber\000"
 5359      72666163 
 5359      654E756D 
 5359      62657200 
 5360              	.LASF68:
 5361 00b1 4379536F 		.ascii	"CySoftwareReset\000"
 5361      66747761 
 5361      72655265 
 5361      73657400 
 5362              	.LASF78:
 5363 00c1 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5363      73546963 
 5363      6B456E61 
 5363      626C6549 
 5363      6E746572 
 5364              	.LASF63:
 5365 00da 4379496E 		.ascii	"CyIntGetState\000"
 5365      74476574 
 5365      53746174 
 5365      6500
 5366              	.LASF6:
 5367 00e8 6C6F6E67 		.ascii	"long long int\000"
 5367      206C6F6E 
 5367      6720696E 
 5367      7400
 5368              	.LASF0:
 5369 00f6 7369676E 		.ascii	"signed char\000"
 5369      65642063 
 5369      68617200 
 5370              	.LASF24:
 5371 0102 66726571 		.ascii	"freq\000"
 5371      00
 5372              	.LASF73:
 5373 0107 43794465 		.ascii	"CyDelayFreq\000"
 5373      6C617946 
 5373      72657100 
 5374              	.LASF25:
 5375 0113 696E7465 		.ascii	"interruptState\000"
 5375      72727570 
 5375      74537461 
 5375      746500
 5376              	.LASF13:
 5377 0122 696E7433 		.ascii	"int32\000"
 5377      3200
 5378              	.LASF82:
 5379 0128 43795379 		.ascii	"CySysTickGetReload\000"
 5379      73546963 
 5379      6B476574 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 153


 5379      52656C6F 
 5379      616400
 5380              	.LASF104:
 5381 013b 766F6C74 		.ascii	"voltageTap\000"
 5381      61676554 
 5381      617000
 5382              	.LASF81:
 5383 0146 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 5383      73436C6B 
 5383      496D6F47 
 5383      65745763 
 5383      6F4C6F63 
 5384              	.LASF39:
 5385 015c 77636F4C 		.ascii	"wcoLock\000"
 5385      6F636B00 
 5386              	.LASF4:
 5387 0164 6C6F6E67 		.ascii	"long int\000"
 5387      20696E74 
 5387      00
 5388              	.LASF64:
 5389 016d 4379496E 		.ascii	"CyIntDisable\000"
 5389      74446973 
 5389      61626C65 
 5389      00
 5390              	.LASF106:
 5391 017a 43795379 		.ascii	"CySysPrbDisableDeepsleepVddaRef\000"
 5391      73507262 
 5391      44697361 
 5391      626C6544 
 5391      65657073 
 5392              	.LASF91:
 5393 019a 43795379 		.ascii	"CySysTickGetCallback\000"
 5393      73546963 
 5393      6B476574 
 5393      43616C6C 
 5393      6261636B 
 5394              	.LASF9:
 5395 01af 75696E74 		.ascii	"uint8\000"
 5395      3800
 5396              	.LASF115:
 5397 01b5 63796465 		.ascii	"cydelayFreqKhz\000"
 5397      6C617946 
 5397      7265714B 
 5397      687A00
 5398              	.LASF71:
 5399 01c4 43794465 		.ascii	"CyDelayUs\000"
 5399      6C617955 
 5399      7300
 5400              	.LASF15:
 5401 01ce 646F7562 		.ascii	"double\000"
 5401      6C6500
 5402              	.LASF59:
 5403 01d5 73686966 		.ascii	"shift\000"
 5403      7400
 5404              	.LASF11:
 5405 01db 75696E74 		.ascii	"uint32\000"
 5405      333200
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 154


 5406              	.LASF55:
 5407 01e2 4379496E 		.ascii	"CyIntSetVector\000"
 5407      74536574 
 5407      56656374 
 5407      6F7200
 5408              	.LASF50:
 5409 01f1 6E756D62 		.ascii	"number\000"
 5409      657200
 5410              	.LASF48:
 5411 01f8 6D61736B 		.ascii	"mask\000"
 5411      00
 5412              	.LASF41:
 5413 01fd 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5413      73436C6B 
 5413      47657453 
 5413      7973636C 
 5413      6B536F75 
 5414              	.LASF30:
 5415 0215 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 5415      73436C6B 
 5415      496D6F45 
 5415      6E61626C 
 5415      6557636F 
 5416              	.LASF61:
 5417 022e 4379496E 		.ascii	"CyIntGetPriority\000"
 5417      74476574 
 5417      5072696F 
 5417      72697479 
 5417      00
 5418              	.LASF117:
 5419 023f 63796465 		.ascii	"cydelay32kMs\000"
 5419      6C617933 
 5419      326B4D73 
 5419      00
 5420              	.LASF109:
 5421 024c 43795379 		.ascii	"CySysPrbSetBgBufferTrim\000"
 5421      73507262 
 5421      53657442 
 5421      67427566 
 5421      66657254 
 5422              	.LASF75:
 5423 0264 43795379 		.ascii	"CySysTickInit\000"
 5423      73546963 
 5423      6B496E69 
 5423      7400
 5424              	.LASF60:
 5425 0272 76616C75 		.ascii	"value\000"
 5425      6500
 5426              	.LASF85:
 5427 0278 636C6F63 		.ascii	"clockSource\000"
 5427      6B536F75 
 5427      72636500 
 5428              	.LASF92:
 5429 0284 43794765 		.ascii	"CyGetUniqueId\000"
 5429      74556E69 
 5429      71756549 
 5429      6400
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 155


 5430              	.LASF86:
 5431 0292 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5431      73546963 
 5431      6B476574 
 5431      436F756E 
 5431      74466C61 
 5432              	.LASF8:
 5433 02a8 756E7369 		.ascii	"unsigned int\000"
 5433      676E6564 
 5433      20696E74 
 5433      00
 5434              	.LASF107:
 5435 02b5 43795379 		.ascii	"CySysPrbEnableVddaRef\000"
 5435      73507262 
 5435      456E6162 
 5435      6C655664 
 5435      64615265 
 5436              	.LASF87:
 5437 02cb 43795379 		.ascii	"CySysTickClear\000"
 5437      73546963 
 5437      6B436C65 
 5437      617200
 5438              	.LASF122:
 5439 02da 433A5C55 		.ascii	"C:\\Users\\Christopher Kuzma\\Downloads\\Cypress Th"
 5439      73657273 
 5439      5C436872 
 5439      6973746F 
 5439      70686572 
 5440 0309 696E675C 		.ascii	"ing\\EnvironmentSensing.cydsn\\EnvironmentSensing.c"
 5440      456E7669 
 5440      726F6E6D 
 5440      656E7453 
 5440      656E7369 
 5441 033a 7964736E 		.ascii	"ydsn\000"
 5441      00
 5442              	.LASF110:
 5443 033f 62675472 		.ascii	"bgTrim\000"
 5443      696D00
 5444              	.LASF120:
 5445 0346 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5445      4320342E 
 5445      392E3320 
 5445      32303135 
 5445      30333033 
 5446 0379 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 5446      20726576 
 5446      6973696F 
 5446      6E203232 
 5446      31323230 
 5447 03ac 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 5447      30202D66 
 5447      66756E63 
 5447      74696F6E 
 5447      2D736563 
 5448              	.LASF23:
 5449 03d8 43795379 		.ascii	"CySysClkImoStop\000"
 5449      73436C6B 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 156


 5449      496D6F53 
 5449      746F7000 
 5450              	.LASF65:
 5451 03e8 4379496E 		.ascii	"CyIntSetPending\000"
 5451      74536574 
 5451      50656E64 
 5451      696E6700 
 5452              	.LASF27:
 5453 03f8 6C664C69 		.ascii	"lfLimit\000"
 5453      6D697400 
 5454              	.LASF42:
 5455 0400 43795379 		.ascii	"CySysGetResetReason\000"
 5455      73476574 
 5455      52657365 
 5455      74526561 
 5455      736F6E00 
 5456              	.LASF3:
 5457 0414 73686F72 		.ascii	"short unsigned int\000"
 5457      7420756E 
 5457      7369676E 
 5457      65642069 
 5457      6E7400
 5458              	.LASF26:
 5459 0427 72656754 		.ascii	"regTmp\000"
 5459      6D7000
 5460              	.LASF108:
 5461 042e 43795379 		.ascii	"CySysPrbDisableVddaRef\000"
 5461      73507262 
 5461      44697361 
 5461      626C6556 
 5461      64646152 
 5462              	.LASF84:
 5463 0445 43795379 		.ascii	"CySysTickSetClockSource\000"
 5463      73546963 
 5463      6B536574 
 5463      436C6F63 
 5463      6B536F75 
 5464              	.LASF12:
 5465 045d 696E7438 		.ascii	"int8\000"
 5465      00
 5466              	.LASF58:
 5467 0462 7072696F 		.ascii	"priority\000"
 5467      72697479 
 5467      00
 5468              	.LASF37:
 5469 046b 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5469      73436C6B 
 5469      57726974 
 5469      65496D6F 
 5469      46726571 
 5470              	.LASF96:
 5471 0480 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5471      73536574 
 5471      466C6173 
 5471      68416363 
 5471      65737341 
 5472              	.LASF49:
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 157


 5473 049f 4379496E 		.ascii	"CyIntSetSysVector\000"
 5473      74536574 
 5473      53797356 
 5473      6563746F 
 5473      7200
 5474              	.LASF29:
 5475 04b1 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 5475      73436C6B 
 5475      496D6F44 
 5475      69736162 
 5475      6C655763 
 5476              	.LASF18:
 5477 04cb 72656733 		.ascii	"reg32\000"
 5477      3200
 5478              	.LASF74:
 5479 04d1 43795379 		.ascii	"CySysTickStart\000"
 5479      73546963 
 5479      6B537461 
 5479      727400
 5480              	.LASF44:
 5481 04e0 72657475 		.ascii	"returnStatus\000"
 5481      726E5374 
 5481      61747573 
 5481      00
 5482              	.LASF95:
 5483 04ed 736F7572 		.ascii	"source\000"
 5483      636500
 5484              	.LASF20:
 5485 04f4 73697A65 		.ascii	"sizetype\000"
 5485      74797065 
 5485      00
 5486              	.LASF98:
 5487 04fd 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5487      73536574 
 5487      50657269 
 5487      70686572 
 5487      616C4163 
 5488              	.LASF66:
 5489 0521 4379496E 		.ascii	"CyIntClearPending\000"
 5489      74436C65 
 5489      61725065 
 5489      6E64696E 
 5489      6700
 5490              	.LASF51:
 5491 0533 61646472 		.ascii	"address\000"
 5491      65737300 
 5492              	.LASF33:
 5493 053b 73797363 		.ascii	"sysclkSource\000"
 5493      6C6B536F 
 5493      75726365 
 5493      00
 5494              	.LASF89:
 5495 0548 66756E63 		.ascii	"function\000"
 5495      74696F6E 
 5495      00
 5496              	.LASF83:
 5497 0551 43795379 		.ascii	"CySysTickGetValue\000"
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 158


 5497      73546963 
 5497      6B476574 
 5497      56616C75 
 5497      6500
 5498              	.LASF114:
 5499 0563 63796465 		.ascii	"cydelayFreqHz\000"
 5499      6C617946 
 5499      72657148 
 5499      7A00
 5500              	.LASF57:
 5501 0571 4379496E 		.ascii	"CyIntSetPriority\000"
 5501      74536574 
 5501      5072696F 
 5501      72697479 
 5501      00
 5502              	.LASF102:
 5503 0582 6761696E 		.ascii	"gain\000"
 5503      00
 5504              	.LASF14:
 5505 0587 666C6F61 		.ascii	"float\000"
 5505      7400
 5506              	.LASF21:
 5507 058d 63795379 		.ascii	"cySysTickCallback\000"
 5507      73546963 
 5507      6B43616C 
 5507      6C626163 
 5507      6B00
 5508              	.LASF56:
 5509 059f 4379496E 		.ascii	"CyIntGetVector\000"
 5509      74476574 
 5509      56656374 
 5509      6F7200
 5510              	.LASF70:
 5511 05ae 6D696C6C 		.ascii	"milliseconds\000"
 5511      69736563 
 5511      6F6E6473 
 5511      00
 5512              	.LASF100:
 5513 05bb 43795379 		.ascii	"CySysPrbSetGlobalVrefSource\000"
 5513      73507262 
 5513      53657447 
 5513      6C6F6261 
 5513      6C567265 
 5514              	.LASF17:
 5515 05d7 72656738 		.ascii	"reg8\000"
 5515      00
 5516              	.LASF67:
 5517 05dc 43794861 		.ascii	"CyHalt\000"
 5517      6C7400
 5518              	.LASF94:
 5519 05e3 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5519      73536574 
 5519      52616D41 
 5519      63636573 
 5519      73417262 
 5520              	.LASF1:
 5521 0600 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 159


 5521      676E6564 
 5521      20636861 
 5521      7200
 5522              	.LASF2:
 5523 060e 73686F72 		.ascii	"short int\000"
 5523      7420696E 
 5523      7400
 5524              	.LASF62:
 5525 0618 4379496E 		.ascii	"CyIntEnable\000"
 5525      74456E61 
 5525      626C6500 
 5526              	.LASF54:
 5527 0624 4379496E 		.ascii	"CyIntGetSysVector\000"
 5527      74476574 
 5527      53797356 
 5527      6563746F 
 5527      7200
 5528              	.LASF35:
 5529 0636 636C6B53 		.ascii	"clkSelect\000"
 5529      656C6563 
 5529      7400
 5530              	.LASF43:
 5531 0640 72656173 		.ascii	"reason\000"
 5531      6F6E00
 5532              	.LASF103:
 5533 0647 43795379 		.ascii	"CySysPrbSetGlobalVrefVoltage\000"
 5533      73507262 
 5533      53657447 
 5533      6C6F6261 
 5533      6C567265 
 5534              	.LASF5:
 5535 0664 6C6F6E67 		.ascii	"long unsigned int\000"
 5535      20756E73 
 5535      69676E65 
 5535      6420696E 
 5535      7400
 5536              	.LASF16:
 5537 0676 63686172 		.ascii	"char\000"
 5537      00
 5538              	.LASF119:
 5539 067b 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 5539      6F467265 
 5539      714D687A 
 5539      3244706C 
 5539      6C4F6666 
 5540              	.LASF19:
 5541 0693 63796973 		.ascii	"cyisraddress\000"
 5541      72616464 
 5541      72657373 
 5541      00
 5542              	.LASF76:
 5543 06a0 43795379 		.ascii	"CySysTickEnable\000"
 5543      73546963 
 5543      6B456E61 
 5543      626C6500 
 5544              	.LASF40:
 5545 06b0 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 160


 5545      73436C6B 
 5545      57726974 
 5545      65486663 
 5545      6C6B4469 
 5546              	.LASF34:
 5547 06c6 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5547      73436C6B 
 5547      57726974 
 5547      65537973 
 5547      636C6B44 
 5548              	.LASF88:
 5549 06dd 43795379 		.ascii	"CySysTickSetCallback\000"
 5549      73546963 
 5549      6B536574 
 5549      43616C6C 
 5549      6261636B 
 5550              	.LASF113:
 5551 06f2 43795379 		.ascii	"CySysTickCallbacks\000"
 5551      73546963 
 5551      6B43616C 
 5551      6C626163 
 5551      6B7300
 5552              	.LASF38:
 5553 0705 696D6F54 		.ascii	"imoTrim1Value\000"
 5553      72696D31 
 5553      56616C75 
 5553      6500
 5554              	.LASF93:
 5555 0713 756E6971 		.ascii	"uniqueId\000"
 5555      75654964 
 5555      00
 5556              	.LASF28:
 5557 071c 666C6173 		.ascii	"flashCtlReg\000"
 5557      6843746C 
 5557      52656700 
 5558              	.LASF69:
 5559 0728 43794465 		.ascii	"CyDelay\000"
 5559      6C617900 
 5560              	.LASF79:
 5561 0730 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5561      73546963 
 5561      6B446973 
 5561      61626C65 
 5561      496E7465 
 5562              	.LASF116:
 5563 074a 63796465 		.ascii	"cydelayFreqMhz\000"
 5563      6C617946 
 5563      7265714D 
 5563      687A00
 5564              	.LASF97:
 5565 0759 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5565      73536574 
 5565      446D6163 
 5565      41636365 
 5565      73734172 
 5566              	.LASF77:
 5567 0777 43795379 		.ascii	"CySysTickStop\000"
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cc4LKu7J.s 			page 161


 5567      73546963 
 5567      6B53746F 
 5567      7000
 5568              	.LASF36:
 5569 0785 64697669 		.ascii	"divider\000"
 5569      64657200 
 5570              	.LASF22:
 5571 078d 43795379 		.ascii	"CySysClkImoStart\000"
 5571      73436C6B 
 5571      496D6F53 
 5571      74617274 
 5571      00
 5572              	.LASF105:
 5573 079e 43795379 		.ascii	"CySysPrbEnableDeepsleepVddaRef\000"
 5573      73507262 
 5573      456E6162 
 5573      6C654465 
 5573      6570736C 
 5574              	.LASF101:
 5575 07bd 43795379 		.ascii	"CySysPrbSetBgGain\000"
 5575      73507262 
 5575      53657442 
 5575      67476169 
 5575      6E00
 5576              	.LASF121:
 5577 07cf 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5577      72617465 
 5577      645F536F 
 5577      75726365 
 5577      5C50536F 
 5578              	.LASF72:
 5579 07ee 6D696372 		.ascii	"microseconds\000"
 5579      6F736563 
 5579      6F6E6473 
 5579      00
 5580              	.LASF32:
 5581 07fb 746D7052 		.ascii	"tmpReg\000"
 5581      656700
 5582              	.LASF80:
 5583 0802 43795379 		.ascii	"CySysTickSetReload\000"
 5583      73546963 
 5583      6B536574 
 5583      52656C6F 
 5583      616400
 5584              	.LASF123:
 5585 0815 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5585      73546963 
 5585      6B536572 
 5585      76696365 
 5585      43616C6C 
 5586              	.LASF112:
 5587 082f 72657475 		.ascii	"returnValue\000"
 5587      726E5661 
 5587      6C756500 
 5588              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
