ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cctzV2td.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Clk_1kHz.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Clk_1kHz_StartEx,"ax",%progbits
  18              		.align	2
  19              		.global	Clk_1kHz_StartEx
  20              		.code	16
  21              		.thumb_func
  22              		.type	Clk_1kHz_StartEx, %function
  23              	Clk_1kHz_StartEx:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\Clk_1kHz.c"
   1:Generated_Source\PSoC4/Clk_1kHz.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Clk_1kHz.c **** * File Name: Clk_1kHz.c
   3:Generated_Source\PSoC4/Clk_1kHz.c **** * Version 2.20
   4:Generated_Source\PSoC4/Clk_1kHz.c **** *
   5:Generated_Source\PSoC4/Clk_1kHz.c **** *  Description:
   6:Generated_Source\PSoC4/Clk_1kHz.c **** *   Provides system API for the clocking, interrupts and watchdog timer.
   7:Generated_Source\PSoC4/Clk_1kHz.c **** *
   8:Generated_Source\PSoC4/Clk_1kHz.c **** *  Note:
   9:Generated_Source\PSoC4/Clk_1kHz.c **** *   Documentation of the API's in this file is located in the
  10:Generated_Source\PSoC4/Clk_1kHz.c **** *   System Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/Clk_1kHz.c **** *
  12:Generated_Source\PSoC4/Clk_1kHz.c **** ********************************************************************************
  13:Generated_Source\PSoC4/Clk_1kHz.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/Clk_1kHz.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/Clk_1kHz.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/Clk_1kHz.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/Clk_1kHz.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/Clk_1kHz.c **** 
  19:Generated_Source\PSoC4/Clk_1kHz.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC4/Clk_1kHz.c **** #include "Clk_1kHz.h"
  21:Generated_Source\PSoC4/Clk_1kHz.c **** 
  22:Generated_Source\PSoC4/Clk_1kHz.c **** #if defined CYREG_PERI_DIV_CMD
  23:Generated_Source\PSoC4/Clk_1kHz.c **** 
  24:Generated_Source\PSoC4/Clk_1kHz.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/Clk_1kHz.c **** * Function Name: Clk_1kHz_StartEx
  26:Generated_Source\PSoC4/Clk_1kHz.c **** ********************************************************************************
  27:Generated_Source\PSoC4/Clk_1kHz.c **** *
  28:Generated_Source\PSoC4/Clk_1kHz.c **** * Summary:
  29:Generated_Source\PSoC4/Clk_1kHz.c **** *  Starts the clock, aligned to the specified running clock.
  30:Generated_Source\PSoC4/Clk_1kHz.c **** *
  31:Generated_Source\PSoC4/Clk_1kHz.c **** * Parameters:
  32:Generated_Source\PSoC4/Clk_1kHz.c **** *  alignClkDiv:  The divider to which phase alignment is performed when the
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cctzV2td.s 			page 2


  33:Generated_Source\PSoC4/Clk_1kHz.c **** *    clock is started.
  34:Generated_Source\PSoC4/Clk_1kHz.c **** *
  35:Generated_Source\PSoC4/Clk_1kHz.c **** * Returns:
  36:Generated_Source\PSoC4/Clk_1kHz.c **** *  None
  37:Generated_Source\PSoC4/Clk_1kHz.c **** *
  38:Generated_Source\PSoC4/Clk_1kHz.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/Clk_1kHz.c **** void Clk_1kHz_StartEx(uint32 alignClkDiv)
  40:Generated_Source\PSoC4/Clk_1kHz.c **** {
  26              		.loc 1 40 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 82B0     		sub	sp, sp, #8
  33              		.cfi_def_cfa_offset 16
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  36 0006 7860     		str	r0, [r7, #4]
  41:Generated_Source\PSoC4/Clk_1kHz.c ****     /* Make sure any previous start command has finished. */
  42:Generated_Source\PSoC4/Clk_1kHz.c ****     while((Clk_1kHz_CMD_REG & Clk_1kHz_CMD_ENABLE_MASK) != 0u)
  37              		.loc 1 42 0
  38 0008 C046     		mov	r8, r8
  39              	.L2:
  40              		.loc 1 42 0 is_stmt 0 discriminator 1
  41 000a 8023     		mov	r3, #128
  42 000c DB05     		lsl	r3, r3, #23
  43 000e 1B68     		ldr	r3, [r3]
  44 0010 002B     		cmp	r3, #0
  45 0012 FADB     		blt	.L2
  43:Generated_Source\PSoC4/Clk_1kHz.c ****     {
  44:Generated_Source\PSoC4/Clk_1kHz.c ****     }
  45:Generated_Source\PSoC4/Clk_1kHz.c ****     
  46:Generated_Source\PSoC4/Clk_1kHz.c ****     /* Specify the target divider and it's alignment divider, and enable. */
  47:Generated_Source\PSoC4/Clk_1kHz.c ****     Clk_1kHz_CMD_REG =
  46              		.loc 1 47 0 is_stmt 1
  47 0014 8023     		mov	r3, #128
  48 0016 DB05     		lsl	r3, r3, #23
  48:Generated_Source\PSoC4/Clk_1kHz.c ****         ((uint32)Clk_1kHz__DIV_ID << Clk_1kHz_CMD_DIV_SHIFT)|
  49:Generated_Source\PSoC4/Clk_1kHz.c ****         (alignClkDiv << Clk_1kHz_CMD_PA_DIV_SHIFT) |
  49              		.loc 1 49 0
  50 0018 7A68     		ldr	r2, [r7, #4]
  51 001a 1202     		lsl	r2, r2, #8
  52 001c 0249     		ldr	r1, .L3
  53 001e 0A43     		orr	r2, r1
  47:Generated_Source\PSoC4/Clk_1kHz.c ****         ((uint32)Clk_1kHz__DIV_ID << Clk_1kHz_CMD_DIV_SHIFT)|
  54              		.loc 1 47 0
  55 0020 1A60     		str	r2, [r3]
  50:Generated_Source\PSoC4/Clk_1kHz.c ****         (uint32)Clk_1kHz_CMD_ENABLE_MASK;
  51:Generated_Source\PSoC4/Clk_1kHz.c **** }
  56              		.loc 1 51 0
  57 0022 BD46     		mov	sp, r7
  58 0024 02B0     		add	sp, sp, #8
  59              		@ sp needed
  60 0026 80BD     		pop	{r7, pc}
  61              	.L4:
  62              		.align	2
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cctzV2td.s 			page 3


  63              	.L3:
  64 0028 44000080 		.word	-2147483580
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	Clk_1kHz_StartEx, .-Clk_1kHz_StartEx
  68              		.section	.text.Clk_1kHz_Stop,"ax",%progbits
  69              		.align	2
  70              		.global	Clk_1kHz_Stop
  71              		.code	16
  72              		.thumb_func
  73              		.type	Clk_1kHz_Stop, %function
  74              	Clk_1kHz_Stop:
  75              	.LFB1:
  52:Generated_Source\PSoC4/Clk_1kHz.c **** 
  53:Generated_Source\PSoC4/Clk_1kHz.c **** #else
  54:Generated_Source\PSoC4/Clk_1kHz.c **** 
  55:Generated_Source\PSoC4/Clk_1kHz.c **** /*******************************************************************************
  56:Generated_Source\PSoC4/Clk_1kHz.c **** * Function Name: Clk_1kHz_Start
  57:Generated_Source\PSoC4/Clk_1kHz.c **** ********************************************************************************
  58:Generated_Source\PSoC4/Clk_1kHz.c **** *
  59:Generated_Source\PSoC4/Clk_1kHz.c **** * Summary:
  60:Generated_Source\PSoC4/Clk_1kHz.c **** *  Starts the clock.
  61:Generated_Source\PSoC4/Clk_1kHz.c **** *
  62:Generated_Source\PSoC4/Clk_1kHz.c **** * Parameters:
  63:Generated_Source\PSoC4/Clk_1kHz.c **** *  None
  64:Generated_Source\PSoC4/Clk_1kHz.c **** *
  65:Generated_Source\PSoC4/Clk_1kHz.c **** * Returns:
  66:Generated_Source\PSoC4/Clk_1kHz.c **** *  None
  67:Generated_Source\PSoC4/Clk_1kHz.c **** *
  68:Generated_Source\PSoC4/Clk_1kHz.c **** *******************************************************************************/
  69:Generated_Source\PSoC4/Clk_1kHz.c **** 
  70:Generated_Source\PSoC4/Clk_1kHz.c **** void Clk_1kHz_Start(void)
  71:Generated_Source\PSoC4/Clk_1kHz.c **** {
  72:Generated_Source\PSoC4/Clk_1kHz.c ****     /* Set the bit to enable the clock. */
  73:Generated_Source\PSoC4/Clk_1kHz.c ****     Clk_1kHz_ENABLE_REG |= Clk_1kHz__ENABLE_MASK;
  74:Generated_Source\PSoC4/Clk_1kHz.c **** }
  75:Generated_Source\PSoC4/Clk_1kHz.c **** 
  76:Generated_Source\PSoC4/Clk_1kHz.c **** #endif /* CYREG_PERI_DIV_CMD */
  77:Generated_Source\PSoC4/Clk_1kHz.c **** 
  78:Generated_Source\PSoC4/Clk_1kHz.c **** 
  79:Generated_Source\PSoC4/Clk_1kHz.c **** /*******************************************************************************
  80:Generated_Source\PSoC4/Clk_1kHz.c **** * Function Name: Clk_1kHz_Stop
  81:Generated_Source\PSoC4/Clk_1kHz.c **** ********************************************************************************
  82:Generated_Source\PSoC4/Clk_1kHz.c **** *
  83:Generated_Source\PSoC4/Clk_1kHz.c **** * Summary:
  84:Generated_Source\PSoC4/Clk_1kHz.c **** *  Stops the clock and returns immediately. This API does not require the
  85:Generated_Source\PSoC4/Clk_1kHz.c **** *  source clock to be running but may return before the hardware is actually
  86:Generated_Source\PSoC4/Clk_1kHz.c **** *  disabled.
  87:Generated_Source\PSoC4/Clk_1kHz.c **** *
  88:Generated_Source\PSoC4/Clk_1kHz.c **** * Parameters:
  89:Generated_Source\PSoC4/Clk_1kHz.c **** *  None
  90:Generated_Source\PSoC4/Clk_1kHz.c **** *
  91:Generated_Source\PSoC4/Clk_1kHz.c **** * Returns:
  92:Generated_Source\PSoC4/Clk_1kHz.c **** *  None
  93:Generated_Source\PSoC4/Clk_1kHz.c **** *
  94:Generated_Source\PSoC4/Clk_1kHz.c **** *******************************************************************************/
  95:Generated_Source\PSoC4/Clk_1kHz.c **** void Clk_1kHz_Stop(void)
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cctzV2td.s 			page 4


  96:Generated_Source\PSoC4/Clk_1kHz.c **** {
  76              		.loc 1 96 0
  77              		.cfi_startproc
  78 0000 80B5     		push	{r7, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  97:Generated_Source\PSoC4/Clk_1kHz.c **** #if defined CYREG_PERI_DIV_CMD
  98:Generated_Source\PSoC4/Clk_1kHz.c **** 
  99:Generated_Source\PSoC4/Clk_1kHz.c ****     /* Make sure any previous start command has finished. */
 100:Generated_Source\PSoC4/Clk_1kHz.c ****     while((Clk_1kHz_CMD_REG & Clk_1kHz_CMD_ENABLE_MASK) != 0u)
  84              		.loc 1 100 0
  85 0004 C046     		mov	r8, r8
  86              	.L6:
  87              		.loc 1 100 0 is_stmt 0 discriminator 1
  88 0006 8023     		mov	r3, #128
  89 0008 DB05     		lsl	r3, r3, #23
  90 000a 1B68     		ldr	r3, [r3]
  91 000c 002B     		cmp	r3, #0
  92 000e FADB     		blt	.L6
 101:Generated_Source\PSoC4/Clk_1kHz.c ****     {
 102:Generated_Source\PSoC4/Clk_1kHz.c ****     }
 103:Generated_Source\PSoC4/Clk_1kHz.c ****     
 104:Generated_Source\PSoC4/Clk_1kHz.c ****     /* Specify the target divider and it's alignment divider, and disable. */
 105:Generated_Source\PSoC4/Clk_1kHz.c ****     Clk_1kHz_CMD_REG =
  93              		.loc 1 105 0 is_stmt 1
  94 0010 8023     		mov	r3, #128
  95 0012 DB05     		lsl	r3, r3, #23
  96 0014 014A     		ldr	r2, .L7
  97 0016 1A60     		str	r2, [r3]
 106:Generated_Source\PSoC4/Clk_1kHz.c ****         ((uint32)Clk_1kHz__DIV_ID << Clk_1kHz_CMD_DIV_SHIFT)|
 107:Generated_Source\PSoC4/Clk_1kHz.c ****         ((uint32)Clk_1kHz_CMD_DISABLE_MASK);
 108:Generated_Source\PSoC4/Clk_1kHz.c **** 
 109:Generated_Source\PSoC4/Clk_1kHz.c **** #else
 110:Generated_Source\PSoC4/Clk_1kHz.c **** 
 111:Generated_Source\PSoC4/Clk_1kHz.c ****     /* Clear the bit to disable the clock. */
 112:Generated_Source\PSoC4/Clk_1kHz.c ****     Clk_1kHz_ENABLE_REG &= (uint32)(~Clk_1kHz__ENABLE_MASK);
 113:Generated_Source\PSoC4/Clk_1kHz.c ****     
 114:Generated_Source\PSoC4/Clk_1kHz.c **** #endif /* CYREG_PERI_DIV_CMD */
 115:Generated_Source\PSoC4/Clk_1kHz.c **** }
  98              		.loc 1 115 0
  99 0018 BD46     		mov	sp, r7
 100              		@ sp needed
 101 001a 80BD     		pop	{r7, pc}
 102              	.L8:
 103              		.align	2
 104              	.L7:
 105 001c 44000040 		.word	1073741892
 106              		.cfi_endproc
 107              	.LFE1:
 108              		.size	Clk_1kHz_Stop, .-Clk_1kHz_Stop
 109              		.section	.text.Clk_1kHz_SetFractionalDividerRegister,"ax",%progbits
 110              		.align	2
 111              		.global	Clk_1kHz_SetFractionalDividerRegister
 112              		.code	16
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cctzV2td.s 			page 5


 113              		.thumb_func
 114              		.type	Clk_1kHz_SetFractionalDividerRegister, %function
 115              	Clk_1kHz_SetFractionalDividerRegister:
 116              	.LFB2:
 116:Generated_Source\PSoC4/Clk_1kHz.c **** 
 117:Generated_Source\PSoC4/Clk_1kHz.c **** 
 118:Generated_Source\PSoC4/Clk_1kHz.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/Clk_1kHz.c **** * Function Name: Clk_1kHz_SetFractionalDividerRegister
 120:Generated_Source\PSoC4/Clk_1kHz.c **** ********************************************************************************
 121:Generated_Source\PSoC4/Clk_1kHz.c **** *
 122:Generated_Source\PSoC4/Clk_1kHz.c **** * Summary:
 123:Generated_Source\PSoC4/Clk_1kHz.c **** *  Modifies the clock divider and the fractional divider.
 124:Generated_Source\PSoC4/Clk_1kHz.c **** *
 125:Generated_Source\PSoC4/Clk_1kHz.c **** * Parameters:
 126:Generated_Source\PSoC4/Clk_1kHz.c **** *  clkDivider:  Divider register value (0-65535). This value is NOT the
 127:Generated_Source\PSoC4/Clk_1kHz.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 128:Generated_Source\PSoC4/Clk_1kHz.c **** *    to divide the clock by 2, this parameter should be set to 1.
 129:Generated_Source\PSoC4/Clk_1kHz.c **** *  fracDivider:  Fractional Divider register value (0-31).
 130:Generated_Source\PSoC4/Clk_1kHz.c **** * Returns:
 131:Generated_Source\PSoC4/Clk_1kHz.c **** *  None
 132:Generated_Source\PSoC4/Clk_1kHz.c **** *
 133:Generated_Source\PSoC4/Clk_1kHz.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/Clk_1kHz.c **** void Clk_1kHz_SetFractionalDividerRegister(uint16 clkDivider, uint8 clkFractional)
 135:Generated_Source\PSoC4/Clk_1kHz.c **** {
 117              		.loc 1 135 0
 118              		.cfi_startproc
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 84B0     		sub	sp, sp, #16
 124              		.cfi_def_cfa_offset 24
 125 0004 00AF     		add	r7, sp, #0
 126              		.cfi_def_cfa_register 7
 127 0006 021C     		mov	r2, r0
 128 0008 BB1D     		add	r3, r7, #6
 129 000a 1A80     		strh	r2, [r3]
 130 000c 7B1D     		add	r3, r7, #5
 131 000e 0A1C     		add	r2, r1, #0
 132 0010 1A70     		strb	r2, [r3]
 136:Generated_Source\PSoC4/Clk_1kHz.c ****     uint32 maskVal;
 137:Generated_Source\PSoC4/Clk_1kHz.c ****     uint32 regVal;
 138:Generated_Source\PSoC4/Clk_1kHz.c ****     
 139:Generated_Source\PSoC4/Clk_1kHz.c **** #if defined (Clk_1kHz__FRAC_MASK) || defined (CYREG_PERI_DIV_CMD)
 140:Generated_Source\PSoC4/Clk_1kHz.c ****     
 141:Generated_Source\PSoC4/Clk_1kHz.c **** 	/* get all but divider bits */
 142:Generated_Source\PSoC4/Clk_1kHz.c ****     maskVal = Clk_1kHz_DIV_REG & 
 133              		.loc 1 142 0
 134 0012 0B4B     		ldr	r3, .L10
 135 0014 1B68     		ldr	r3, [r3]
 136 0016 0722     		mov	r2, #7
 137 0018 1340     		and	r3, r2
 138 001a FB60     		str	r3, [r7, #12]
 143:Generated_Source\PSoC4/Clk_1kHz.c ****                     (uint32)(~(uint32)(Clk_1kHz_DIV_INT_MASK | Clk_1kHz_DIV_FRAC_MASK)); 
 144:Generated_Source\PSoC4/Clk_1kHz.c **** 	/* combine mask and new divider vals into 32-bit value */
 145:Generated_Source\PSoC4/Clk_1kHz.c ****     regVal = maskVal |
 146:Generated_Source\PSoC4/Clk_1kHz.c ****         ((uint32)((uint32)clkDivider <<  Clk_1kHz_DIV_INT_SHIFT) & Clk_1kHz_DIV_INT_MASK) |
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cctzV2td.s 			page 6


 139              		.loc 1 146 0
 140 001c BB1D     		add	r3, r7, #6
 141 001e 1B88     		ldrh	r3, [r3]
 142 0020 1A02     		lsl	r2, r3, #8
 145:Generated_Source\PSoC4/Clk_1kHz.c ****         ((uint32)((uint32)clkDivider <<  Clk_1kHz_DIV_INT_SHIFT) & Clk_1kHz_DIV_INT_MASK) |
 143              		.loc 1 145 0
 144 0022 FB68     		ldr	r3, [r7, #12]
 145 0024 1A43     		orr	r2, r3
 147:Generated_Source\PSoC4/Clk_1kHz.c ****         ((uint32)((uint32)clkFractional << Clk_1kHz_DIV_FRAC_SHIFT) & Clk_1kHz_DIV_FRAC_MASK);
 146              		.loc 1 147 0
 147 0026 7B1D     		add	r3, r7, #5
 148 0028 1B78     		ldrb	r3, [r3]
 149 002a DB00     		lsl	r3, r3, #3
 150 002c FF21     		mov	r1, #255
 151 002e 0B40     		and	r3, r1
 145:Generated_Source\PSoC4/Clk_1kHz.c ****         ((uint32)((uint32)clkDivider <<  Clk_1kHz_DIV_INT_SHIFT) & Clk_1kHz_DIV_INT_MASK) |
 152              		.loc 1 145 0
 153 0030 1343     		orr	r3, r2
 154 0032 BB60     		str	r3, [r7, #8]
 148:Generated_Source\PSoC4/Clk_1kHz.c ****     
 149:Generated_Source\PSoC4/Clk_1kHz.c **** #else
 150:Generated_Source\PSoC4/Clk_1kHz.c ****     /* get all but integer divider bits */
 151:Generated_Source\PSoC4/Clk_1kHz.c ****     maskVal = Clk_1kHz_DIV_REG & (uint32)(~(uint32)Clk_1kHz__DIVIDER_MASK);
 152:Generated_Source\PSoC4/Clk_1kHz.c ****     /* combine mask and new divider val into 32-bit value */
 153:Generated_Source\PSoC4/Clk_1kHz.c ****     regVal = clkDivider | maskVal;
 154:Generated_Source\PSoC4/Clk_1kHz.c ****     
 155:Generated_Source\PSoC4/Clk_1kHz.c **** #endif /* Clk_1kHz__FRAC_MASK || CYREG_PERI_DIV_CMD */
 156:Generated_Source\PSoC4/Clk_1kHz.c **** 
 157:Generated_Source\PSoC4/Clk_1kHz.c ****     Clk_1kHz_DIV_REG = regVal;
 155              		.loc 1 157 0
 156 0034 024B     		ldr	r3, .L10
 157 0036 BA68     		ldr	r2, [r7, #8]
 158 0038 1A60     		str	r2, [r3]
 158:Generated_Source\PSoC4/Clk_1kHz.c **** }
 159              		.loc 1 158 0
 160 003a BD46     		mov	sp, r7
 161 003c 04B0     		add	sp, sp, #16
 162              		@ sp needed
 163 003e 80BD     		pop	{r7, pc}
 164              	.L11:
 165              		.align	2
 166              	.L10:
 167 0040 10030040 		.word	1073742608
 168              		.cfi_endproc
 169              	.LFE2:
 170              		.size	Clk_1kHz_SetFractionalDividerRegister, .-Clk_1kHz_SetFractionalDividerRegister
 171              		.section	.text.Clk_1kHz_GetDividerRegister,"ax",%progbits
 172              		.align	2
 173              		.global	Clk_1kHz_GetDividerRegister
 174              		.code	16
 175              		.thumb_func
 176              		.type	Clk_1kHz_GetDividerRegister, %function
 177              	Clk_1kHz_GetDividerRegister:
 178              	.LFB3:
 159:Generated_Source\PSoC4/Clk_1kHz.c **** 
 160:Generated_Source\PSoC4/Clk_1kHz.c **** 
 161:Generated_Source\PSoC4/Clk_1kHz.c **** /*******************************************************************************
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cctzV2td.s 			page 7


 162:Generated_Source\PSoC4/Clk_1kHz.c **** * Function Name: Clk_1kHz_GetDividerRegister
 163:Generated_Source\PSoC4/Clk_1kHz.c **** ********************************************************************************
 164:Generated_Source\PSoC4/Clk_1kHz.c **** *
 165:Generated_Source\PSoC4/Clk_1kHz.c **** * Summary:
 166:Generated_Source\PSoC4/Clk_1kHz.c **** *  Gets the clock divider register value.
 167:Generated_Source\PSoC4/Clk_1kHz.c **** *
 168:Generated_Source\PSoC4/Clk_1kHz.c **** * Parameters:
 169:Generated_Source\PSoC4/Clk_1kHz.c **** *  None
 170:Generated_Source\PSoC4/Clk_1kHz.c **** *
 171:Generated_Source\PSoC4/Clk_1kHz.c **** * Returns:
 172:Generated_Source\PSoC4/Clk_1kHz.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 173:Generated_Source\PSoC4/Clk_1kHz.c **** *  divide by 2, the return value will be 1.
 174:Generated_Source\PSoC4/Clk_1kHz.c **** *
 175:Generated_Source\PSoC4/Clk_1kHz.c **** *******************************************************************************/
 176:Generated_Source\PSoC4/Clk_1kHz.c **** uint16 Clk_1kHz_GetDividerRegister(void)
 177:Generated_Source\PSoC4/Clk_1kHz.c **** {
 179              		.loc 1 177 0
 180              		.cfi_startproc
 181 0000 80B5     		push	{r7, lr}
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 7, -8
 184              		.cfi_offset 14, -4
 185 0002 00AF     		add	r7, sp, #0
 186              		.cfi_def_cfa_register 7
 178:Generated_Source\PSoC4/Clk_1kHz.c ****     return (uint16)((Clk_1kHz_DIV_REG & Clk_1kHz_DIV_INT_MASK)
 187              		.loc 1 178 0
 188 0004 034B     		ldr	r3, .L14
 189 0006 1B68     		ldr	r3, [r3]
 179:Generated_Source\PSoC4/Clk_1kHz.c ****         >> Clk_1kHz_DIV_INT_SHIFT);
 190              		.loc 1 179 0
 191 0008 1B0A     		lsr	r3, r3, #8
 178:Generated_Source\PSoC4/Clk_1kHz.c ****     return (uint16)((Clk_1kHz_DIV_REG & Clk_1kHz_DIV_INT_MASK)
 192              		.loc 1 178 0
 193 000a 9BB2     		uxth	r3, r3
 180:Generated_Source\PSoC4/Clk_1kHz.c **** }
 194              		.loc 1 180 0
 195 000c 181C     		mov	r0, r3
 196 000e BD46     		mov	sp, r7
 197              		@ sp needed
 198 0010 80BD     		pop	{r7, pc}
 199              	.L15:
 200 0012 C046     		.align	2
 201              	.L14:
 202 0014 10030040 		.word	1073742608
 203              		.cfi_endproc
 204              	.LFE3:
 205              		.size	Clk_1kHz_GetDividerRegister, .-Clk_1kHz_GetDividerRegister
 206              		.section	.text.Clk_1kHz_GetFractionalDividerRegister,"ax",%progbits
 207              		.align	2
 208              		.global	Clk_1kHz_GetFractionalDividerRegister
 209              		.code	16
 210              		.thumb_func
 211              		.type	Clk_1kHz_GetFractionalDividerRegister, %function
 212              	Clk_1kHz_GetFractionalDividerRegister:
 213              	.LFB4:
 181:Generated_Source\PSoC4/Clk_1kHz.c **** 
 182:Generated_Source\PSoC4/Clk_1kHz.c **** 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cctzV2td.s 			page 8


 183:Generated_Source\PSoC4/Clk_1kHz.c **** /*******************************************************************************
 184:Generated_Source\PSoC4/Clk_1kHz.c **** * Function Name: Clk_1kHz_GetFractionalDividerRegister
 185:Generated_Source\PSoC4/Clk_1kHz.c **** ********************************************************************************
 186:Generated_Source\PSoC4/Clk_1kHz.c **** *
 187:Generated_Source\PSoC4/Clk_1kHz.c **** * Summary:
 188:Generated_Source\PSoC4/Clk_1kHz.c **** *  Gets the clock fractional divider register value.
 189:Generated_Source\PSoC4/Clk_1kHz.c **** *
 190:Generated_Source\PSoC4/Clk_1kHz.c **** * Parameters:
 191:Generated_Source\PSoC4/Clk_1kHz.c **** *  None
 192:Generated_Source\PSoC4/Clk_1kHz.c **** *
 193:Generated_Source\PSoC4/Clk_1kHz.c **** * Returns:
 194:Generated_Source\PSoC4/Clk_1kHz.c **** *  Fractional Divide value of the clock
 195:Generated_Source\PSoC4/Clk_1kHz.c **** *  0 if the fractional divider is not in use.
 196:Generated_Source\PSoC4/Clk_1kHz.c **** *
 197:Generated_Source\PSoC4/Clk_1kHz.c **** *******************************************************************************/
 198:Generated_Source\PSoC4/Clk_1kHz.c **** uint8 Clk_1kHz_GetFractionalDividerRegister(void)
 199:Generated_Source\PSoC4/Clk_1kHz.c **** {
 214              		.loc 1 199 0
 215              		.cfi_startproc
 216 0000 80B5     		push	{r7, lr}
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 7, -8
 219              		.cfi_offset 14, -4
 220 0002 00AF     		add	r7, sp, #0
 221              		.cfi_def_cfa_register 7
 200:Generated_Source\PSoC4/Clk_1kHz.c **** #if defined (Clk_1kHz__FRAC_MASK)
 201:Generated_Source\PSoC4/Clk_1kHz.c ****     /* return fractional divider bits */
 202:Generated_Source\PSoC4/Clk_1kHz.c ****     return (uint8)((Clk_1kHz_DIV_REG & Clk_1kHz_DIV_FRAC_MASK)
 203:Generated_Source\PSoC4/Clk_1kHz.c ****         >> Clk_1kHz_DIV_FRAC_SHIFT);
 204:Generated_Source\PSoC4/Clk_1kHz.c **** #else
 205:Generated_Source\PSoC4/Clk_1kHz.c ****     return 0u;
 222              		.loc 1 205 0
 223 0004 0023     		mov	r3, #0
 206:Generated_Source\PSoC4/Clk_1kHz.c **** #endif /* Clk_1kHz__FRAC_MASK */
 207:Generated_Source\PSoC4/Clk_1kHz.c **** }
 224              		.loc 1 207 0
 225 0006 181C     		mov	r0, r3
 226 0008 BD46     		mov	sp, r7
 227              		@ sp needed
 228 000a 80BD     		pop	{r7, pc}
 229              		.cfi_endproc
 230              	.LFE4:
 231              		.size	Clk_1kHz_GetFractionalDividerRegister, .-Clk_1kHz_GetFractionalDividerRegister
 232              		.text
 233              	.Letext0:
 234              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 235              		.section	.debug_info,"",%progbits
 236              	.Ldebug_info0:
 237 0000 5F010000 		.4byte	0x15f
 238 0004 0400     		.2byte	0x4
 239 0006 00000000 		.4byte	.Ldebug_abbrev0
 240 000a 04       		.byte	0x4
 241 000b 01       		.uleb128 0x1
 242 000c AC010000 		.4byte	.LASF25
 243 0010 01       		.byte	0x1
 244 0011 5F010000 		.4byte	.LASF26
 245 0015 60000000 		.4byte	.LASF27
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cctzV2td.s 			page 9


 246 0019 00000000 		.4byte	.Ldebug_ranges0+0
 247 001d 00000000 		.4byte	0
 248 0021 00000000 		.4byte	.Ldebug_line0
 249 0025 02       		.uleb128 0x2
 250 0026 01       		.byte	0x1
 251 0027 06       		.byte	0x6
 252 0028 78020000 		.4byte	.LASF0
 253 002c 02       		.uleb128 0x2
 254 002d 01       		.byte	0x1
 255 002e 08       		.byte	0x8
 256 002f 17010000 		.4byte	.LASF1
 257 0033 02       		.uleb128 0x2
 258 0034 02       		.byte	0x2
 259 0035 05       		.byte	0x5
 260 0036 51020000 		.4byte	.LASF2
 261 003a 02       		.uleb128 0x2
 262 003b 02       		.byte	0x2
 263 003c 07       		.byte	0x7
 264 003d F3000000 		.4byte	.LASF3
 265 0041 02       		.uleb128 0x2
 266 0042 04       		.byte	0x4
 267 0043 05       		.byte	0x5
 268 0044 61020000 		.4byte	.LASF4
 269 0048 02       		.uleb128 0x2
 270 0049 04       		.byte	0x4
 271 004a 07       		.byte	0x7
 272 004b E1000000 		.4byte	.LASF5
 273 004f 02       		.uleb128 0x2
 274 0050 08       		.byte	0x8
 275 0051 05       		.byte	0x5
 276 0052 3E020000 		.4byte	.LASF6
 277 0056 02       		.uleb128 0x2
 278 0057 08       		.byte	0x8
 279 0058 07       		.byte	0x7
 280 0059 95010000 		.4byte	.LASF7
 281 005d 03       		.uleb128 0x3
 282 005e 04       		.byte	0x4
 283 005f 05       		.byte	0x5
 284 0060 696E7400 		.ascii	"int\000"
 285 0064 02       		.uleb128 0x2
 286 0065 04       		.byte	0x4
 287 0066 07       		.byte	0x7
 288 0067 88010000 		.4byte	.LASF8
 289 006b 04       		.uleb128 0x4
 290 006c 5B020000 		.4byte	.LASF9
 291 0070 02       		.byte	0x2
 292 0071 9801     		.2byte	0x198
 293 0073 2C000000 		.4byte	0x2c
 294 0077 04       		.uleb128 0x4
 295 0078 58010000 		.4byte	.LASF10
 296 007c 02       		.byte	0x2
 297 007d 9901     		.2byte	0x199
 298 007f 3A000000 		.4byte	0x3a
 299 0083 04       		.uleb128 0x4
 300 0084 81010000 		.4byte	.LASF11
 301 0088 02       		.byte	0x2
 302 0089 9A01     		.2byte	0x19a
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cctzV2td.s 			page 10


 303 008b 48000000 		.4byte	0x48
 304 008f 02       		.uleb128 0x2
 305 0090 04       		.byte	0x4
 306 0091 04       		.byte	0x4
 307 0092 34000000 		.4byte	.LASF12
 308 0096 02       		.uleb128 0x2
 309 0097 08       		.byte	0x8
 310 0098 04       		.byte	0x4
 311 0099 30010000 		.4byte	.LASF13
 312 009d 02       		.uleb128 0x2
 313 009e 01       		.byte	0x1
 314 009f 08       		.byte	0x8
 315 00a0 4C020000 		.4byte	.LASF14
 316 00a4 04       		.uleb128 0x4
 317 00a5 00000000 		.4byte	.LASF15
 318 00a9 02       		.byte	0x2
 319 00aa 4402     		.2byte	0x244
 320 00ac B0000000 		.4byte	0xb0
 321 00b0 05       		.uleb128 0x5
 322 00b1 83000000 		.4byte	0x83
 323 00b5 06       		.uleb128 0x6
 324 00b6 06010000 		.4byte	.LASF16
 325 00ba 01       		.byte	0x1
 326 00bb 27       		.byte	0x27
 327 00bc 00000000 		.4byte	.LFB0
 328 00c0 2C000000 		.4byte	.LFE0-.LFB0
 329 00c4 01       		.uleb128 0x1
 330 00c5 9C       		.byte	0x9c
 331 00c6 D9000000 		.4byte	0xd9
 332 00ca 07       		.uleb128 0x7
 333 00cb 3E010000 		.4byte	.LASF18
 334 00cf 01       		.byte	0x1
 335 00d0 27       		.byte	0x27
 336 00d1 83000000 		.4byte	0x83
 337 00d5 02       		.uleb128 0x2
 338 00d6 91       		.byte	0x91
 339 00d7 74       		.sleb128 -12
 340 00d8 00       		.byte	0
 341 00d9 08       		.uleb128 0x8
 342 00da 6A020000 		.4byte	.LASF28
 343 00de 01       		.byte	0x1
 344 00df 5F       		.byte	0x5f
 345 00e0 00000000 		.4byte	.LFB1
 346 00e4 20000000 		.4byte	.LFE1-.LFB1
 347 00e8 01       		.uleb128 0x1
 348 00e9 9C       		.byte	0x9c
 349 00ea 06       		.uleb128 0x6
 350 00eb 3A000000 		.4byte	.LASF17
 351 00ef 01       		.byte	0x1
 352 00f0 86       		.byte	0x86
 353 00f1 00000000 		.4byte	.LFB2
 354 00f5 44000000 		.4byte	.LFE2-.LFB2
 355 00f9 01       		.uleb128 0x1
 356 00fa 9C       		.byte	0x9c
 357 00fb 38010000 		.4byte	0x138
 358 00ff 07       		.uleb128 0x7
 359 0100 25010000 		.4byte	.LASF19
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cctzV2td.s 			page 11


 360 0104 01       		.byte	0x1
 361 0105 86       		.byte	0x86
 362 0106 77000000 		.4byte	0x77
 363 010a 02       		.uleb128 0x2
 364 010b 91       		.byte	0x91
 365 010c 6E       		.sleb128 -18
 366 010d 07       		.uleb128 0x7
 367 010e 4A010000 		.4byte	.LASF20
 368 0112 01       		.byte	0x1
 369 0113 86       		.byte	0x86
 370 0114 6B000000 		.4byte	0x6b
 371 0118 02       		.uleb128 0x2
 372 0119 91       		.byte	0x91
 373 011a 6D       		.sleb128 -19
 374 011b 09       		.uleb128 0x9
 375 011c 06000000 		.4byte	.LASF21
 376 0120 01       		.byte	0x1
 377 0121 88       		.byte	0x88
 378 0122 83000000 		.4byte	0x83
 379 0126 02       		.uleb128 0x2
 380 0127 91       		.byte	0x91
 381 0128 74       		.sleb128 -12
 382 0129 09       		.uleb128 0x9
 383 012a 37010000 		.4byte	.LASF22
 384 012e 01       		.byte	0x1
 385 012f 89       		.byte	0x89
 386 0130 83000000 		.4byte	0x83
 387 0134 02       		.uleb128 0x2
 388 0135 91       		.byte	0x91
 389 0136 70       		.sleb128 -16
 390 0137 00       		.byte	0
 391 0138 0A       		.uleb128 0xa
 392 0139 C5000000 		.4byte	.LASF23
 393 013d 01       		.byte	0x1
 394 013e B0       		.byte	0xb0
 395 013f 77000000 		.4byte	0x77
 396 0143 00000000 		.4byte	.LFB3
 397 0147 18000000 		.4byte	.LFE3-.LFB3
 398 014b 01       		.uleb128 0x1
 399 014c 9C       		.byte	0x9c
 400 014d 0A       		.uleb128 0xa
 401 014e 0E000000 		.4byte	.LASF24
 402 0152 01       		.byte	0x1
 403 0153 C6       		.byte	0xc6
 404 0154 6B000000 		.4byte	0x6b
 405 0158 00000000 		.4byte	.LFB4
 406 015c 0C000000 		.4byte	.LFE4-.LFB4
 407 0160 01       		.uleb128 0x1
 408 0161 9C       		.byte	0x9c
 409 0162 00       		.byte	0
 410              		.section	.debug_abbrev,"",%progbits
 411              	.Ldebug_abbrev0:
 412 0000 01       		.uleb128 0x1
 413 0001 11       		.uleb128 0x11
 414 0002 01       		.byte	0x1
 415 0003 25       		.uleb128 0x25
 416 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cctzV2td.s 			page 12


 417 0005 13       		.uleb128 0x13
 418 0006 0B       		.uleb128 0xb
 419 0007 03       		.uleb128 0x3
 420 0008 0E       		.uleb128 0xe
 421 0009 1B       		.uleb128 0x1b
 422 000a 0E       		.uleb128 0xe
 423 000b 55       		.uleb128 0x55
 424 000c 17       		.uleb128 0x17
 425 000d 11       		.uleb128 0x11
 426 000e 01       		.uleb128 0x1
 427 000f 10       		.uleb128 0x10
 428 0010 17       		.uleb128 0x17
 429 0011 00       		.byte	0
 430 0012 00       		.byte	0
 431 0013 02       		.uleb128 0x2
 432 0014 24       		.uleb128 0x24
 433 0015 00       		.byte	0
 434 0016 0B       		.uleb128 0xb
 435 0017 0B       		.uleb128 0xb
 436 0018 3E       		.uleb128 0x3e
 437 0019 0B       		.uleb128 0xb
 438 001a 03       		.uleb128 0x3
 439 001b 0E       		.uleb128 0xe
 440 001c 00       		.byte	0
 441 001d 00       		.byte	0
 442 001e 03       		.uleb128 0x3
 443 001f 24       		.uleb128 0x24
 444 0020 00       		.byte	0
 445 0021 0B       		.uleb128 0xb
 446 0022 0B       		.uleb128 0xb
 447 0023 3E       		.uleb128 0x3e
 448 0024 0B       		.uleb128 0xb
 449 0025 03       		.uleb128 0x3
 450 0026 08       		.uleb128 0x8
 451 0027 00       		.byte	0
 452 0028 00       		.byte	0
 453 0029 04       		.uleb128 0x4
 454 002a 16       		.uleb128 0x16
 455 002b 00       		.byte	0
 456 002c 03       		.uleb128 0x3
 457 002d 0E       		.uleb128 0xe
 458 002e 3A       		.uleb128 0x3a
 459 002f 0B       		.uleb128 0xb
 460 0030 3B       		.uleb128 0x3b
 461 0031 05       		.uleb128 0x5
 462 0032 49       		.uleb128 0x49
 463 0033 13       		.uleb128 0x13
 464 0034 00       		.byte	0
 465 0035 00       		.byte	0
 466 0036 05       		.uleb128 0x5
 467 0037 35       		.uleb128 0x35
 468 0038 00       		.byte	0
 469 0039 49       		.uleb128 0x49
 470 003a 13       		.uleb128 0x13
 471 003b 00       		.byte	0
 472 003c 00       		.byte	0
 473 003d 06       		.uleb128 0x6
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cctzV2td.s 			page 13


 474 003e 2E       		.uleb128 0x2e
 475 003f 01       		.byte	0x1
 476 0040 3F       		.uleb128 0x3f
 477 0041 19       		.uleb128 0x19
 478 0042 03       		.uleb128 0x3
 479 0043 0E       		.uleb128 0xe
 480 0044 3A       		.uleb128 0x3a
 481 0045 0B       		.uleb128 0xb
 482 0046 3B       		.uleb128 0x3b
 483 0047 0B       		.uleb128 0xb
 484 0048 27       		.uleb128 0x27
 485 0049 19       		.uleb128 0x19
 486 004a 11       		.uleb128 0x11
 487 004b 01       		.uleb128 0x1
 488 004c 12       		.uleb128 0x12
 489 004d 06       		.uleb128 0x6
 490 004e 40       		.uleb128 0x40
 491 004f 18       		.uleb128 0x18
 492 0050 9742     		.uleb128 0x2117
 493 0052 19       		.uleb128 0x19
 494 0053 01       		.uleb128 0x1
 495 0054 13       		.uleb128 0x13
 496 0055 00       		.byte	0
 497 0056 00       		.byte	0
 498 0057 07       		.uleb128 0x7
 499 0058 05       		.uleb128 0x5
 500 0059 00       		.byte	0
 501 005a 03       		.uleb128 0x3
 502 005b 0E       		.uleb128 0xe
 503 005c 3A       		.uleb128 0x3a
 504 005d 0B       		.uleb128 0xb
 505 005e 3B       		.uleb128 0x3b
 506 005f 0B       		.uleb128 0xb
 507 0060 49       		.uleb128 0x49
 508 0061 13       		.uleb128 0x13
 509 0062 02       		.uleb128 0x2
 510 0063 18       		.uleb128 0x18
 511 0064 00       		.byte	0
 512 0065 00       		.byte	0
 513 0066 08       		.uleb128 0x8
 514 0067 2E       		.uleb128 0x2e
 515 0068 00       		.byte	0
 516 0069 3F       		.uleb128 0x3f
 517 006a 19       		.uleb128 0x19
 518 006b 03       		.uleb128 0x3
 519 006c 0E       		.uleb128 0xe
 520 006d 3A       		.uleb128 0x3a
 521 006e 0B       		.uleb128 0xb
 522 006f 3B       		.uleb128 0x3b
 523 0070 0B       		.uleb128 0xb
 524 0071 27       		.uleb128 0x27
 525 0072 19       		.uleb128 0x19
 526 0073 11       		.uleb128 0x11
 527 0074 01       		.uleb128 0x1
 528 0075 12       		.uleb128 0x12
 529 0076 06       		.uleb128 0x6
 530 0077 40       		.uleb128 0x40
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cctzV2td.s 			page 14


 531 0078 18       		.uleb128 0x18
 532 0079 9742     		.uleb128 0x2117
 533 007b 19       		.uleb128 0x19
 534 007c 00       		.byte	0
 535 007d 00       		.byte	0
 536 007e 09       		.uleb128 0x9
 537 007f 34       		.uleb128 0x34
 538 0080 00       		.byte	0
 539 0081 03       		.uleb128 0x3
 540 0082 0E       		.uleb128 0xe
 541 0083 3A       		.uleb128 0x3a
 542 0084 0B       		.uleb128 0xb
 543 0085 3B       		.uleb128 0x3b
 544 0086 0B       		.uleb128 0xb
 545 0087 49       		.uleb128 0x49
 546 0088 13       		.uleb128 0x13
 547 0089 02       		.uleb128 0x2
 548 008a 18       		.uleb128 0x18
 549 008b 00       		.byte	0
 550 008c 00       		.byte	0
 551 008d 0A       		.uleb128 0xa
 552 008e 2E       		.uleb128 0x2e
 553 008f 00       		.byte	0
 554 0090 3F       		.uleb128 0x3f
 555 0091 19       		.uleb128 0x19
 556 0092 03       		.uleb128 0x3
 557 0093 0E       		.uleb128 0xe
 558 0094 3A       		.uleb128 0x3a
 559 0095 0B       		.uleb128 0xb
 560 0096 3B       		.uleb128 0x3b
 561 0097 0B       		.uleb128 0xb
 562 0098 27       		.uleb128 0x27
 563 0099 19       		.uleb128 0x19
 564 009a 49       		.uleb128 0x49
 565 009b 13       		.uleb128 0x13
 566 009c 11       		.uleb128 0x11
 567 009d 01       		.uleb128 0x1
 568 009e 12       		.uleb128 0x12
 569 009f 06       		.uleb128 0x6
 570 00a0 40       		.uleb128 0x40
 571 00a1 18       		.uleb128 0x18
 572 00a2 9742     		.uleb128 0x2117
 573 00a4 19       		.uleb128 0x19
 574 00a5 00       		.byte	0
 575 00a6 00       		.byte	0
 576 00a7 00       		.byte	0
 577              		.section	.debug_aranges,"",%progbits
 578 0000 3C000000 		.4byte	0x3c
 579 0004 0200     		.2byte	0x2
 580 0006 00000000 		.4byte	.Ldebug_info0
 581 000a 04       		.byte	0x4
 582 000b 00       		.byte	0
 583 000c 0000     		.2byte	0
 584 000e 0000     		.2byte	0
 585 0010 00000000 		.4byte	.LFB0
 586 0014 2C000000 		.4byte	.LFE0-.LFB0
 587 0018 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cctzV2td.s 			page 15


 588 001c 20000000 		.4byte	.LFE1-.LFB1
 589 0020 00000000 		.4byte	.LFB2
 590 0024 44000000 		.4byte	.LFE2-.LFB2
 591 0028 00000000 		.4byte	.LFB3
 592 002c 18000000 		.4byte	.LFE3-.LFB3
 593 0030 00000000 		.4byte	.LFB4
 594 0034 0C000000 		.4byte	.LFE4-.LFB4
 595 0038 00000000 		.4byte	0
 596 003c 00000000 		.4byte	0
 597              		.section	.debug_ranges,"",%progbits
 598              	.Ldebug_ranges0:
 599 0000 00000000 		.4byte	.LFB0
 600 0004 2C000000 		.4byte	.LFE0
 601 0008 00000000 		.4byte	.LFB1
 602 000c 20000000 		.4byte	.LFE1
 603 0010 00000000 		.4byte	.LFB2
 604 0014 44000000 		.4byte	.LFE2
 605 0018 00000000 		.4byte	.LFB3
 606 001c 18000000 		.4byte	.LFE3
 607 0020 00000000 		.4byte	.LFB4
 608 0024 0C000000 		.4byte	.LFE4
 609 0028 00000000 		.4byte	0
 610 002c 00000000 		.4byte	0
 611              		.section	.debug_line,"",%progbits
 612              	.Ldebug_line0:
 613 0000 C1000000 		.section	.debug_str,"MS",%progbits,1
 613      02004500 
 613      00000201 
 613      FB0E0D00 
 613      01010101 
 614              	.LASF15:
 615 0000 72656733 		.ascii	"reg32\000"
 615      3200
 616              	.LASF21:
 617 0006 6D61736B 		.ascii	"maskVal\000"
 617      56616C00 
 618              	.LASF24:
 619 000e 436C6B5F 		.ascii	"Clk_1kHz_GetFractionalDividerRegister\000"
 619      316B487A 
 619      5F476574 
 619      46726163 
 619      74696F6E 
 620              	.LASF12:
 621 0034 666C6F61 		.ascii	"float\000"
 621      7400
 622              	.LASF17:
 623 003a 436C6B5F 		.ascii	"Clk_1kHz_SetFractionalDividerRegister\000"
 623      316B487A 
 623      5F536574 
 623      46726163 
 623      74696F6E 
 624              	.LASF27:
 625 0060 433A5C55 		.ascii	"C:\\Users\\Christopher Kuzma\\Downloads\\Cypress Th"
 625      73657273 
 625      5C436872 
 625      6973746F 
 625      70686572 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cctzV2td.s 			page 16


 626 008f 696E675C 		.ascii	"ing\\EnvironmentSensing.cydsn\\EnvironmentSensing.c"
 626      456E7669 
 626      726F6E6D 
 626      656E7453 
 626      656E7369 
 627 00c0 7964736E 		.ascii	"ydsn\000"
 627      00
 628              	.LASF23:
 629 00c5 436C6B5F 		.ascii	"Clk_1kHz_GetDividerRegister\000"
 629      316B487A 
 629      5F476574 
 629      44697669 
 629      64657252 
 630              	.LASF5:
 631 00e1 6C6F6E67 		.ascii	"long unsigned int\000"
 631      20756E73 
 631      69676E65 
 631      6420696E 
 631      7400
 632              	.LASF3:
 633 00f3 73686F72 		.ascii	"short unsigned int\000"
 633      7420756E 
 633      7369676E 
 633      65642069 
 633      6E7400
 634              	.LASF16:
 635 0106 436C6B5F 		.ascii	"Clk_1kHz_StartEx\000"
 635      316B487A 
 635      5F537461 
 635      72744578 
 635      00
 636              	.LASF1:
 637 0117 756E7369 		.ascii	"unsigned char\000"
 637      676E6564 
 637      20636861 
 637      7200
 638              	.LASF19:
 639 0125 636C6B44 		.ascii	"clkDivider\000"
 639      69766964 
 639      657200
 640              	.LASF13:
 641 0130 646F7562 		.ascii	"double\000"
 641      6C6500
 642              	.LASF22:
 643 0137 72656756 		.ascii	"regVal\000"
 643      616C00
 644              	.LASF18:
 645 013e 616C6967 		.ascii	"alignClkDiv\000"
 645      6E436C6B 
 645      44697600 
 646              	.LASF20:
 647 014a 636C6B46 		.ascii	"clkFractional\000"
 647      72616374 
 647      696F6E61 
 647      6C00
 648              	.LASF10:
 649 0158 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cctzV2td.s 			page 17


 649      313600
 650              	.LASF26:
 651 015f 47656E65 		.ascii	"Generated_Source\\PSoC4\\Clk_1kHz.c\000"
 651      72617465 
 651      645F536F 
 651      75726365 
 651      5C50536F 
 652              	.LASF11:
 653 0181 75696E74 		.ascii	"uint32\000"
 653      333200
 654              	.LASF8:
 655 0188 756E7369 		.ascii	"unsigned int\000"
 655      676E6564 
 655      20696E74 
 655      00
 656              	.LASF7:
 657 0195 6C6F6E67 		.ascii	"long long unsigned int\000"
 657      206C6F6E 
 657      6720756E 
 657      7369676E 
 657      65642069 
 658              	.LASF25:
 659 01ac 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 659      4320342E 
 659      392E3320 
 659      32303135 
 659      30333033 
 660 01df 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 660      20726576 
 660      6973696F 
 660      6E203232 
 660      31323230 
 661 0212 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 661      30202D66 
 661      66756E63 
 661      74696F6E 
 661      2D736563 
 662              	.LASF6:
 663 023e 6C6F6E67 		.ascii	"long long int\000"
 663      206C6F6E 
 663      6720696E 
 663      7400
 664              	.LASF14:
 665 024c 63686172 		.ascii	"char\000"
 665      00
 666              	.LASF2:
 667 0251 73686F72 		.ascii	"short int\000"
 667      7420696E 
 667      7400
 668              	.LASF9:
 669 025b 75696E74 		.ascii	"uint8\000"
 669      3800
 670              	.LASF4:
 671 0261 6C6F6E67 		.ascii	"long int\000"
 671      20696E74 
 671      00
 672              	.LASF28:
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\cctzV2td.s 			page 18


 673 026a 436C6B5F 		.ascii	"Clk_1kHz_Stop\000"
 673      316B487A 
 673      5F53746F 
 673      7000
 674              	.LASF0:
 675 0278 7369676E 		.ascii	"signed char\000"
 675      65642063 
 675      68617200 
 676              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
